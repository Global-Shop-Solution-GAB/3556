Program.Sub.ScreenSU.Start
Gui.SS_Drift..create
Gui.SS_Drift..caption("Drift")
Gui.SS_Drift..size(6030,5850)
Gui.SS_Drift..minx(0)
Gui.SS_Drift..miny(0)
Gui.SS_Drift..position(0,0)
Gui.SS_Drift..event(UnLoad,ss_drift_unload)
Gui.SS_Drift..forecolor(0)
Gui.SS_Drift..fontstyle(,,,)
Gui.SS_Drift..BackColor(-2147483633)
Gui.SS_Drift..maxbutton(False)
Gui.SS_Drift..minbutton(False)
Gui.SS_Drift..mousepointer(0)
Gui.SS_Drift..sizeable(False)
Gui.SS_Drift.lbl_txtJob.create(label,"Job",True,1800,200,1,120,90,True,0,Arial,8,-2147483633,0)
Gui.SS_Drift.lbl_txtJob.defaultvalue("")
Gui.SS_Drift.txtJob.create(textbox,"",True,1800,330,0,85,280,False,0,Arial,8,16777215,1)
Gui.SS_Drift.txtJob.defaultvalue("")
Gui.SS_Drift.txtJob.tabstop(True)
Gui.SS_Drift.txtJob.tabindex(3)
Gui.SS_Drift.lbl_txtSuff.create(label,"Suffix",True,1800,200,1,1970,105,True,0,Arial,8,-2147483633,0)
Gui.SS_Drift.lbl_txtSuff.defaultvalue("")
Gui.SS_Drift.txtSuff.create(textbox,"",True,1095,330,0,1960,280,False,0,Arial,8,16777215,1)
Gui.SS_Drift.txtSuff.defaultvalue("")
Gui.SS_Drift.txtSuff.tabstop(True)
Gui.SS_Drift.txtSuff.tabindex(4)
Gui.SS_Drift.lbl_txtSerial.create(label,"Serial",True,1800,200,1,95,645,True,0,Arial,8,-2147483633,0)
Gui.SS_Drift.lbl_txtSerial.defaultvalue("")
Gui.SS_Drift.txtSerial.create(textbox,"",True,2970,330,0,85,860,False,0,Arial,8,16777215,1)
Gui.SS_Drift.txtSerial.defaultvalue("")
Gui.SS_Drift.txtSerial.tabstop(True)
Gui.SS_Drift.txtSerial.tabindex(5)
Gui.SS_Drift.lbl_txtScreen.create(label,"Screen ID",True,1800,200,1,100,1215,True,0,Arial,8,-2147483633,0)
Gui.SS_Drift.lbl_txtScreen.defaultvalue("")
Gui.SS_Drift.lbl_ddlAR.create(label,"Accept / Reject",True,1800,215,1,130,1920,True,0,Arial,8,-2147483633,0)
Gui.SS_Drift.lbl_ddlAR.defaultvalue("")
Gui.SS_Drift.ddlAR.create(dropdownlist)
Gui.SS_Drift.ddlAR.size(1800,330)
Gui.SS_Drift.ddlAR.position(125,2150)
Gui.SS_Drift.ddlAR.defaultvalue("")
Gui.SS_Drift.ddlAR.tabstop(True)
Gui.SS_Drift.ddlAR.tabindex(7)
Gui.SS_Drift.cmdDriftSave.create(button)
Gui.SS_Drift.cmdDriftSave.caption("Save")
Gui.SS_Drift.cmdDriftSave.size(1000,360)
Gui.SS_Drift.cmdDriftSave.position(125,4815)
Gui.SS_Drift.cmdDriftSave.event(Click,cmddriftsave_click)
Gui.SS_Drift.cmdDriftSave.defaultvalue("")
Gui.SS_Drift.cmdDriftSave.tabstop(True)
Gui.SS_Drift.cmdDriftSave.tabindex(8)
Gui.SS_Drift.gsflexgrid1.create(gsflexgrid)
Gui.SS_Drift.gsflexgrid1.size(5550,2130)
Gui.SS_Drift.gsflexgrid1.position(100,2635)
Gui.SS_Drift.ddlScreenID.create(dropdownlist)
Gui.SS_Drift.ddlScreenID.size(1800,330)
Gui.SS_Drift.ddlScreenID.position(100,1455)
Gui.SS_Drift.ddlScreenID.event(Click,ddlscreenid_change)
Gui.SS_Drift.ddlScreenID.defaultvalue("")
Gui.SS_Drift.txtSeq.create(textbox,"",True,1305,330,0,3260,280,False,0,Arial,8,-2147483643,1)
Gui.SS_Drift.txtSeq.defaultvalue("")
Gui.SS_Drift.lbl6.create(label,"Seq",True,1935,255,1,3280,75,True,0,Arial,8,-2147483633,0)
Gui.SS_Drift.lbl6.defaultvalue("")
Gui.SS_LDPT..create
Gui.SS_LDPT..caption("Liquid Dye Penetrant Test")
Gui.SS_LDPT..size(12825,4515)
Gui.SS_LDPT..minx(0)
Gui.SS_LDPT..miny(0)
Gui.SS_LDPT..position(0,0)
Gui.SS_LDPT..event(UnLoad,ss_ldpt_unload)
Gui.SS_LDPT..forecolor(0)
Gui.SS_LDPT..fontstyle(,,,)
Gui.SS_LDPT..BackColor(-2147483633)
Gui.SS_LDPT..maxbutton(False)
Gui.SS_LDPT..minbutton(False)
Gui.SS_LDPT..mousepointer(0)
Gui.SS_LDPT..sizeable(False)
Gui.SS_LDPT.lbl_txtJob.create(label,"Job",True,1800,200,1,100,95,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl_txtJob.defaultvalue("")
Gui.SS_LDPT.txtJob.create(textbox,"",True,1800,300,0,100,275,False,0,Arial,8,16777215,1)
Gui.SS_LDPT.txtJob.defaultvalue("")
Gui.SS_LDPT.txtJob.tabindex(20)
Gui.SS_LDPT.lbl_txtSuff.create(label,"Suffix",True,1800,170,1,1930,85,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl_txtSuff.defaultvalue("")
Gui.SS_LDPT.txtSuff.create(textbox,"",True,1065,315,0,1930,275,False,0,Arial,8,16777215,1)
Gui.SS_LDPT.txtSuff.defaultvalue("")
Gui.SS_LDPT.txtSuff.tabindex(21)
Gui.SS_LDPT.lbl_txtSerial.create(label,"Serial",True,1800,200,1,4865,75,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl_txtSerial.defaultvalue("")
Gui.SS_LDPT.txtSerial.create(textbox,"",True,2760,330,0,4855,275,False,0,Arial,8,16777215,1)
Gui.SS_LDPT.txtSerial.defaultvalue("")
Gui.SS_LDPT.lbl_ddlAR.create(label,"Accept / Reject",True,1800,200,1,100,700,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl_ddlAR.defaultvalue("")
Gui.SS_LDPT.ddlAR.create(dropdownlist)
Gui.SS_LDPT.ddlAR.size(1800,330)
Gui.SS_LDPT.ddlAR.position(100,900)
Gui.SS_LDPT.ddlAR.defaultvalue("")
Gui.SS_LDPT.cmdLDPTSave.create(button)
Gui.SS_LDPT.cmdLDPTSave.caption("Save")
Gui.SS_LDPT.cmdLDPTSave.size(1000,390)
Gui.SS_LDPT.cmdLDPTSave.position(100,3325)
Gui.SS_LDPT.cmdLDPTSave.event(Click,cmdldpts_save_click)
Gui.SS_LDPT.cmdLDPTSave.defaultvalue("")
Gui.SS_LDPT.cmdLDPTSave.tabstop(True)
Gui.SS_LDPT.cmdLDPTSave.tabindex(10)
Gui.SS_LDPT.gsflexgrid1.create(gsflexgrid)
Gui.SS_LDPT.gsflexgrid1.size(12150,855)
Gui.SS_LDPT.gsflexgrid1.position(90,2385)
Gui.SS_LDPT.gsflexgrid1.tabstop(True)
Gui.SS_LDPT.gsflexgrid1.tabindex(9)
Gui.SS_LDPT.txtCleanerType.create(textbox,"",True,1400,300,0,100,1740,True,0,Arial,8,-2147483643,1)
Gui.SS_LDPT.txtCleanerType.maxLength(20)
Gui.SS_LDPT.txtCleanerType.defaultvalue("")
Gui.SS_LDPT.txtCleanerType.tabstop(True)
Gui.SS_LDPT.txtCleanerType.tabindex(1)
Gui.SS_LDPT.lbl7.create(label,"Cleaner Type",True,1515,270,1,100,1540,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl7.defaultvalue("")
Gui.SS_LDPT.txtPenetrantType.create(textbox,"",True,1400,300,0,1540,1740,True,0,Arial,8,-2147483643,1)
Gui.SS_LDPT.txtPenetrantType.maxLength(20)
Gui.SS_LDPT.txtPenetrantType.defaultvalue("")
Gui.SS_LDPT.txtPenetrantType.tabstop(True)
Gui.SS_LDPT.txtPenetrantType.tabindex(2)
Gui.SS_LDPT.txtDeveloperType.create(textbox,"",True,1400,300,0,2980,1740,True,0,Arial,8,-2147483643,1)
Gui.SS_LDPT.txtDeveloperType.maxLength(20)
Gui.SS_LDPT.txtDeveloperType.defaultvalue("")
Gui.SS_LDPT.txtDeveloperType.tabstop(True)
Gui.SS_LDPT.txtDeveloperType.tabindex(3)
Gui.SS_LDPT.lbl8.create(label,"Penetrant Type",True,1665,195,1,1570,1540,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl8.defaultvalue("")
Gui.SS_LDPT.lbl9.create(label,"Developer Type",True,1290,255,1,2995,1540,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl9.defaultvalue("")
Gui.SS_LDPT.frame1.create(frame)
Gui.SS_LDPT.frame1.size(12135,135)
Gui.SS_LDPT.frame1.position(105,1380)
Gui.SS_LDPT.txtPipeSurfType.create(textbox,"",True,1400,300,0,7255,1740,True,0,Arial,8,-2147483643,1)
Gui.SS_LDPT.txtPipeSurfType.maxLength(20)
Gui.SS_LDPT.txtPipeSurfType.defaultvalue("")
Gui.SS_LDPT.txtPipeSurfType.tabstop(True)
Gui.SS_LDPT.txtPipeSurfType.tabindex(6)
Gui.SS_LDPT.txtPreCleanDryTime.create(textbox,"",True,1400,300,0,8685,1740,True,0,Arial,8,-2147483643,1)
Gui.SS_LDPT.txtPreCleanDryTime.maxLength(20)
Gui.SS_LDPT.txtPreCleanDryTime.defaultvalue("")
Gui.SS_LDPT.txtPreCleanDryTime.tabstop(True)
Gui.SS_LDPT.txtPreCleanDryTime.tabindex(7)
Gui.SS_LDPT.txtPenetrantDryTime.create(textbox,"",True,1400,300,0,5825,1740,True,0,Arial,8,-2147483643,1)
Gui.SS_LDPT.txtPenetrantDryTime.maxLength(20)
Gui.SS_LDPT.txtPenetrantDryTime.defaultvalue("")
Gui.SS_LDPT.txtPenetrantDryTime.tabstop(True)
Gui.SS_LDPT.txtPenetrantDryTime.tabindex(5)
Gui.SS_LDPT.lbl10.create(label,"Pipe Surface Temp",True,1650,255,1,7260,1550,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl10.defaultvalue("")
Gui.SS_LDPT.lbl11.create(label,"Pre-Clean Dry Time",True,1620,255,1,8705,1550,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl11.defaultvalue("")
Gui.SS_LDPT.lbl12.create(label,"Penetrant Dry Time",True,1500,255,1,5840,1550,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl12.defaultvalue("")
Gui.SS_LDPT.txtPostRemDry.create(textbox,"",True,1400,300,0,4415,1740,True,0,Arial,8,-2147483643,1)
Gui.SS_LDPT.txtPostRemDry.maxLength(20)
Gui.SS_LDPT.txtPostRemDry.defaultvalue("")
Gui.SS_LDPT.txtPostRemDry.tabstop(True)
Gui.SS_LDPT.txtPostRemDry.tabindex(4)
Gui.SS_LDPT.txtDevDryTime.create(textbox,"",True,1400,300,0,10125,1740,True,0,Arial,8,-2147483643,1)
Gui.SS_LDPT.txtDevDryTime.maxLength(20)
Gui.SS_LDPT.txtDevDryTime.defaultvalue("")
Gui.SS_LDPT.txtDevDryTime.tabstop(True)
Gui.SS_LDPT.txtDevDryTime.tabindex(8)
Gui.SS_LDPT.lbl13.create(label,"Post Removal Dry Time",True,1575,255,1,4415,1540,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl13.defaultvalue("")
Gui.SS_LDPT.lbl14.create(label,"Developer Dry Time",True,1530,255,1,10155,1530,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl14.defaultvalue("")
Gui.SS_LDPT.frame2.create(frame)
Gui.SS_LDPT.frame2.size(12135,135)
Gui.SS_LDPT.frame2.position(100,2100)
Gui.SS_LDPT.txtSeq.create(textbox,"",True,1080,330,0,3200,275,False,0,Arial,8,16777215,1)
Gui.SS_LDPT.txtSeq.defaultvalue("")
Gui.SS_LDPT.txtSeq.tabindex(22)
Gui.SS_LDPT.lbl15.create(label,"Seq",True,1935,255,1,3200,75,True,0,Arial,8,-2147483633,0)
Gui.SS_LDPT.lbl15.defaultvalue("")
Gui.SS_Heat..create
Gui.SS_Heat..caption("Oven Temperature Checks")
Gui.SS_Heat..size(5910,5820)
Gui.SS_Heat..minx(0)
Gui.SS_Heat..miny(0)
Gui.SS_Heat..position(0,0)
Gui.SS_Heat..event(UnLoad,ss_heat_unload)
Gui.SS_Heat..forecolor(0)
Gui.SS_Heat..fontstyle(,,,)
Gui.SS_Heat..BackColor(-2147483633)
Gui.SS_Heat..maxbutton(False)
Gui.SS_Heat..minbutton(False)
Gui.SS_Heat..mousepointer(0)
Gui.SS_Heat..sizeable(False)
Gui.SS_Heat.lbl_ddlAR.create(label,"Accept / Reject",True,1800,200,1,100,10,True,0,Arial,8,-2147483633,0)
Gui.SS_Heat.lbl_ddlAR.defaultvalue("")
Gui.SS_Heat.ddlAR.create(dropdownlist)
Gui.SS_Heat.ddlAR.size(1800,330)
Gui.SS_Heat.ddlAR.position(90,255)
Gui.SS_Heat.ddlAR.defaultvalue("")
Gui.SS_Heat.ddlAR.tabstop(True)
Gui.SS_Heat.ddlAR.tabindex(9)
Gui.SS_Heat.cmdHeatSave.create(button)
Gui.SS_Heat.cmdHeatSave.caption("Save")
Gui.SS_Heat.cmdHeatSave.size(1000,360)
Gui.SS_Heat.cmdHeatSave.position(90,4370)
Gui.SS_Heat.cmdHeatSave.event(Click,cmdheatsave_click)
Gui.SS_Heat.cmdHeatSave.defaultvalue("")
Gui.SS_Heat.cmdHeatSave.tabstop(True)
Gui.SS_Heat.cmdHeatSave.tabindex(10)
Gui.SS_Heat.lvw1.create(listview)
Gui.SS_Heat.lvw1.view(3)
Gui.SS_Heat.lvw1.addlistviewcolumn("Serial Number",2745,0)
Gui.SS_Heat.lvw1.addlistviewcolumn("Batch",1530,0)
Gui.SS_Heat.lvw1.size(5475,2430)
Gui.SS_Heat.lvw1.position(75,1885)
Gui.SS_Heat.lvw1.event(DblClick,lvw1_dblclick)
Gui.SS_Heat.txtSerialNum.create(textbox,"",True,1755,300,0,90,935,True,0,Arial,8,-2147483643,1)
Gui.SS_Heat.txtSerialNum.maxLength(20)
Gui.SS_Heat.txtSerialNum.defaultvalue("")
Gui.SS_Heat.lbl7.create(label,"Serial Number",True,1935,255,1,85,715,True,0,Arial,8,-2147483633,0)
Gui.SS_Heat.lbl7.defaultvalue("")
Gui.SS_Heat.cmdUpdateSN.create(button)
Gui.SS_Heat.cmdUpdateSN.caption("Update Serial")
Gui.SS_Heat.cmdUpdateSN.size(1090,375)
Gui.SS_Heat.cmdUpdateSN.position(1295,1370)
Gui.SS_Heat.cmdUpdateSN.enabled(False)
Gui.SS_Heat.cmdUpdateSN.event(Click,cmdsavesn_click)
Gui.SS_Heat.cmdUpdateSN.defaultvalue("")
Gui.SS_Heat.txtBatchNum.create(textbox,"",True,1800,300,0,1880,935,False,0,Arial,8,-2147483643,1)
Gui.SS_Heat.txtBatchNum.numericonly(1)
Gui.SS_Heat.txtBatchNum.defaultvalue("")
Gui.SS_Heat.lbl8.create(label,"Batch",True,885,255,1,1895,715,True,0,Arial,8,-2147483633,0)
Gui.SS_Heat.lbl8.defaultvalue("")
Gui.SS_Heat.cmdAddSerial.create(button)
Gui.SS_Heat.cmdAddSerial.caption("Add Serial")
Gui.SS_Heat.cmdAddSerial.size(1090,375)
Gui.SS_Heat.cmdAddSerial.position(60,1370)
Gui.SS_Heat.cmdAddSerial.event(Click,cmdaddserial_click)
Gui.SS_Heat.cmdAddSerial.defaultvalue("")
Gui.SS_Heat.cmdHeatChecks.create(button)
Gui.SS_Heat.cmdHeatChecks.caption("Oven Temp Checks")
Gui.SS_Heat.cmdHeatChecks.size(1680,375)
Gui.SS_Heat.cmdHeatChecks.position(1200,4355)
Gui.SS_Heat.cmdHeatChecks.event(Click,cmdheatchecks_click)
Gui.SS_Heat.cmdHeatChecks.defaultvalue("")
Gui.SS_Heat.cmdBtchBrws.create(button)
Gui.SS_Heat.cmdBtchBrws.caption("^")
Gui.SS_Heat.cmdBtchBrws.size(450,375)
Gui.SS_Heat.cmdBtchBrws.position(3700,875)
Gui.SS_Heat.cmdBtchBrws.event(Click,cmdbtchbrws_click)
Gui.SS_Heat.cmdBtchBrws.defaultvalue("")
Gui.SS_Heat.cmdDeleteSN.create(button)
Gui.SS_Heat.cmdDeleteSN.caption("Delete Serial Number")
Gui.SS_Heat.cmdDeleteSN.size(1765,375)
Gui.SS_Heat.cmdDeleteSN.position(2535,1370)
Gui.SS_Heat.cmdDeleteSN.event(Click,cmddeletesn_click)
Gui.SS_Heat.cmdDeleteSN.defaultvalue("")
Gui.SS_MainForm..create
Gui.SS_MainForm..caption("Main Form")
Gui.SS_MainForm..size(4950,3180)
Gui.SS_MainForm..minx(0)
Gui.SS_MainForm..miny(0)
Gui.SS_MainForm..position(0,0)
Gui.SS_MainForm..event(UnLoad,ss_mainform_unload)
Gui.SS_MainForm..forecolor(0)
Gui.SS_MainForm..fontstyle(,,,)
Gui.SS_MainForm..BackColor(-2147483633)
Gui.SS_MainForm..maxbutton(False)
Gui.SS_MainForm..minbutton(False)
Gui.SS_MainForm..mousepointer(0)
Gui.SS_MainForm..sizeable(False)
Gui.SS_MainForm.lbl_ddlForms.create(label,"Select Log Sheet",True,1800,200,1,100,1380,True,0,Arial,8,-2147483633,0)
Gui.SS_MainForm.lbl_ddlForms.defaultvalue("")
Gui.SS_MainForm.ddlForms.create(dropdownlist)
Gui.SS_MainForm.ddlForms.size(3150,330)
Gui.SS_MainForm.ddlForms.position(100,1610)
Gui.SS_MainForm.ddlForms.defaultvalue("")
Gui.SS_MainForm.ddlForms.tabstop(True)
Gui.SS_MainForm.ddlForms.tabindex(4)
Gui.SS_MainForm.lbl_txtJob.create(label,"Job",True,1800,200,1,100,75,True,0,Arial,8,-2147483633,0)
Gui.SS_MainForm.lbl_txtJob.defaultvalue("")
Gui.SS_MainForm.txtJob.create(textbox,"",True,1800,330,0,100,275,False,0,Arial,8,16777215,1)
Gui.SS_MainForm.txtJob.defaultvalue("")
Gui.SS_MainForm.txtJob.tabstop(True)
Gui.SS_MainForm.txtJob.tabindex(1)
Gui.SS_MainForm.lbl_txtSuff.create(label,"Suffix",True,1800,200,1,1960,75,True,0,Arial,8,-2147483633,0)
Gui.SS_MainForm.lbl_txtSuff.defaultvalue("")
Gui.SS_MainForm.txtSuff.create(textbox,"",True,1230,330,0,1930,270,False,0,Arial,8,16777215,1)
Gui.SS_MainForm.txtSuff.defaultvalue("")
Gui.SS_MainForm.txtSuff.tabstop(True)
Gui.SS_MainForm.txtSuff.tabindex(2)
Gui.SS_MainForm.lbl_txtSerial.create(label,"Serial Number",True,1800,200,1,85,660,True,0,Arial,8,-2147483633,0)
Gui.SS_MainForm.lbl_txtSerial.defaultvalue("")
Gui.SS_MainForm.txtSerial.create(textbox,"",True,3060,330,0,100,900,True,0,Arial,8,16777215,1)
Gui.SS_MainForm.txtSerial.defaultvalue("")
Gui.SS_MainForm.txtSerial.tabstop(True)
Gui.SS_MainForm.txtSerial.tabindex(3)
Gui.SS_MainForm.cmdMainOK.create(button)
Gui.SS_MainForm.cmdMainOK.caption("Ok")
Gui.SS_MainForm.cmdMainOK.size(1000,360)
Gui.SS_MainForm.cmdMainOK.position(100,2065)
Gui.SS_MainForm.cmdMainOK.event(Click,cmdmainok_click)
Gui.SS_MainForm.cmdMainOK.defaultvalue("")
Gui.SS_MainForm.cmdMainOK.tabstop(True)
Gui.SS_MainForm.cmdMainOK.tabindex(5)
Gui.SS_MainForm.txtSeq.create(textbox,"",True,1335,330,0,3200,270,False,0,Arial,8,16777215,1)
Gui.SS_MainForm.txtSeq.defaultvalue("")
Gui.SS_MainForm.txtSeq.tabstop(True)
Gui.SS_MainForm.txtSeq.tabindex(20)
Gui.SS_MainForm.lbl5.create(label,"Seq",True,1935,255,1,3205,75,True,0,Arial,8,-2147483633,0)
Gui.SS_MainForm.lbl5.defaultvalue("")
Gui.SS_PullTest..create
Gui.SS_PullTest..caption("Slot Check")
Gui.SS_PullTest..size(10635,4680)
Gui.SS_PullTest..minx(0)
Gui.SS_PullTest..miny(0)
Gui.SS_PullTest..position(0,0)
Gui.SS_PullTest..event(UnLoad,ss_pulltest_unload)
Gui.SS_PullTest..forecolor(0)
Gui.SS_PullTest..fontstyle(,,,)
Gui.SS_PullTest..BackColor(-2147483633)
Gui.SS_PullTest..mousepointer(0)
Gui.SS_PullTest..sizeable(False)
Gui.SS_PullTest.Job.create(label,"Job",True,1590,255,1,90,40,True,0,Arial,8,-2147483633,0)
Gui.SS_PullTest.Job.defaultvalue("")
Gui.SS_PullTest.lbl2.create(label,"Suffix",True,1935,255,1,1930,55,True,0,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl2.defaultvalue("")
Gui.SS_PullTest.lbl3.create(label,"Serial",True,1935,255,1,4745,60,True,0,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl3.defaultvalue("")
Gui.SS_PullTest.lbl4.create(label,"Screen ID",True,1035,255,1,110,690,True,0,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl4.defaultvalue("")
Gui.SS_PullTest.lbl6.create(label,"Accept / Reject",True,1500,255,1,110,1305,True,0,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl6.defaultvalue("")
Gui.SS_PullTest.txtJob.create(textbox,"",True,1800,300,0,100,240,False,0,Arial,8,-2147483643,1)
Gui.SS_PullTest.txtJob.defaultvalue("")
Gui.SS_PullTest.txtSuff.create(textbox,"",True,1125,300,0,1930,240,False,0,Arial,8,-2147483643,1)
Gui.SS_PullTest.txtSuff.defaultvalue("")
Gui.SS_PullTest.cmdPTSave.create(button)
Gui.SS_PullTest.cmdPTSave.caption("Save")
Gui.SS_PullTest.cmdPTSave.size(1005,375)
Gui.SS_PullTest.cmdPTSave.position(270,3570)
Gui.SS_PullTest.cmdPTSave.event(Click,cmdptsave_click)
Gui.SS_PullTest.cmdPTSave.defaultvalue("")
Gui.SS_PullTest.txtSerial.create(textbox,"",True,2220,300,0,4690,245,False,0,Arial,8,-2147483643,1)
Gui.SS_PullTest.txtSerial.defaultvalue("")
Gui.SS_PullTest.ddlAR.create(dropdownlist)
Gui.SS_PullTest.ddlAR.size(1800,330)
Gui.SS_PullTest.ddlAR.position(100,1515)
Gui.SS_PullTest.ddlAR.defaultvalue("")
Gui.SS_PullTest.ddlAR.tabstop(True)
Gui.SS_PullTest.ddlAR.tabindex(1)
Gui.SS_PullTest.ddlScreenID.create(dropdownlist)
Gui.SS_PullTest.ddlScreenID.size(1800,330)
Gui.SS_PullTest.ddlScreenID.position(90,920)
Gui.SS_PullTest.ddlScreenID.event(Click,ddlslot_check_screenid_click)
Gui.SS_PullTest.ddlScreenID.defaultvalue("")
Gui.SS_PullTest.gsflexgridPT.create(gsflexgrid)
Gui.SS_PullTest.gsflexgridPT.size(9000,1185)
Gui.SS_PullTest.gsflexgridPT.position(1005,2280)
Gui.SS_PullTest.gsflexgridPT.event(CellExit,gsflexgridpt_cellexit)
Gui.SS_PullTest.gsflexgridPT.tabstop(True)
Gui.SS_PullTest.gsflexgridPT.tabindex(3)
Gui.SS_PullTest.lbl7.create(label,"Beginning",True,900,255,1,75,2565,True,1,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl7.defaultvalue("")
Gui.SS_PullTest.lbl8.create(label,"Middle",True,900,255,1,75,2835,True,1,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl8.defaultvalue("")
Gui.SS_PullTest.lbl9.create(label,"End",True,900,255,1,75,3090,True,1,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl9.defaultvalue("")
Gui.SS_PullTest.lbl10.create(label,"Test No",True,870,255,1,90,2325,True,1,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl10.defaultvalue("")
Gui.SS_PullTest.cmdCopySlotS.create(button)
Gui.SS_PullTest.cmdCopySlotS.caption("Copy From")
Gui.SS_PullTest.cmdCopySlotS.size(990,375)
Gui.SS_PullTest.cmdCopySlotS.position(1395,3555)
Gui.SS_PullTest.cmdCopySlotS.event(Click,cmdcopyslots_click)
Gui.SS_PullTest.cmdCopySlotS.defaultvalue("")
Gui.SS_PullTest.txtSeq.create(textbox,"",True,1035,300,0,3150,245,False,0,Arial,8,-2147483643,1)
Gui.SS_PullTest.txtSeq.defaultvalue("")
Gui.SS_PullTest.lbl11.create(label,"Seq",True,1935,255,1,3170,45,True,0,Arial,8,-2147483633,0)
Gui.SS_PullTest.lbl11.defaultvalue("")
Gui.SS_SlotCheck..create
Gui.SS_SlotCheck..caption("Pull Test")
Gui.SS_SlotCheck..size(6375,3945)
Gui.SS_SlotCheck..minx(0)
Gui.SS_SlotCheck..miny(0)
Gui.SS_SlotCheck..position(0,0)
Gui.SS_SlotCheck..event(UnLoad,ss_slotcheck_unload)
Gui.SS_SlotCheck..forecolor(0)
Gui.SS_SlotCheck..fontstyle(,,,)
Gui.SS_SlotCheck..BackColor(-2147483633)
Gui.SS_SlotCheck..mousepointer(0)
Gui.SS_SlotCheck..sizeable(False)
Gui.SS_SlotCheck.txtJob.create(textbox,"",True,1800,330,0,50,200,False,0,Arial,8,16777215,1)
Gui.SS_SlotCheck.txtJob.defaultvalue("")
Gui.SS_SlotCheck.txtSerial.create(textbox,"",True,1800,330,0,4115,200,False,0,Arial,8,16777215,1)
Gui.SS_SlotCheck.txtSerial.defaultvalue("")
Gui.SS_SlotCheck.txtSuff.create(textbox,"",True,900,330,0,1890,200,False,0,Arial,8,16777215,1)
Gui.SS_SlotCheck.txtSuff.defaultvalue("")
Gui.SS_SlotCheck.lbl1.create(label,"Job",True,1935,255,1,55,0,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl1.defaultvalue("")
Gui.SS_SlotCheck.lbl2.create(label,"Suffix",True,1935,195,1,1885,0,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl2.defaultvalue("")
Gui.SS_SlotCheck.lbl3.create(label,"Serial",True,1935,255,1,4155,0,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl3.defaultvalue("")
Gui.SS_SlotCheck.cmdSlotSave.create(button)
Gui.SS_SlotCheck.cmdSlotSave.caption("Save")
Gui.SS_SlotCheck.cmdSlotSave.size(1000,375)
Gui.SS_SlotCheck.cmdSlotSave.position(75,2815)
Gui.SS_SlotCheck.cmdSlotSave.event(Click,cmdslotsave_click)
Gui.SS_SlotCheck.cmdSlotSave.defaultvalue("")
Gui.SS_SlotCheck.cmdSlotSave.tabstop(True)
Gui.SS_SlotCheck.cmdSlotSave.tabindex(8)
Gui.SS_SlotCheck.lbl6.create(label,"Screen ID",True,1935,255,1,55,605,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl6.defaultvalue("")
Gui.SS_SlotCheck.ddlAR.create(dropdownlist)
Gui.SS_SlotCheck.ddlAR.size(1800,330)
Gui.SS_SlotCheck.ddlAR.position(50,1340)
Gui.SS_SlotCheck.ddlAR.defaultvalue("")
Gui.SS_SlotCheck.ddlAR.tabstop(True)
Gui.SS_SlotCheck.ddlAR.tabindex(1)
Gui.SS_SlotCheck.lbl8.create(label,"Accept / Reject",True,1350,255,1,55,1150,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl8.defaultvalue("")
Gui.SS_SlotCheck.ddlScreenID.create(dropdownlist)
Gui.SS_SlotCheck.ddlScreenID.size(1800,330)
Gui.SS_SlotCheck.ddlScreenID.position(45,790)
Gui.SS_SlotCheck.ddlScreenID.event(Click,ddlpulltest_screenid_click)
Gui.SS_SlotCheck.ddlScreenID.defaultvalue("")
Gui.SS_SlotCheck.txtFT1.create(textbox,"",True,1215,300,0,600,1900,True,0,Arial,8,-2147483643,1)
Gui.SS_SlotCheck.txtFT1.event(Change,txtft1_change)
Gui.SS_SlotCheck.txtFT1.numericonly(1)
Gui.SS_SlotCheck.txtFT1.defaultvalue("")
Gui.SS_SlotCheck.txtFT1.tabstop(True)
Gui.SS_SlotCheck.txtFT1.tabindex(2)
Gui.SS_SlotCheck.txtFT2.create(textbox,"",True,1215,300,0,1840,1900,True,0,Arial,8,-2147483643,1)
Gui.SS_SlotCheck.txtFT2.event(Change,txtft2_change)
Gui.SS_SlotCheck.txtFT2.numericonly(1)
Gui.SS_SlotCheck.txtFT2.defaultvalue("")
Gui.SS_SlotCheck.txtFT2.tabstop(True)
Gui.SS_SlotCheck.txtFT2.tabindex(3)
Gui.SS_SlotCheck.txtFT3.create(textbox,"",True,1215,300,0,3080,1900,True,0,Arial,8,-2147483643,1)
Gui.SS_SlotCheck.txtFT3.event(Change,txtft3_change)
Gui.SS_SlotCheck.txtFT3.numericonly(1)
Gui.SS_SlotCheck.txtFT3.defaultvalue("")
Gui.SS_SlotCheck.txtFT3.tabstop(True)
Gui.SS_SlotCheck.txtFT3.tabindex(4)
Gui.SS_SlotCheck.txtFav.create(textbox,"",True,1215,270,0,4310,1900,False,0,Arial,8,-2147483643,1)
Gui.SS_SlotCheck.txtFav.numericonly(1)
Gui.SS_SlotCheck.txtFav.defaultvalue("")
Gui.SS_SlotCheck.txtBT1.create(textbox,"",True,1215,300,0,600,2240,True,0,Arial,8,-2147483643,1)
Gui.SS_SlotCheck.txtBT1.event(Change,txtbt1_change)
Gui.SS_SlotCheck.txtBT1.numericonly(1)
Gui.SS_SlotCheck.txtBT1.defaultvalue("")
Gui.SS_SlotCheck.txtBT1.tabstop(True)
Gui.SS_SlotCheck.txtBT1.tabindex(5)
Gui.SS_SlotCheck.txtBT2.create(textbox,"",True,1215,300,0,1840,2240,True,0,Arial,8,-2147483643,1)
Gui.SS_SlotCheck.txtBT2.event(Change,txtbt2_change)
Gui.SS_SlotCheck.txtBT2.numericonly(1)
Gui.SS_SlotCheck.txtBT2.defaultvalue("")
Gui.SS_SlotCheck.txtBT2.tabstop(True)
Gui.SS_SlotCheck.txtBT2.tabindex(6)
Gui.SS_SlotCheck.txtBT3.create(textbox,"",True,1215,300,0,3080,2240,True,0,Arial,8,-2147483643,1)
Gui.SS_SlotCheck.txtBT3.event(Change,txtbt3_change)
Gui.SS_SlotCheck.txtBT3.numericonly(1)
Gui.SS_SlotCheck.txtBT3.defaultvalue("")
Gui.SS_SlotCheck.txtBT3.tabstop(True)
Gui.SS_SlotCheck.txtBT3.tabindex(7)
Gui.SS_SlotCheck.txtBav.create(textbox,"",True,1215,300,0,4310,2240,False,0,Arial,8,-2147483643,1)
Gui.SS_SlotCheck.txtBav.defaultvalue("")
Gui.SS_SlotCheck.lbl7.create(label,"Front",True,405,255,1,175,1945,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl7.defaultvalue("")
Gui.SS_SlotCheck.lbl9.create(label,"Back",True,375,255,1,175,2270,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl9.defaultvalue("")
Gui.SS_SlotCheck.lbl10.create(label,"Test 1",True,1080,255,1,620,1715,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl10.defaultvalue("")
Gui.SS_SlotCheck.lbl11.create(label,"Test 2",True,1050,255,1,1860,1715,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl11.defaultvalue("")
Gui.SS_SlotCheck.lbl12.create(label,"Test 3",True,1065,255,1,3100,1715,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl12.defaultvalue("")
Gui.SS_SlotCheck.lbl13.create(label,"Average",True,1080,270,1,4345,1690,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl13.defaultvalue("")
Gui.SS_SlotCheck.cmdCopyFrom.create(button)
Gui.SS_SlotCheck.cmdCopyFrom.caption("Copy From")
Gui.SS_SlotCheck.cmdCopyFrom.visible(False)
Gui.SS_SlotCheck.cmdCopyFrom.size(1035,375)
Gui.SS_SlotCheck.cmdCopyFrom.position(1170,2815)
Gui.SS_SlotCheck.cmdCopyFrom.event(Click,cmdcopyfrom_click)
Gui.SS_SlotCheck.cmdCopyFrom.tooltip("Copy Information from a Previously completed Serial for this Job.")
Gui.SS_SlotCheck.cmdCopyFrom.defaultvalue("")
Gui.SS_SlotCheck.txtSeq.create(textbox,"",True,900,330,0,2885,200,False,0,Arial,8,16777215,1)
Gui.SS_SlotCheck.txtSeq.defaultvalue("")
Gui.SS_SlotCheck.lbl14.create(label,"Suffix",True,1935,195,1,200,200,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl14.defaultvalue("")
Gui.SS_SlotCheck.lbl15.create(label,"Seq",True,1935,255,1,2915,0,True,0,Arial,8,-2147483633,0)
Gui.SS_SlotCheck.lbl15.defaultvalue("")
Gui.HeatChecks..create
Gui.HeatChecks..caption("Oven Temperature Checks")
Gui.HeatChecks..size(5970,5010)
Gui.HeatChecks..minx(0)
Gui.HeatChecks..miny(0)
Gui.HeatChecks..position(0,0)
Gui.HeatChecks..event(UnLoad,heatchecks_unload)
Gui.HeatChecks..forecolor(0)
Gui.HeatChecks..fontstyle(,,,)
Gui.HeatChecks..BackColor(-2147483633)
Gui.HeatChecks..mousepointer(0)
Gui.HeatChecks..sizeable(False)
Gui.HeatChecks.lvw1.create(listview)
Gui.HeatChecks.lvw1.view(3)
Gui.HeatChecks.lvw1.addlistviewcolumn("Heat Checks",1980,0)
Gui.HeatChecks.lvw1.addlistviewcolumn("Time",1275,0)
Gui.HeatChecks.lvw1.size(5580,2040)
Gui.HeatChecks.lvw1.position(30,1765)
Gui.HeatChecks.txtTemp.create(textbox,"",True,1800,300,0,30,1385,True,0,Arial,8,-2147483643,1)
Gui.HeatChecks.txtTemp.numericonly(1)
Gui.HeatChecks.txtTemp.defaultvalue("")
Gui.HeatChecks.lbl1.create(label,"Temperature",True,1065,255,1,30,1175,True,0,Arial,8,-2147483633,0)
Gui.HeatChecks.lbl1.defaultvalue("")
Gui.HeatChecks.cmdTempAdd.create(button)
Gui.HeatChecks.cmdTempAdd.caption("Add")
Gui.HeatChecks.cmdTempAdd.size(1035,375)
Gui.HeatChecks.cmdTempAdd.position(2135,1325)
Gui.HeatChecks.cmdTempAdd.event(Click,cmdtempadd_click)
Gui.HeatChecks.cmdTempAdd.defaultvalue("")
Gui.HeatChecks.cmdTempSave.create(button)
Gui.HeatChecks.cmdTempSave.caption("Save")
Gui.HeatChecks.cmdTempSave.size(990,375)
Gui.HeatChecks.cmdTempSave.position(75,3855)
Gui.HeatChecks.cmdTempSave.event(Click,cmdtempsave_click)
Gui.HeatChecks.cmdTempSave.defaultvalue("")
Gui.HeatChecks.cmdEdit.create(button)
Gui.HeatChecks.cmdEdit.caption("Edit Serial")
Gui.HeatChecks.cmdEdit.size(1005,375)
Gui.HeatChecks.cmdEdit.position(1200,3850)
Gui.HeatChecks.cmdEdit.event(Click,cmdedit_click)
Gui.HeatChecks.cmdEdit.defaultvalue("")
Gui.HeatChecks.txtBatch.create(textbox,"",True,1800,300,0,30,215,False,0,Arial,8,-2147483643,1)
Gui.HeatChecks.txtBatch.numericonly(1)
Gui.HeatChecks.txtBatch.defaultvalue("")
Gui.HeatChecks.lbl4.create(label,"Batch",True,990,255,1,30,5,True,0,Arial,8,-2147483633,0)
Gui.HeatChecks.lbl4.defaultvalue("")
Gui.HeatChecks.ddlAR.create(dropdownlist)
Gui.HeatChecks.ddlAR.size(1800,330)
Gui.HeatChecks.ddlAR.position(30,735)
Gui.HeatChecks.ddlAR.defaultvalue("")
Gui.HeatChecks.lbl8.create(label,"Accept / Reject",True,1935,255,1,30,550,True,0,Arial,8,-2147483633,0)
Gui.HeatChecks.lbl8.defaultvalue("")
Gui.Stress_Weld..create
Gui.Stress_Weld..caption("Weld")
Gui.Stress_Weld..size(11880,12075)
Gui.Stress_Weld..minx(0)
Gui.Stress_Weld..miny(0)
Gui.Stress_Weld..position(0,0)
Gui.Stress_Weld..event(UnLoad,stress_weld_unload)
Gui.Stress_Weld..forecolor(0)
Gui.Stress_Weld..fontstyle(,,,)
Gui.Stress_Weld..BackColor(-2147483633)
Gui.Stress_Weld..mousepointer(0)
Gui.Stress_Weld..sizeable(False)
Gui.Stress_Weld.txtSerial.create(textbox,"",True,2235,300,0,4430,290,False,0,Arial,8,-2147483643,1)
Gui.Stress_Weld.txtSerial.defaultvalue("")
Gui.Stress_Weld.txtSuff.create(textbox,"",True,930,300,0,1895,290,False,0,Arial,8,-2147483643,1)
Gui.Stress_Weld.txtSuff.defaultvalue("")
Gui.Stress_Weld.txtJob.create(textbox,"",True,1800,300,0,85,290,False,0,Arial,8,-2147483643,1)
Gui.Stress_Weld.txtJob.defaultvalue("")
Gui.Stress_Weld.lbl1.create(label,"Job",True,1395,255,1,85,110,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl1.defaultvalue("")
Gui.Stress_Weld.lbl2.create(label,"Suffix",True,1455,255,1,1880,110,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl2.defaultvalue("")
Gui.Stress_Weld.lbl3.create(label,"Serial",True,1350,255,1,4415,100,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl3.defaultvalue("")
Gui.Stress_Weld.ddlAR.create(dropdownlist)
Gui.Stress_Weld.ddlAR.size(1800,330)
Gui.Stress_Weld.ddlAR.position(50,850)
Gui.Stress_Weld.ddlAR.defaultvalue("")
Gui.Stress_Weld.lbl4.create(label,"Accept/Reject",True,1380,255,1,60,645,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl4.defaultvalue("")
Gui.Stress_Weld.cmdWeldSave.create(button)
Gui.Stress_Weld.cmdWeldSave.caption("Save")
Gui.Stress_Weld.cmdWeldSave.size(1170,375)
Gui.Stress_Weld.cmdWeldSave.position(85,10960)
Gui.Stress_Weld.cmdWeldSave.event(Click,cmd1_weldsave)
Gui.Stress_Weld.cmdWeldSave.defaultvalue("")
Gui.Stress_Weld.cmdWeldSave.tabstop(True)
Gui.Stress_Weld.cmdWeldSave.tabindex(7)
Gui.Stress_Weld.cmdStressForm.create(button)
Gui.Stress_Weld.cmdStressForm.caption("Stress Form")
Gui.Stress_Weld.cmdStressForm.size(1170,375)
Gui.Stress_Weld.cmdStressForm.position(85,10485)
Gui.Stress_Weld.cmdStressForm.event(Click,cmdstressform_click)
Gui.Stress_Weld.cmdStressForm.defaultvalue("")
Gui.Stress_Weld.cmdStressForm.tabstop(True)
Gui.Stress_Weld.cmdStressForm.tabindex(6)
Gui.Stress_Weld.ddlWeld_ScreenID.create(dropdownlist)
Gui.Stress_Weld.ddlWeld_ScreenID.size(1800,330)
Gui.Stress_Weld.ddlWeld_ScreenID.position(1880,855)
Gui.Stress_Weld.ddlWeld_ScreenID.event(Click,ddlweld_screenid_click)
Gui.Stress_Weld.ddlWeld_ScreenID.defaultvalue("")
Gui.Stress_Weld.ddlWeld_ScreenID.tabstop(True)
Gui.Stress_Weld.ddlWeld_ScreenID.tabindex(1)
Gui.Stress_Weld.lbl5.create(label,"Screen ID",True,1215,255,1,1880,655,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl5.defaultvalue("")
Gui.Stress_Weld.gsflexgrid1.create(gsflexgrid)
Gui.Stress_Weld.gsflexgrid1.size(11490,3495)
Gui.Stress_Weld.gsflexgrid1.position(100,4500)
Gui.Stress_Weld.gsflexgrid1.event(CellEnter,gsflexgrid1_cellenter)
Gui.Stress_Weld.gsflexgrid1.event(CellExit,gsflexgrid1_cellexit)
Gui.Stress_Weld.gsflexgrid1.tabstop(True)
Gui.Stress_Weld.gsflexgrid1.tabindex(4)
Gui.Stress_Weld.lbl6.create(label,"Layout",True,1935,255,1,185,8250,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl6.defaultvalue("")
Gui.Stress_Weld.lbl7.create(label,"Weld",True,1935,255,1,175,4235,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl7.defaultvalue("")
Gui.Stress_Weld.lbl8.create(label,"Part Description",True,1935,255,1,85,1300,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl8.defaultvalue("")
Gui.Stress_Weld.mltxt1.create(textboxm)
Gui.Stress_Weld.mltxt1.size(9585,2565)
Gui.Stress_Weld.mltxt1.position(85,1500)
Gui.Stress_Weld.mltxt1.defaultvalue("")
Gui.Stress_Weld.mltxt1.tabstop(True)
Gui.Stress_Weld.mltxt1.tabindex(2)
Gui.Stress_Weld.gsfgScreens.create(gsflexgrid)
Gui.Stress_Weld.gsfgScreens.size(11505,1860)
Gui.Stress_Weld.gsfgScreens.position(100,8495)
Gui.Stress_Weld.txtSeq.create(textbox,"",True,1095,300,0,2875,285,False,0,Arial,8,-2147483643,1)
Gui.Stress_Weld.txtSeq.defaultvalue("")
Gui.Stress_Weld.lbl9.create(label,"Seq",True,1950,210,1,2915,85,True,0,Arial,8,-2147483633,0)
Gui.Stress_Weld.lbl9.defaultvalue("")
Gui.StressReliefV2..create
Gui.StressReliefV2..caption("Stress Relief")
Gui.StressReliefV2..size(7350,5700)
Gui.StressReliefV2..minx(0)
Gui.StressReliefV2..miny(0)
Gui.StressReliefV2..position(0,0)
Gui.StressReliefV2..event(UnLoad,stressreliefv2_unload)
Gui.StressReliefV2..forecolor(0)
Gui.StressReliefV2..fontstyle(,,,)
Gui.StressReliefV2..BackColor(-2147483633)
Gui.StressReliefV2..mousepointer(0)
Gui.StressReliefV2..sizeable(False)
Gui.StressReliefV2.txtSerial.create(textbox,"",True,2355,300,0,4115,290,True,0,Arial,8,-2147483643,1)
Gui.StressReliefV2.txtSerial.defaultvalue("")
Gui.StressReliefV2.txtSuff.create(textbox,"",True,795,300,0,1925,290,True,0,Arial,8,-2147483643,1)
Gui.StressReliefV2.txtSuff.defaultvalue("")
Gui.StressReliefV2.txtJob.create(textbox,"",True,1800,300,0,95,290,True,0,Arial,8,-2147483643,1)
Gui.StressReliefV2.txtJob.defaultvalue("")
Gui.StressReliefV2.lbl1.create(label,"Job",True,1680,255,1,110,95,True,0,Arial,8,-2147483633,0)
Gui.StressReliefV2.lbl1.defaultvalue("")
Gui.StressReliefV2.lbl2.create(label,"Suffix",True,1410,255,1,1975,100,True,0,Arial,8,-2147483633,0)
Gui.StressReliefV2.lbl2.defaultvalue("")
Gui.StressReliefV2.lbl3.create(label,"Serial",True,1230,255,1,4130,100,True,0,Arial,8,-2147483633,0)
Gui.StressReliefV2.lbl3.defaultvalue("")
Gui.StressReliefV2.gsflexgrid1.create(gsflexgrid)
Gui.StressReliefV2.gsflexgrid1.size(6795,3675)
Gui.StressReliefV2.gsflexgrid1.position(100,800)
Gui.StressReliefV2.cmdStess2Save.create(button)
Gui.StressReliefV2.cmdStess2Save.caption("Save")
Gui.StressReliefV2.cmdStess2Save.size(855,375)
Gui.StressReliefV2.cmdStess2Save.position(145,4540)
Gui.StressReliefV2.cmdStess2Save.event(Click,cmdstess2save_click)
Gui.StressReliefV2.cmdStess2Save.defaultvalue("")
Gui.StressReliefV2.txtSeq.create(textbox,"",True,840,300,0,2825,290,False,0,Arial,8,-2147483643,1)
Gui.StressReliefV2.txtSeq.defaultvalue("")
Gui.StressReliefV2.lbl4.create(label,"Seq",True,1935,255,1,2825,100,True,0,Arial,8,-2147483633,0)
Gui.StressReliefV2.lbl4.defaultvalue("")
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.Global.sWO.Declare(String)
Variable.Global.sSuff.Declare(String)
Variable.Global.iKey.Declare(Long,0)
Variable.Global.sOldSN.Declare(String)
Variable.Global.sSerial.Declare(String)
Variable.Global.sScreen.Declare(String)
Variable.Global.iC.Declare(Long,0)
Variable.Global.sForm.Declare(String)
Variable.UDT.uDrift.Define("sProcess",String,"Process")
Variable.UDT.uDrift.Define("sDrift_No",String,"Drift_No")
Variable.UDT.uLiquid_Dye_Test.Define("sWo",String,"Job")
Variable.UDT.uLiquid_Dye_Test.Define("sSuff",String,"Suffix")
Variable.UDT.uLiquid_Dye_Test.Define("sSerial",String,"Serial")
Variable.UDT.uLiquid_Dye_Test.Define("sCleanerType",String,"Cleaner_Type")
Variable.UDT.uLiquid_Dye_Test.Define("sPenType",String,"Penetrant_Type")
Variable.UDT.uLiquid_Dye_Test.Define("sDeveloper_Type",String,"Developer_Type")
Variable.UDT.uLiquid_Dye_Test.Define("sSurface_Type",String,"Surface_Temp")
Variable.UDT.uLiquid_Dye_Test.Define("sPre_Clean_Dry",String,"Pre_Clean_Dry")
Variable.UDT.uLiquid_Dye_Test.Define("sPenetrant_Dry",String,"Penetrant_Dry")
Variable.UDT.uLiquid_Dye_Test.Define("sPost_Removal_Dry",String,"Post_Removal_Dry")
Variable.UDT.uLiquid_Dye_Test.Define("sDeveloper_Dry",String,"Developer_Dry")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld1",String,"Weld_1")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld3",String,"Weld_3")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld2",String,"Weld_2")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld4",String,"Weld_4")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld5",String,"Weld_5")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld6",String,"Weld_6")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld7",String,"Weld_7")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld8",String,"Weld_8")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld9",String,"Weld_9")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld10",String,"Weld_10")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld11",String,"Weld_11")
Variable.UDT.uLiquid_Dye_Test.Define("sWeld12",String,"Weld_12")
Variable.UDT.uLiquid_Dye_Test.Define("sEmpLastChange",String,"Empl_Last_Change")
Variable.UDT.uLiquid_Dye_Test.Define("sDate_last_Change",String,"Date_Last_Change")
Variable.UDT.uLiquid_Dye_Test.Define("SEQ",String,SEQ)
Variable.uGlobal.uLiquid_Dye_Test.Declare("uLiquid_Dye_Test")
Variable.UDT.uWeldScreen.Define("sJob",String,"Job")
Variable.UDT.uWeldScreen.Define("sSuffix",String,"Suffix")
Variable.UDT.uWeldScreen.Define("sSerial",String,"Serial")
Variable.UDT.uWeldScreen.Define("sCompLot",String,"Comp_Lot")
Variable.UDT.uWeldScreen.Define("sCompHeat",String,"Comp_Heat")
Variable.UDT.uWeldScreen.Define("sCompSerial",String,"Comp_Serial")
Variable.UDT.uWeldScreen.Define("wwHeat",String,"ww_Heat")
Variable.UDT.uWeldScreen.Define("wwLot",String,"ww_Lot")
Variable.UDT.uWeldScreen.Define("wwSerial",String,"ww_Serial")
Variable.UDT.uWeldScreen.Define("sWeldWire",String,"Weld_Wire")
Variable.UDT.uWeldScreen.Define("sScreen_ID",String,"Screen_ID")
Variable.UDT.uWeldScreen.Define("EmplLast",String,"Empl_Last_Change")
Variable.UDT.uWeldScreen.Define("dDateLast",String,"Date_Last_Change")
Variable.UDT.uWeldScreen.Define("sRec",String,"Rec_ID")
Variable.uGlobal.uWeldScreen.Declare("uWeldScreen")
Variable.UDT.uSections.Define("Section",Long,Section)
Variable.UDT.uSections.Define("FGPart",String,Part)
Variable.UDT.uSections.Define("Length",String,Length)
Variable.UDT.uSections.Define("PerfLength",Float,Perf_Length)
Variable.UDT.uSections.Define("SlotSize",Float,Slot_Size)
Variable.UDT.uSections.Define("Type",String,Type)
Variable.UDT.uSections.Define("Suffix",String)
Variable.UDT.uSections.Define("Job",String)
Variable.UDT.uSections.Define("Serial",String)
Variable.UDT.uSections.Define("Act_Perf_Length",Float)
Variable.UDT.uSections.Define("Act_Sec_Length",Float)
Variable.UDT.uSections.Define("SEQ",String)

Variable.uGlobal.uSections.Declare("uSections")
Variable.Global.bRod.Declare(Boolean,False)
Variable.Global.sSeq.Declare(String)
Variable.Global.sEmpID.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Log sheets, Hook 15850

'12/8/2014 - Made changes to Weld Screen to include part description and new flexgrid

'3/11/2016
'ALL300-3420160753-3

'3/15/16
'User ID being stored needs to be Employee ID, not User cause it pulls GUI user which isn't employee clocked in
'Employee ID is Passed Variable 009993





F.Intrinsic.Control.If(V.Caller.Hook,=,15840)
	V.Passed.000048.Set("Log Sheets")
F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,15850)

Function.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

V.Global.sWO.Set(V.Passed.000004)
F.Intrinsic.String.Split(V.Global.sWO,"-",V.Global.sWO)
V.Global.sSuff.Set(V.Global.sWO(1))

Gui.SS_MainForm.txtJob.Text(V.Global.sWO)
Gui.SS_MainForm.txtSuff.Text(V.Global.sSuff)
V.Global.sSerial.Set(V.Screen.SS_MainForm!txtSerial.Text)

'set our sequence
V.Global.sSeq.Set(V.Passed.000005)
'have to lpad it to 6 characters.
F.Intrinsic.String.LPad(V.Global.sSeq,"0",6,V.Global.sSeq)


V.Global.sEmpID.Set(V.Passed.009993)


Gui.SS_MainForm.txtSeq.Text(V.Global.sSeq)

Gui.SS_MainForm.ddlForms.AddItem("Weld",0)
Gui.SS_MainForm.ddlForms.AddItem("Liquid Dye Penetrant",1)
Gui.SS_MainForm.ddlForms.AddItem("Slot Check",2)
Gui.SS_MainForm.ddlForms.AddItem("Pull Test",3)
Gui.SS_MainForm.ddlForms.AddItem("Drift",4)
Gui.SS_MainForm.ddlForms.AddItem("Oven Temperature Checks",5)
Gui.SS_MainForm..Show
Gui.SS_MainForm.txtSerial.SetFocus

F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Main.End

Program.Sub.cmdldpts_save_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdldpts_save_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iC.Declare(Long)

'block events so they aren't click happy
F.Intrinsic.Control.BlockEvents

Gui.SS_LDPT.cmdLDPTSave.Enabled(False)

F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{3}' AND SERIAL = '{2}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{3}' AND SERIAL = '{2}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.If(V.Screen.SS_LDPT!ddlAR.ListIndex,=,0)
	V.Local.sRet.Set("Accept")
F.Intrinsic.Control.ElseIf(V.Screen.SS_LDPT!ddlAR.ListIndex,=,1)
	V.Local.sRet.Set("Reject")
F.Intrinsic.Control.Else
	V.Local.sRet.Set("None")
F.Intrinsic.Control.EndIf

'Saves Accept/Reject Value in sepereate table.
F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_ACPT_RJCT")
F.ODBC.conx!rst.AddNew
	F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
	F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
	F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
	F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
	F.ODBC.conx!rst.Set!LOG_SHEET("LIQUID_DYE_PEN")
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Set!ACCEPTED(V.Local.sRet)
	F.ODBC.conx!rst.Set!TIME(V.Ambient.Now)
F.ODBC.conx!rst.Update
F.ODBC.conx!rst.Close

'Saves Liquid Dye Test Results From text fields
F.Intrinsic.String.Build("SELECT * FROM GCG_SCREEN_LIQ_DYE WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{3}' AND SERIAL = '{2}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_SCREEN_LIQ_DYE WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{3}' AND SERIAL = '{2}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSEQ,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

V.uGlobal.uLiquid_Dye_Test!sWo.Set(V.Global.sWO)
V.uGlobal.uLiquid_Dye_Test!sSuff.Set(V.Global.sSuff)
V.uGlobal.uLiquid_Dye_Test!sSerial.Set(V.Global.sSerial)
V.uGlobal.uLiquid_Dye_Test!SEQ.Set(V.Global.sSeq)
V.uGlobal.uLiquid_Dye_Test!sCleanerType.Set(V.Screen.SS_LDPT!txtCleanerType.Text)
V.uGlobal.uLiquid_Dye_Test!sPenType.Set(V.Screen.SS_LDPT!txtPenetrantType.Text)
V.uGlobal.uLiquid_Dye_Test!sDeveloper_Type.Set(V.Screen.SS_LDPT!txtDeveloperType.Text)
V.uGlobal.uLiquid_Dye_Test!sSurface_Type.Set(V.Screen.SS_LDPT!txtPipeSurfType.Text)
V.uGlobal.uLiquid_Dye_Test!sPre_Clean_Dry.Set(V.Screen.SS_LDPT!txtPreCleanDryTime.Text)
V.uGlobal.uLiquid_Dye_Test!sPenetrant_Dry.Set(V.Screen.SS_LDPT!txtPenetrantDryTime.Text)
V.uGlobal.uLiquid_Dye_Test!sPost_Removal_Dry.Set(V.Screen.SS_LDPT!txtPostRemDry.Text)
V.uGlobal.uLiquid_Dye_Test!sDeveloper_Dry.Set(V.Screen.SS_LDPT!txtDevDryTime.Text)
V.uGlobal.uLiquid_Dye_Test!sEmpLastChange.Set(V.Global.sEmpID)
V.uGlobal.uLiquid_Dye_Test!sDate_last_Change.Set(V.Ambient.Date)

Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(0,1,V.uGlobal.uLiquid_Dye_Test!sWeld1)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(1,1,V.uGlobal.uLiquid_Dye_Test!sWeld2)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(2,1,V.uGlobal.uLiquid_Dye_Test!sWeld3)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(3,1,V.uGlobal.uLiquid_Dye_Test!sWeld4)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(4,1,V.uGlobal.uLiquid_Dye_Test!sWeld5)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(5,1,V.uGlobal.uLiquid_Dye_Test!sWeld6)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(6,1,V.uGlobal.uLiquid_Dye_Test!sWeld7)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(7,1,V.uGlobal.uLiquid_Dye_Test!sWeld8)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(8,1,V.uGlobal.uLiquid_Dye_Test!sWeld9)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(9,1,V.uGlobal.uLiquid_Dye_Test!sWeld10)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(10,1,V.uGlobal.uLiquid_Dye_Test!sWeld11)
Gui.SS_LDPT.gsflexgrid1.GetTextMatrix(11,1,V.uGlobal.uLiquid_Dye_Test!sWeld12)

F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst","SELECT * FROM GCG_SCREEN_LIQ_DYE")
F.Intrinsic.Control.If(V.uGlobal.uLiquid_Dye_Test.UBound,<>,-1)
	F.Intrinsic.Variable.saveudttorecordset("conx","rst","V.uGlobal.uLiquid_Dye_Test")
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

Gui.SS_LDPT..Visible(False)
Gui.SS_LDPT.cmdLDPTSave.Enabled(True)

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdldpts_save_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdldpts_save_click.End

Program.Sub.ss_mainform_unload.Start
F.Intrinsic.Control.SetErrorHandler("ss_mainform_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.ODBC.Connection!conx.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ss_mainform_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.ss_mainform_unload.End

Program.Sub.ss_ldpt_unload.Start
F.Intrinsic.Control.SetErrorHandler("ss_ldpt_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.SS_LDPT..Visible(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ss_ldpt_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.ss_ldpt_unload.End

Program.Sub.cmdmainok_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdmainok_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Global.sSerial.Set(V.Screen.SS_MainForm!txtSerial.Text)

V.Local.sRet.Declare(Long)
V.Local.sRet.Set(V.Screen.SS_MainForm!ddlForms.ListIndex)
'don't want to have the serial check when we are going through and doing the oven temps as per 4/8/15, debug with Ken and Tyler
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,5)
	F.Intrinsic.Control.If(V.Global.sSerial,=,"")
		F.Intrinsic.UI.Msgbox("Pleas enter a Serial Number")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.SelectCase(V.Local.sRet)
	F.Intrinsic.Control.Case(0)

		'Weld Screen Form1
		Gui.Stress_Weld.txtJob.Text(V.Global.sWO)
		Gui.Stress_Weld.txtSuff.Text(V.Global.sSuff)
		Gui.Stress_Weld.txtSeq.Text(V.Global.sSeq)
		Gui.Stress_Weld.txtSerial.Text(V.Global.sSerial)
		V.Global.sForm.Set("WELD")
		F.Intrinsic.Control.CallSub(Buildstyle)
		F.Intrinsic.Control.CallSub(Load_ddl_content)
		Gui.Stress_Weld.ddlWeld_ScreenID.AddItem("PIPE")
		F.Intrinsic.Control.CallSub(Load_weld)
		Gui.Stress_Weld..Show

	F.Intrinsic.Control.Case(1)
		'Liquid Dye Test
		Gui.SS_LDPT.txtJob.Text(V.Global.sWO)
		Gui.SS_LDPT.txtSuff.Text(V.Global.sSuff)
		Gui.SS_LDPT.txtSeq.Text(V.Global.sSeq)
		Gui.SS_LDPT.txtSerial.Text(V.Global.sSerial)
		V.Global.sForm.Set("LIQ")
		F.Intrinsic.Control.CallSub(Buildstyle)
		F.Intrinsic.Control.CallSub(Load_ddl_content)
		F.Intrinsic.Control.CallSub(Load_liq_dye_pen)
		Gui.SS_LDPT..Show
	F.Intrinsic.Control.Case(2)
		'Slot Check (renamed from Pull Test)
		Gui.SS_PullTest.txtJob.Text(V.Global.sWO)
		Gui.SS_PullTest.txtSuff.Text(V.Global.sSuff)
		Gui.SS_PullTest.txtSeq.Text(V.Global.sSeq)
		Gui.SS_PullTest.txtSerial.Text(V.Global.sSerial)
		V.Global.sForm.Set("PULL")
		F.Intrinsic.Control.CallSub(Buildstyle)
		F.Intrinsic.Control.CallSub(Load_ddl_content)
		F.Intrinsic.Control.CallSub(Load_slotcheck)
		Gui.SS_PullTest..Show
	F.Intrinsic.Control.Case(3)
		'Pull Test (renamed from Slot Check)
		Gui.SS_SlotCheck.txtJob.Text(V.Global.sWO)
		Gui.SS_SlotCheck.txtSuff.Text(V.Global.sSuff)
		Gui.SS_SlotCheck.txtSeq.Text(V.Global.sSeq)
		Gui.SS_SlotCheck.txtSerial.Text(V.Global.sSerial)
		V.Global.sForm.Set("SLOT")
		F.Intrinsic.Control.CallSub(Buildstyle)
		F.Intrinsic.Control.CallSub(Load_ddl_content)
		F.Intrinsic.Control.CallSub(Load_pullvals)
		Gui.SS_SlotCheck..Show
	F.Intrinsic.Control.Case(4)
		'Drift
		Gui.SS_Drift.txtJob.Text(V.Global.sWO)
		Gui.SS_Drift.txtSuff.Text(V.Global.sSuff)
		Gui.SS_Drift.txtSeq.Text(V.Global.sSeq)
		Gui.SS_Drift.txtSerial.Text(V.Global.sSerial)
		F.Intrinsic.Control.CallSub(Load_ddl_content)
		V.Global.sForm.Set("DRIFT")
		F.Intrinsic.Control.CallSub(Buildstyle)
		F.Intrinsic.Control.CallSub(Load_drift)
		Gui.SS_Drift..Show
	F.Intrinsic.Control.Case(5)
		'Heat
		V.Global.sForm.Set("HEAT")
		F.Intrinsic.Control.CallSub(Load_ddl_content)
		F.Intrinsic.Control.CallSub(Load_heat_1)
		Gui.SS_Heat..Show
	F.Intrinsic.Control.CaseElse
		F.Intrinsic.UI.Msgbox("Please Select a Form")
		F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndSelect


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdmainok_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdmainok_click.End

Program.Sub.cmdheatsave_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdheatsave_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sScreen.Declare(String)
V.Local.sUser.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSQL2.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRows.Declare(String)
V.Local.sRecList.Declare(String)
V.Local.i.Declare(String)
V.Local.iOrd.Declare(Long)
V.Local.iRec.Declare(Long)
V.Local.dDate.Declare(Date)

Gui.SS_Heat.cmdHeatSave.Enabled(False)

V.Local.sUser.Set(V.Global.sEmpID)
V.Local.dDate.Set(V.Ambient.Date)

Gui.SS_Heat.lvw1.RetrieveAllListItems(V.Local.sRows)
F.Intrinsic.Control.If(V.Local.sRows,=,"***NORETURN***")
	F.Intrinsic.UI.Msgbox("Please enter serial numbers for the batch ID")
	Gui.SS_Heat.cmdHeatSave.Enabled(True)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Concat("SELECT * FROM HEAT_BATCH WHERE BATCH = '",V.Screen.SS_Heat!txtBatchNum.Text,"'",V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Concat("DELETE FROM HEAT_BATCH WHERE BATCH = '",V.Screen.SS_Heat!txtBatchNum.Text,"'",V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

'Saves each SN as it's own record within the unique batch ID.
Gui.SS_Heat.lvw1.RetrieveAllListItems(V.Local.sRecList)
F.Intrinsic.Control.If(V.Local.sRecList,<>,"***NORETURN***")
	F.Intrinsic.String.Split(V.Local.sRecList,"*!*",V.Local.sRecList)
	F.Intrinsic.Control.For(V.Local.i,V.Local.sRecList.LBound,V.Local.sRecList.UBound,1)

		Gui.SS_Heat.lvw1.ListitemKeyToOrdinal(V.Local.sRecList(V.Local.i),V.Local.iOrd)
		V.Local.sRet.Set(V.Screen.SS_Heat!lvw1.ListItemTextExtended(V.Local.iOrd))
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM HEAT_BATCH")
		F.ODBC.conx!rst.AddNew
		F.ODBC.conx!rst.Set!BATCH(V.Screen.SS_Heat!txtBatchNum.Text)
		F.ODBC.conx!rst.Set!SERIAL_NUMBER(V.Local.sRet(0))
		F.ODBC.conx!rst.Set!REC_ID(V.Local.iRec)
		F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
		F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
		F.ODBC.conx!rst.Update
		F.ODBC.conx!rst.Close

		F.Intrinsic.Math.Add(V.Local.iRec,1,V.Local.iRec)
	F.Intrinsic.Control.Next(V.Local.i)


	F.Intrinsic.UI.Msgbox("Serial numbers saved","Saved")
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Concat("SELECT * FROM GCG_ACPT_RJCT WHERE SERIAL = '",V.Screen.SS_Heat!txtBatchNum.Text,"' AND LOG_SHEET = 'HEAT'",V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Concat("DELETE FROM GCG_ACPT_RJCT WHERE SERIAL = '",V.Screen.SS_Heat!txtBatchNum.Text,"' AND LOG_SHEET = 'HEAT'",V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_ACPT_RJCT")
	F.ODBC.conx!rst.AddNew
	F.Intrinsic.Control.If(V.Screen.SS_Heat!ddlAR.ListIndex,=,0)
		F.ODBC.conx!rst.Set!ACCEPTED("Accept")
	F.Intrinsic.Control.ElseIf(V.Screen.SS_Heat!ddlAR.ListIndex,=,1)
		F.ODBC.conx!rst.Set!ACCEPTED("Reject")
	F.Intrinsic.Control.Else
		F.ODBC.conx!rst.Set!ACCEPTED("None")
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Set!SERIAL(V.Screen.SS_Heat!txtBatchNum.Text)
	F.ODBC.conx!rst.Set!LOG_SHEET("HEAT")
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Set!TIME(V.Ambient.Time)
F.ODBC.conx!rst.Update
F.ODBC.conx!rst.Close

Gui.SS_Heat.cmdHeatChecks.Enabled(True)
Gui.SS_Heat.cmdHeatSave.Enabled(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdheatsave_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdheatsave_click.End

Program.Sub.cmdadd_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdadd_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sUser.Declare(String)
V.Local.sDdlRet.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSQL2.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRecList.Declare(String)
V.Local.i.Declare(String)
V.Local.iOrd.Declare(Long)
V.Local.dDate.Declare(Date)

V.Local.sUser.Set(V.Global.sEmpID)
V.Local.dDate.Set(V.Ambient.Date)

Gui.HeatChecks.lvw1.RetrieveAllListItems(V.Local.sRecList)
F.Intrinsic.Control.If(V.Local.sRecList,<>,"***NORETURN***")
	F.Intrinsic.String.Split(V.Local.sRecList,"*!*",V.Local.sRecList)
	F.Intrinsic.Control.For(V.Local.i,V.Local.sRecList.LBound,V.Local.sRecList.UBound,1)
		Gui.HeatChecks.lvw1.ListitemKeyToOrdinal(V.Local.sRecList(V.Local.i),V.Local.iOrd)
		V.Local.sRet.Set(V.Screen.HeatChecks!lvw1.ListItemTextExtended(V.Local.iOrd))
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		V.Local.sSQL.Set("SELECT * FROM GCG_HEAT_CHECK_TEMP")
		F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
			F.Intrinsic.String.Build("SELECT SERIAL, BATCH FROM GCG_HEAT_CHECK_SER WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{4}' AND SERIAL = '{2}' AND BATCH = '{3}'",V.Global.sWO,V.Global.sSuff,V.local.sRet(0),V.local.sRet(1),V.Global.sSeq,V.Local.sSQL2)
			F.ODBC.Connection!conx.OpenRecordsetRO("rst2",V.Local.sSQL2)
			F.Intrinsic.Control.If(V.ODBC.conx!rst2.EOF,<>,True)
			F.ODBC.conx!rst.MoveNext
				F.ODBC.conx!rst.Close
				F.ODBC.conx!rst2.Close
				F.Intrinsic.Control.Next(V.Local.i)
			F.Intrinsic.Control.Else
		F.ODBC.conx!rst.AddNew
			F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
			F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
			F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
			F.ODBC.conx!rst.Set!BATCH(V.Local.sRet(1))
			F.ODBC.conx!rst.Set!SERIAL(V.Local.sRet(0))
			F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Local.sUser.Trim)
			F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Local.dDate)
			F.ODBC.conx!rst.Update
		F.ODBC.conx!rst.MoveNext
	F.ODBC.conx!rst.Close
	F.Intrinsic.Control.Next(V.Local.i)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.UI.Msgbox("Serial numbers saved","Saved")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdadd_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdadd_click.End

Program.Sub.cmdslotsave_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdslotsave_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.fFront1.Declare(Float)
V.Local.fFront2.Declare(Float)
V.Local.fFront3.Declare(Float)
V.Local.fBack1.Declare(Float)
V.Local.fBack2.Declare(Float)
V.Local.fBack3.Declare(Float)
V.Local.fFrontAvg.Declare(Float)
V.Local.fBackAvg.Declare(Float)
V.Local.sRet.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sScreen.Declare(String)

V.Local.sSQL3.Declare(String)
V.Local.sSQL2.Declare(String)
V.Local.sSQL1.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sUser.Declare(String)
V.Local.dDate.Declare(Date)

F.Intrinsic.Control.BlockEvents

Gui.SS_SlotCheck.cmdSlotSave.Enabled(False)

V.Local.dDate.Set(V.Ambient.Date)
V.Local.sUser.Set(V.Global.sEmpID)

V.Local.sScreen.Set(V.Screen.SS_SlotCheck!ddlScreenID.Text)
F.Intrinsic.Control.If(V.Global.bRod,=,False)
	F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
		F.Intrinsic.Control.UnBlockEvents
		Gui.SS_SlotCheck.ddlScreenID.SetFocus
		Gui.SS_SlotCheck.cmdSlotSave.Enabled(True)
		F.Intrinsic.Control.exitsub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

V.Local.fFront1.Set(V.Screen.SS_SlotCheck!txtFT1.Text)
V.Local.fFront2.Set(V.Screen.SS_SlotCheck!txtFT2.Text)
V.Local.fFront3.Set(V.Screen.SS_SlotCheck!txtFT3.Text)

V.Local.fBack1.Set(V.Screen.SS_SlotCheck!txtBT1.Text)
V.Local.fBack2.Set(V.Screen.SS_SlotCheck!txtBT2.Text)
V.Local.fBack3.Set(V.Screen.SS_SlotCheck!txtBT3.Text)

V.Local.fFrontAvg.Set(V.Screen.SS_SlotCheck!txtFav.Text)
V.Local.fBackAvg.Set(V.Screen.SS_SlotCheck!txtBav.Text)

F.Intrinsic.String.Build("SELECT * FROM GCG_PULL_TEST WHERE JOB = '{0}' AND SUFFIX = '{1}' ANd SEQ = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.local.sScreen,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_PULL_TEST WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.local.sScreen,V.Global.sSeq,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close


F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_PULL_TEST")
F.ODBC.conx!rst.AddNew
F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
F.ODBC.conx!rst.Set!SCREEN_ID(V.Local.sScreen)
F.ODBC.conx!rst.Set!TEST_NO("1")
F.ODBC.conx!rst.Set!FRONT(V.Local.fFront1)
F.ODBC.conx!rst.Set!BACK(V.Local.fBack1)
F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Local.sUser)
F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Local.dDate)
F.ODBC.conx!rst.Set!FRONT_AVG(V.Local.fFrontAvg)
F.ODBC.conx!rst.Set!BACK_AVG(V.Local.fBackAvg)
F.ODBC.conx!rst.Update
F.ODBC.conx!rst.AddNew
F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
F.ODBC.conx!rst.Set!SEQ(V.Global.sseq)
F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
F.ODBC.conx!rst.Set!SCREEN_ID(V.Local.sScreen)
F.ODBC.conx!rst.Set!TEST_NO("2")
F.ODBC.conx!rst.Set!FRONT(V.Local.fFront2)
F.ODBC.conx!rst.Set!BACK(V.Local.fBack2)
F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Local.sUser)
F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Local.dDate)
F.ODBC.conx!rst.Set!FRONT_AVG(V.Local.fFrontAvg)
F.ODBC.conx!rst.Set!BACK_AVG(V.Local.fBackAvg)
F.ODBC.conx!rst.Update
F.ODBC.conx!rst.AddNew
F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
F.ODBC.conx!rst.Set!SCREEN_ID(V.Local.sScreen)
F.ODBC.conx!rst.Set!TEST_NO("3")
F.ODBC.conx!rst.Set!FRONT(V.Local.fFront3)
F.ODBC.conx!rst.Set!BACK(V.Local.fBack3)
F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Local.sUser)
F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Local.dDate)
F.ODBC.conx!rst.Set!FRONT_AVG(V.Local.fFrontAvg)
F.ODBC.conx!rst.Set!BACK_AVG(V.Local.fBackAvg)
F.ODBC.conx!rst.Update
F.ODBC.conx!rst.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And SeQ = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = 'PULL'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = 'PULL'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Global.sSeq,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_ACPT_RJCT")
F.ODBC.conx!rst.AddNew
F.Intrinsic.Control.If(V.Screen.SS_SlotCheck!ddlAR.ListIndex,=,0)
	F.ODBC.conx!rst.Set!ACCEPTED("Accept")
F.Intrinsic.Control.ElseIf(V.Screen.SS_SlotCheck!ddlAR.ListIndex,=,1)
	F.ODBC.conx!rst.Set!ACCEPTED("Reject")
F.Intrinsic.Control.Else
	F.ODBC.conx!rst.Set!ACCEPTED("None")
F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Set!Job(V.Global.sWO)
	F.ODBC.conx!rst.Set!Suffix(V.Global.sSuff)
	F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
	F.ODBC.conx!rst.set!Serial(V.Global.sSerial)
	F.ODBC.conx!rst.Set!Screen_ID(V.Local.sScreen)
	F.ODBC.conx!rst.Set!Log_Sheet("PULL")
	F.ODBC.conx!rst.set!Empl_last_Change(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!Date_last_Change(V.Ambient.Date)
	F.ODBC.conx!rst.Set!Time(V.Ambient.Time)
F.ODBC.conx!rst.Update
F.ODBC.conx!rst.Close



Gui.SS_SlotCheck.txtFT1.Text("")
Gui.SS_SlotCheck.txtFT2.Text("")
Gui.SS_SlotCheck.txtFT3.Text("")
Gui.SS_SlotCheck.txtBT1.Text("")
Gui.SS_SlotCheck.txtBT2.Text("")
Gui.SS_SlotCheck.txtBT3.Text("")

Gui.SS_SlotCheck.txtFav.Text("")
Gui.SS_SlotCheck.txtBav.Text("")


F.Intrinsic.Control.If(V.Global.bRod,=,True)
	
	Gui.SS_SlotCheck..Visible(False)
	F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Else
	
	Gui.SS_SlotCheck.ddlScreenID.Text("")
	Gui.SS_SlotCheck.ddlScreenID.setfocus
	F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.EndIf

Gui.SS_SlotCheck.cmdSlotSave.Enabled(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdslotsave_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdslotsave_click.End

Program.Sub.ss_drift_unload.Start
F.Intrinsic.Control.SetErrorHandler("ss_drift_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.SS_Drift.gsflexgrid1.TextMatrix(0,1,"")
Gui.SS_Drift.gsflexgrid1.TextMatrix(1,1,"")

Gui.SS_Drift..Visible(False)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ss_drift_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.ss_drift_unload.End

Program.Sub.ss_heat_unload.Start
F.Intrinsic.Control.SetErrorHandler("ss_heat_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.SS_Heat..Visible(False)
Gui.SS_Heat.cmdAddSerial.Enabled(True)
Gui.SS_Heat.cmdUpdateSN.Enabled(False)
Gui.SS_Heat.cmdDeleteSN.Enabled(False)
V.Global.sOldSN.Set("")

Gui.SS_Heat.lvw1.ClearItems

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ss_heat_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.ss_heat_unload.End

Program.Sub.ss_pulltest_unload.Start
F.Intrinsic.Control.SetErrorHandler("ss_pulltest_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iCol.Declare(Long)
V.Local.R.Declare(Long)

F.Intrinsic.Control.For(V.Local.R,V.Local.iCol,9,1)
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,1,"")
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,2,"")
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,3,"")
	F.Intrinsic.Math.Add(V.Local.iCol,1,V.Local.iCol)
F.Intrinsic.Control.Next(V.local.R)
Gui.SS_PullTest..Visible(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ss_pulltest_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.ss_pulltest_unload.End

Program.Sub.ss_slotcheck_unload.Start
F.Intrinsic.Control.SetErrorHandler("ss_slotcheck_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.SS_SlotCheck.txtFT1.Text("")
Gui.SS_SlotCheck.txtFT2.Text("")
Gui.SS_SlotCheck.txtFT3.Text("")
Gui.SS_SlotCheck.txtBT1.Text("")
Gui.SS_SlotCheck.txtBT2.Text("")
Gui.SS_SlotCheck.txtBT3.Text("")

Gui.SS_SlotCheck.txtFav.Text("")
Gui.SS_SlotCheck.txtBav.Text("")
Gui.SS_SlotCheck..Visible(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ss_slotcheck_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.ss_slotcheck_unload.End

Program.Sub.cmddriftsave_click.Start
F.Intrinsic.Control.SetErrorHandler("cmddriftsave_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sScreen.Declare(String)
V.Local.sTime.Declare(String)
V.Local.sMsgRet.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRow.Declare(String)
V.Local.iFlag.Declare(Long)
V.Local.IC.Declare(Long)
V.Local.iRowCount.Declare(Long)
V.local.sRet.Declare(Long)
V.Local.iRecID.Declare(Long)
V.Local.dDate.Declare(Date)
V.Local.iRow.Declare(Long)
V.Local.iRowH.Declare(Long)
V.Local.R.Declare(Long)

V.Local.sScreen.Set(V.Screen.SS_Drift!ddlScreenID.Text)

F.Intrinsic.Control.If(V.Local.sScreen,=,"")
	F.Intrinsic.UI.Msgbox("Continue without selecing a Screen ID?","Continue?",4,V.Local.sMsgRet)
	F.Intrinsic.Control.If(V.Local.sMsgRet,=,7)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.BlockEvents

F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{4}' And Screen_ID = '{3}' ",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.local.sScreen.trim,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And SEQ = '{4}' And Screen_ID = '{3}' ",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen.trim,V.Global.sSeq,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

'commit those changes to our grid
Gui.SS_Drift.gsflexgrid1.Commit


V.Local.iRow.Set(V.Screen.SS_Drift!gsflexgrid1.Rows)
F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)
Gui.SS_Drift.gsflexgrid1.GetTextMatrix(0,V.Local.iRow,V.Local.sMsgRet)
F.Intrinsic.Control.If(V.Local.sMsgRet.Trim,=,"")
	F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
'

'Checks to see if Point in process or Drift number has been left blank, if so, this row will be deleted so that it may save properly to Pervasive.
Gui.SS_Drift.gsflexgrid1.ReadRow(V.Local.iRow,V.Local.sRow)
F.Intrinsic.String.Split(V.Local.sRow,"*!*",V.Local.sRow)
F.Intrinsic.Control.If(V.Local.sRow(0),=,"")
	V.Local.iFlag.Set(1)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.sRow(1),=,"")
	V.Local.iFlag.Set(1)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.iFlag,=,1)
	F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)
F.Intrinsic.Control.EndIf


V.Local.iRowH.Set(1)
F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst","SELECT * FROM GCG_DRIFT")
F.Intrinsic.Control.For(V.Local.IC,V.Local.iRowH,V.Local.iRow,1)
	Gui.SS_Drift.gsflexgrid1.ReadRow(V.Local.iRowH,V.Local.sRow)
	F.Intrinsic.String.Split(V.Local.sRow,"*!*",V.Local.sRow)
	F.ODBC.conx!rst.AddNew
	F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
	F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
	F.ODBC.conx!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
	F.ODBC.conx!rst.Set!SCREEN_ID(V.Local.sScreen)
	F.ODBC.conx!rst.Set!PROCESS(V.Local.sRow(0))
	F.ODBC.conx!rst.Set!DRIFT_NO(V.Local.sRow(1))
	F.ODBC.conx!rst.Set!REC_ID(V.Local.iRecID)
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Update
	F.Intrinsic.Math.Add(V.Local.iRowH,1,V.Local.iRowH)
	F.Intrinsic.Math.Add(V.Local.iRecID,1,V.Local.iRecID)
F.Intrinsic.Control.Next(V.Local.IC)
F.ODBC.conx!rst.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{3}' AND SERIAL = '{2}' AND LOG_SHEET = 'DRIFT'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{3}' AND SERIAL = '{2}' AND LOG_SHEET = 'DRIFT'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_ACPT_RJCT")
F.ODBC.conx!rst.AddNew
F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
F.ODBC.conx!rst.Set!SEQ(V.Global.sSEQ)
F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
F.ODBC.conx!rst.Set!SCREEN_ID(V.Local.sScreen)
F.ODBC.conx!rst.Set!LOG_SHEET("DRIFT")
F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
F.ODBC.conx!rst.Set!TIME(V.Ambient.Now)
F.Intrinsic.Control.If(V.Screen.SS_Drift!ddlAR.ListIndex,=,0)
	F.ODBC.conx!rst.Set!ACCEPTED("Accept")
F.Intrinsic.Control.ElseIf(V.Screen.SS_Drift!ddlAR.ListIndex,=,1)
	F.ODBC.conx!rst.Set!ACCEPTED("Reject")
F.Intrinsic.Control.Else
	F.ODBC.conx!rst.Set!ACCEPTED("None")
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Update
F.ODBC.conx!rst.Close

'Gui.SS_Drift.gsflexgrid1.TextMatrix(0,1,"")
'Gui.SS_Drift.gsflexgrid1.TextMatrix(1,1,"")
'add 1 to the row
V.Local.iRowCount.Set(V.Screen.SS_Drift!gsflexgrid1.Rows)
F.Intrinsic.Math.Sub(V.Local.iRowCount,1,V.Local.iRowCount)
Gui.SS_Drift.gsflexgrid1.RemoveStyle(V.Local.iRowCount)
Gui.SS_Drift.gsflexgrid1.ApplyStyle(V.Local.iRowCount,3)
F.Intrinsic.Math.Add(V.Screen.SS_Drift!gsflexgrid1.Rows,1,V.Local.iRowCount)
Gui.SS_Drift.gsflexgrid1.Rows(V.Local.iRowCOunt)
F.Intrinsic.Math.Sub(V.Local.iRowCount,1,V.Local.iRowCount)
Gui.SS_Drift.gsflexgrid1.ApplyStyle(V.Local.iRowcount,2)

'Gui.SS_Drift..Visible(False)
F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub

	F.Intrinsic.Control.Label("cmddriftsave_click_Err")
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
		Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmddriftsave_click.End

Program.Sub.cmdptsave_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdptsave_click_Err")
F.Intrinsic.Control.ClearErrors
'This will now be Slot Check Save command

V.local.iCol.Declare(Long)
V.Local.iRow.Declare(Long)
V.Local.iBeg.Declare(Long)
V.Local.iMid.Declare(Long)
V.Local.iEnd.Declare(Long)
V.Local.i.Declare(Long)
V.Local.R.Declare(Long)
V.Local.sCols.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sReturn.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.sTestNo.Declare(String)
V.Local.sError.Declare(String)
V.Local.sLogSheet.Declare(String)

V.Local.sLogSheet.Set("SLOT_CHECK")

Gui.SS_PullTest.cmdPTSave.Enabled(False)
'only if it's a pipe based and blank we will ask else we can save a blank on rod based.

V.Local.sScreen.Set(V.Screen.SS_PullTest!ddlScreenID.Text)
F.Intrinsic.Control.If(V.Global.bRod,=,False)
	F.Intrinsic.Control.If(V.Local.sScreen,=,"")
		F.Intrinsic.UI.Msgbox("No Screen ID selected, Continue?","Continue?",4,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet,=,7)
			Gui.SS_PullTest.cmdPTSave.Enabled(True)
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.BlockEvents

'Deletes previous records with matching Job,Suffix, Serial, and screen ID.
F.Intrinsic.String.Build("SELECT * FROM GCG_SLOT_CHECK WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{4}' And SERIAL = '{2}' AND SCREEN_ID = '{3}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Global.sSEQ,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_SLOT_CHECK WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Global.sSEQ,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close
'
'

'Writes new records
F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_SLOT_CHECK")
'V.Local.iCol.Set(1)
Gui.SS_PullTest.gsflexgridPT.Commit

F.Intrinsic.Control.For(V.Local.R,V.Local.iCol,9,1)
	Gui.SS_PullTest.gsflexgridPT.GetTextMatrix(V.Local.iCol,0,V.Local.sTestNo)
	Gui.SS_PullTest.gsflexgridPT.GetTextMatrix(V.Local.iCol,1,V.Local.iBeg)
	Gui.SS_PullTest.gsflexgridPT.GetTextMatrix(V.Local.iCol,2,V.Local.iMid)
	Gui.SS_PullTest.gsflexgridPT.GetTextMatrix(V.Local.iCol,3,V.Local.iEnd)
	F.ODBC.conx!rst.AddNew
	F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
	F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
	F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
	F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
	F.ODBC.conx!rst.Set!SCREEN_ID(V.Local.sScreen)
	F.ODBC.conx!rst.Set!TEST_NO(V.Local.sTestNo)
	F.ODBC.conx!rst.Set!BEGINNING(V.local.iBeg)
	F.ODBC.conx!rst.Set!MIDDLE(V.Local.iMid)
	F.ODBC.conx!rst.Set!END(V.Local.iEnd)
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Update
F.Intrinsic.Math.Add(V.Local.iCol,1,V.Local.iCol)
F.Intrinsic.Control.Next(V.Local.R)
F.ODBC.conx!rst.Close

'Deletes old record of Accept/Reject setting
F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{5}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = '{4}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Local.sLogSheet,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{5}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = '{4}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Local.sLogSheet,V.Global.ssEQ,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.If(V.Screen.SS_PullTest!ddlAR.ListIndex,=,0)
	V.Local.sRet.Set("Accept")
F.Intrinsic.Control.ElseIf(V.Screen.SS_PullTest!ddlAR.ListIndex,=,1)
	V.Local.sRet.Set("Reject")
F.Intrinsic.Control.Else
	V.Local.sRet.Set("None")
F.Intrinsic.Control.EndIf

'Writes new record of Accept/Reject setting
F.Intrinsic.Control.If(V.ODBC.conx!rstSaveACPT.State,=,0)
	F.ODBC.Connection!conx.OpenRecordsetRW("rstSaveACPT","SELECT * FROM GCG_ACPT_RJCT")
F.Intrinsic.Control.Else
	F.ODBC.conx!rstSaveACPT.Requery
F.Intrinsic.Control.EndIf

F.ODBC.conx!rstSaveACPT.AddNew
F.ODBC.conx!rstSaveACPT.Set!JOB(V.Global.sWO)
F.ODBC.conx!rstSaveACPT.Set!SUFFIX(V.Global.sSuff)
F.ODBC.conx!rstSaveACPT.Set!SEQ(V.Global.sSeq)
F.ODBC.conx!rstSaveACPT.Set!SERIAL(V.Global.sSerial)
F.ODBC.conx!rstSaveACPT.Set!SCREEN_ID(V.Local.sScreen)
F.ODBC.conx!rstSaveACPT.Set!LOG_SHEET(V.Local.sLogSheet)
F.ODBC.conx!rstSaveACPT.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
F.ODBC.conx!rstSaveACPT.Set!DATE_LAST_CHANGE(V.Ambient.Now)
F.ODBC.conx!rstSaveACPT.Set!ACCEPTED(V.Local.sRet)
F.ODBC.conx!rstSaveACPT.Set!TIME(V.Ambient.Now)
F.ODBC.conx!rstSaveACPT.Update

'F.ODBC.conx!rstSaveACPT.Close

Gui.SS_PullTest..Visible(False)
Gui.SS_PullTest.ddlScreenID.Text("")
Gui.SS_PullTest.ddlScreenID.SetFocus
F.Intrinsic.Control.If(V.Global.bRod,=,False)
	F.Intrinsic.Control.CallSub(Load_slotcheck)
	Gui.SS_PullTest..Visible(True)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.UnBlockEvents

Gui.SS_PullTest.cmdPTSave.Enabled(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdptsave_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdptsave_click.End

Program.Sub.Load_ddl_Content.Start
F.Intrinsic.Control.SetErrorHandler("Load_ddl_Content_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iC.Set(0)

'Weld Form
Gui.Stress_Weld.ddlAR.ClearItems
Gui.Stress_Weld.ddlAR.AddItem("Accept",0)
Gui.Stress_Weld.ddlAR.AddItem("Reject",1)
Gui.Stress_Weld.ddlAR.AddItem("None",2)

'Liquid Dye Penetrant Form
Gui.SS_LDPT.ddlAR.ClearItems
Gui.SS_LDPT.ddlAR.AddItem("Accept",0)
Gui.SS_LDPT.ddlAR.AddItem("Reject",1)
Gui.SS_LDPT.ddlAR.AddItem("None",2)

'Slot Check Test (Formerly Pull Test)
Gui.SS_PullTest.ddlAR.ClearItems
Gui.SS_PullTest.ddlAR.AddItem("Accept",0)
Gui.SS_PullTest.ddlAR.AddItem("Reject",1)
Gui.SS_PullTest.ddlAR.AddItem("None",2)

'Pull Test Form (Formerly Slot Check)
Gui.SS_SlotCheck.ddlAR.ClearItems
Gui.SS_SlotCheck.ddlAR.AddItem("Accept",0)
Gui.SS_SlotCheck.ddlAR.AddItem("Reject",1)
Gui.SS_SlotCheck.ddlAR.AddItem("None",1)

'Drift Form
Gui.SS_Drift.ddlAR.ClearItems
Gui.SS_Drift.ddlAR.AddItem("Accept",0)
Gui.SS_Drift.ddlAR.AddItem("Reject",1)
Gui.SS_Drift.ddlAR.AddItem("None",1)

'Heat Form
Gui.SS_Heat.ddlAR.ClearItems
Gui.SS_Heat.ddlAR.AddItem("Accept",0)
Gui.SS_Heat.ddlAR.AddItem("Reject",1)
Gui.SS_Heat.ddlAR.AddItem("None",2)

'HeatCheckForm
Gui.HeatChecks.ddlAR.ClearItems
Gui.HeatChecks.ddlAR.AddItem("Accept",0)
Gui.HeatChecks.ddlAR.AddItem("Reject",1)
Gui.HeatChecks.ddlAR.AddItem("None",1)

Gui.SS_PullTest.ddlScreenID.ClearItems
Gui.SS_Drift.ddlScreenID.ClearItems
'Gui.SS_Heat.ddlScreenID.ClearItems
Gui.SS_SlotCheck.ddlScreenID.ClearItems
Gui.Stress_Weld.ddlWeld_ScreenID.ClearItems
Gui.Stress_Weld.ddlWeld_ScreenID.AddItem("")
Gui.SS_PullTest.ddlScreenID.AddItem("")

'Adds Component ID, Screen ID values associated with the Work Order/Suffix to Comp ID/ Screen ID drop down lists.
F.Intrinsic.String.Build("Select DISTINCT Screen_ID from GCG_Screen_Config where Job ='{0}' and Suffix = '{1}' and Serial = '{2}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)
		V.Global.sScreen.Set(V.ODBC.conx!rst.FieldValTrim!SCREEN_ID)
		Gui.SS_PullTest.ddlScreenID.AddItem(V.Global.sScreen,V.Local.iC)
		Gui.Stress_Weld.ddlWeld_ScreenID.AddItem(V.Global.sScreen,V.Local.iC)
		Gui.SS_SlotCheck.ddlScreenID.AddItem(V.Global.sScreen,V.Local.iC)
		Gui.SS_Drift.ddlScreenID.AddItem(V.Global.sScreen,V.Local.iC)
		F.Intrinsic.Math.Add(V.Local.iC,1,V.Local.iC)
	F.ODBC.conx!rst.MoveNext
	F.Intrinsic.Control.Loop
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

'load into ddl list for drift if blank it's going to be the pipe, so why not say pipe according to ken
Gui.SS_Drift.ddlScreenID.AddItem("PIPE")

'figur out if we rod or pipe based.
F.Intrinsic.String.Build("Select * From V_JOB_HEADER WHERE JOB = '{0}' And Suffix = '{1}'",V.Global.sWO.Trim,V.Global.sSuff.Trim,V.Local.sSQL)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,True)
	F.Intrinsic.Debug.SetLA("Couldn't get the part from the job.")
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.Else
	'then get our part and figure out
	F.Intrinsic.String.Build("Select Sort_Code From GCG_CONFIG Where Part = '{0}'",V.ODBC.conx!rst.FieldValTrim!Part,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstSort",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rstSort.EOF,=,False)
		F.Intrinsic.String.Build("Select Flag_Pipe From GCG_CONFIG_SC Where Sort_Code = '{0}'",V.ODBC.conx!rstSort.FieldValTrim!Sort_Code,V.Local.sSQL)
		F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstRod",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.conx!rstRod.EOF,=,True)
			V.Global.bRod.Set(False)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.ODBC.conx!rstRod.FieldVal!Flag_Pipe,=,False)
				'means rod is true
				V.Global.bRod.Set(True)
			F.Intrinsic.Control.Else
				V.Global.bRod.Set(False)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.ODBC.conx!rstRod.Close
	F.Intrinsic.Control.Else
		V.Global.bRod.Set(False)
	F.Intrinsic.Control.Endif
	F.ODBC.conx!rstSort.Close
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_ddl_Content_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_ddl_Content.End

Program.Sub.BuildStyle.Start
F.Intrinsic.Control.SetErrorHandler("BuildStyle_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.Intrinsic.Control.SelectCase(V.Global.sForm)

		F.Intrinsic.Control.Case("Stress")
			Gui.StressReliefV2.gsflexgrid1.Cols(4)
			Gui.StressReliefV2.gsflexgrid1.Rows(13)
			Gui.StressReliefV2.gsflexgrid1.FixedRows(1)
			
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,0,"Type","Locked","True")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,0,"Format","Alignment",2)
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,0,"Fontstyle","Bold","True")

			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,1,"Type","Locked","True")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,1,"Format","Alignment",2)
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,1,"Fontstyle","Bold","True")

			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,2,"Type","Locked","True")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,2,"Format","Alignment",2)
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,2,"Fontstyle","Bold","True")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,3,"Type","Locked","True")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,3,"Format","Alignment",2)
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(1,3,"Fontstyle","Bold","True")

			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,0,"Comp ID")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(1,0,"Chart Number")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(2,0,"TC Primary")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(3,0,"TC Secondary")
			
				
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(2,2,"Type","Combobox","TC1*!*TC2*!*TC3*!*TC4*!*TC5*!*TC6*!*TC7*!*TC8*!*TC9*!*TC10*!*TC11*!*TC12*!*TC13*!*TC14*!*TC15*!*TC16*!*TC17*!*TC18*!*TC19*!*TC20*!*TC21*!*TC22*!*TC23*!*TC24")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(2,3,"Type","Combobox","TC1*!*TC2*!*TC3*!*TC4*!*TC5*!*TC6*!*TC7*!*TC8*!*TC9*!*TC10*!*TC11*!*TC12*!*TC13*!*TC14*!*TC15*!*TC16*!*TC17*!*TC18*!*TC19*!*TC20*!*TC21*!*TC22*!*TC23*!*TC24")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(2,2,"Format","alignment",2)
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(2,3,"Format","alignment",2)
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(3,0,"Type","Locked","True")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(3,0,"Color","Back","Gray")
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(3,0,"Format","Alignment",2)
			Gui.StressReliefV2.gsflexgrid1.BuildStyle(3,0,"Fontstyle","Bold","True")
			
		
		
			'Gui.SS_LDPT.gsflexgrid1.ApplyStyle(Row,Style)
			
			'Applies drop down list to each row
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(0,1)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(1,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(2,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(3,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(4,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(5,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(6,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(7,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(8,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(9,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(10,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(11,2)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(12,2)
		
			'Formats Point IDs
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(1,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(2,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(3,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(4,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(5,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(6,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(7,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(8,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(9,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(10,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(11,3)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(12,3)
			
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,1,"P1")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,2,"P2")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,3,"P3")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,4,"P4")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,5,"P5")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,6,"P6")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,7,"P7")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,8,"P8")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,9,"P9")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,10,"P10")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,11,"P11")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(0,12,"P12")

'			Gui.StressReliefV2.gsflexgrid1.ColWidth(0,2100123456)
'			Gui.StressReliefV2.gsflexgrid1.ColWidth(1,2100)
'			Gui.StressReliefV2.gsflexgrid1.ColWidth(2,2100)
			Gui.StressReliefV2.gsflexgrid1.SetColumnPercentages(".18:.2:.3:.3")
	
		F.Intrinsic.Control.Case("LIQ")

			'Liquid Dye Penetrant
			Gui.SS_LDPT.gsflexgrid1.Cols(12)
			Gui.SS_LDPT.gsflexgrid1.Rows(2)
			Gui.SS_LDPT.gsflexgrid1.FixedRows(1)
			'Gui.SS_LDPT.gsflexgrid1.SetColumnPercentages(".60:.40")
			
			'Gui.SS_LDPT.gsflexgrid1.BuildStyle(Style,Column,Property,Arg,Val)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,0,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,0,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,0,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,1,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,1,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,1,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,2,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,2,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,2,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,3,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,3,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,3,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,4,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,4,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,4,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,5,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,5,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,5,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,6,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,6,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,6,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,7,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,7,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,7,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,8,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,8,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,8,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,9,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,9,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,9,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,10,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,10,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,10,"Fontstyle","Bold","True")

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,11,"Type","Locked","True")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,11,"Format","alignment",2)
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(1,11,"Fontstyle","Bold","True")


			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,0,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,0,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,1,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,1,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,2,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,2,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,3,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,3,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,4,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,4,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,5,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,5,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,6,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,6,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,7,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,7,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,8,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,8,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,9,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,9,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,10,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,10,"Format","alignment",2)

			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,11,"Type","Dropdownlist","Pass*!*Fail")
			Gui.SS_LDPT.gsflexgrid1.BuildStyle(2,11,"Format","alignment",2)


			Gui.SS_LDPT.gsflexgrid1.TextMatrix(0,0,"Weld 1")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,0,"Weld 2")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(2,0,"Weld 3")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(3,0,"Weld 4")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(4,0,"Weld 5")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(5,0,"Weld 6")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(6,0,"Weld 7")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(7,0,"Weld 8")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(8,0,"Weld 9")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(9,0,"Weld 10")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(10,0,"Weld 11")
			Gui.SS_LDPT.gsflexgrid1.TextMatrix(11,0,"Weld 12")

			Gui.SS_LDPT.gsflexgrid1.ApplyStyle(0,1)
'	Gui.SS_LDPT.gsflexgrid1.ApplyStyle(Row,Style)

			Gui.SS_LDPT.gsflexgrid1.ApplyStyle(1,2)


		F.Intrinsic.Control.Case("PULL")
			'Slot Check (Formerly named Pull Test, so the form name parameters will be "ss_Pull_Test"
			Gui.SS_PullTest.gsflexgridPT.Cols(10)
			Gui.SS_PullTest.gsflexgridPT.FixedRows(1)
			Gui.SS_PullTest.gsflexgridPT.Rows(4)
'			Gui.SS_PullTest.gsflexgridPT.setcolumnPercentages(".098:.098:.098:.098:.098:.098:.098:.098:.098:.098")
			Gui.SS_PullTest.gsflexgridPT.setcolumnPercentages(".1:.1:.1:.1:.1:.1:.1:.1:.1:.1")
			
			'(Form, FlexgirdName.BuilDstyle(Style, Column,"type","locked","true)

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,0,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,0,"Format","Numeric","True")
			
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,1,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,1,"Format","Numeric","True")

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,2,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,2,"Format","Numeric","True")

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,3,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,3,"Format","Numeric","True")

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,4,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,4,"Format","Numeric","True")

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,5,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,5,"Format","Numeric","True")

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,6,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,6,"Format","Numeric","True")

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,7,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,7,"Format","Numeric","True")

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,8,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,8,"Format","Numeric","True")

			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,9,"Type","Locked","False")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,9,"Format","Numeric","True")

'			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,10,"Type","Locked","False")
'			Gui.SS_PullTest.gsflexgridPT.BuildStyle(2,10,"Format","Numeric","True")

			'This will bold the fixed row
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,0,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,1,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,2,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,3,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,4,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,5,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,6,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,7,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,8,"Fontstyle","Bold","True")
			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,9,"Fontstyle","Bold","True")
'			Gui.SS_PullTest.gsflexgridPT.BuildStyle(3,10,"Fontstyle","Bold","True")

			'(Column, Row)
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(0,0,"1")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(1,0,"2")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(2,0,"3")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(3,0,"4")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(4,0,"5")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(5,0,"6")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(6,0,"7")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(7,0,"8")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(8,0,"9")
			Gui.SS_PullTest.gsflexgridPT.TextMatrix(9,0,"10")
			
			'(Row, Style)
			Gui.SS_PullTest.gsflexgridPT.ApplyStyle(0,3)
			Gui.SS_PullTest.gsflexgridPT.ApplyStyle(1,2)
			Gui.SS_PullTest.gsflexgridPT.ApplyStyle(2,2)
			Gui.SS_PullTest.gsflexgridPT.ApplyStyle(3,2)


		F.Intrinsic.Control.Case("DRIFT")

			'Drift
			Gui.SS_Drift.gsflexgrid1.Cols(2)
			Gui.SS_Drift.gsflexgrid1.Rows(2)
			Gui.SS_Drift.gsflexgrid1.FixedRows(1)
			Gui.SS_Drift.gsflexgrid1.SetColumnPercentages(".4:.57")

			Gui.SS_Drift.gsflexgrid1.BuildStyle(1,0,"Type","Locked","True")
			Gui.SS_Drift.gsflexgrid1.BuildStyle(1,0,"Format","alignment",2)
			Gui.SS_Drift.gsflexgrid1.BuildStyle(1,0,"Fontstyle","Bold","True")
'			Gui.SS_Drift.gsflexgrid1.ColWidth(0,3000)

			Gui.SS_Drift.gsflexgrid1.BuildStyle(3,0,"Type","Locked","True")
			Gui.SS_Drift.gsflexgrid1.BuildStyle(3,0,"Format","alignment",2)
			Gui.SS_Drift.gsflexgrid1.BuildStyle(3,0,"Fontstyle","Bold","False")
'			Gui.SS_Drift.gsflexgrid1.ColWidth(0,3000)

			Gui.SS_Drift.gsflexgrid1.BuildStyle(2,0,"Type","Dropdownlist","Final Inspect")
			Gui.SS_Drift.gsflexgrid1.BuildStyle(2,0,"Format","alignment",2)
			
'			Gui.SS_Drift.gsflexgrid1.ColWidth(1,2500)

			Gui.SS_Drift.gsflexgrid1.BuildStyle(1,1,"Type","Locked","True")
			Gui.SS_Drift.gsflexgrid1.BuildStyle(1,1,"Format","alignment",2)
			Gui.SS_Drift.gsflexgrid1.BuildStyle(1,1,"Fontstyle","Bold","True")

			Gui.SS_Drift.gsflexgrid1.BuildStyle(3,1,"Type","Locked","True")
			Gui.SS_Drift.gsflexgrid1.BuildStyle(3,1,"Format","alignment",2)
			Gui.SS_Drift.gsflexgrid1.BuildStyle(3,1,"Fontstyle","Bold","False")
			Gui.SS_Drift.gsflexgrid1.BuildStyle(3,1,"Format","Mask","##.000")
			Gui.SS_Drift.gsflexgrid1.BuildStyle(2,1,"Type","Locked","False")
			Gui.SS_Drift.gsflexgrid1.BuildStyle(2,1,"Format","Mask","##.000")
'			Gui.SS_Drift.gsflexgrid1.BuildStyle(2,1,"Format","Numeric","True")

			Gui.SS_Drift.gsflexgrid1.TextMatrix(0,0,"Point In Process")
			Gui.SS_Drift.gsflexgrid1.TextMatrix(1,0,"Drift #")

			Gui.SS_Drift.gsflexgrid1.ApplyStyle(0,1)
			Gui.SS_Drift.gsflexgrid1.ApplyStyle(1,2)

		F.Intrinsic.Control.Case("WELD")
			Gui.Stress_Weld.gsflexgrid1.Cols(5)
			Gui.Stress_Weld.gsflexgrid1.Rows(13)
			Gui.Stress_Weld.gsflexgrid1.FixedRows(1)
			Gui.Stress_Weld.gsflexgrid1.SetColumnPercentages(".25:.25:.25:.23:.0")
'			Gui.Stress_Weld.gsflexgrid1.FixedCols(1)


			'(Form, FlexgirdName.BuilDstyle(Style, Column,"type","locked","true)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,0,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,0,"Format","alignment",2)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,0,"Fontstyle","Bold","True")
		'	Gui.Stress_Weld.gsflexgrid1.ColWidth(0,2200)

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(2,0,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(2,0,"Format","alignment",2)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(2,0,"Fontstyle","Bold","True")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,1,"Type","Locked","False")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,1,"Format","alignment",2)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,1,"Fontstyle","Bold","True")
		'	Gui.Stress_Weld.gsflexgrid1.ColWidth(1,2200)

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,2,"Type","Locked","False")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,2,"Format","alignment",2)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,2,"Fontstyle","Bold","True")
		'	Gui.Stress_Weld.gsflexgrid1.ColWidth(2,2200)

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,3,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,3,"Format","alignment",2)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(1,3,"Fontstyle","Bold","True")

			'Rows for records

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,0,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,0,"Format","alignment",2)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,0,"Fontstyle","Bold","True")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,2,"Type","Locked","False")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,2,"Format","alignment",6)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,2,"Fontstyle","Bold","False")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,3,"Type","Locked","False")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,3,"Format","alignment",6)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(3,3,"Fontstyle","Bold","False")

			'buildstyle to lock the columns from user input
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,0,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,0,"Format","alignment",2)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,0,"Fontstyle","Bold","True")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,1,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,1,"Format","alignment",6)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,1,"Fontstyle","Bold","False")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,2,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,2,"Format","alignment",6)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,2,"Fontstyle","Bold","False")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,3,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,3,"Format","alignment",6)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(7,3,"Fontstyle","Bold","False")

			'buildstyle to unlock the columns from user input
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,0,"Type","Locked","True")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,0,"Format","alignment",2)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,0,"Fontstyle","Bold","True")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,1,"Type","Locked","False")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,1,"Format","alignment",6)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,1,"Fontstyle","Bold","True")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,2,"Type","Locked","False")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,2,"Format","alignment",6)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,2,"Fontstyle","Bold","True")

			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,3,"Type","Locked","False")
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,3,"Format","alignment",6)
			Gui.Stress_Weld.gsflexgrid1.BuildStyle(8,3,"Fontstyle","Bold","True")

			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,0,"Weld Loc")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(1,0,"Comp AMW#")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(2,0,"Weld Wire AMW#")
		Gui.Stress_Weld.gsflexgrid1.TextMatrix(3,0,"Weld Spec")
		Gui.Stress_Weld.gsflexgrid1.TextMatrix(4,0,"Scrn")


			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,1,"P1")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,2,"P2")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,3,"P3")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,4,"P4")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,5,"P5")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,6,"P6")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,7,"P7")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,8,"P8")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,9,"P9")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,10,"P10")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,11,"P11")
			Gui.Stress_Weld.gsflexgrid1.TextMatrix(0,12,"P12")
						
'			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(row,Style)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(0,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(0,1)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(1,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(2,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(3,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(4,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(5,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(6,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(7,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(8,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(9,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(10,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(11,2)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(12,2)
		
			'Sets style for records
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(1,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(2,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(3,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(4,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(5,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(6,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(7,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(8,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(9,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(10,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(11,3)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(12,3)
'			'Gui.Stress_Weld.gsflexgrid1.ApplyStyle(1,1)

	
		F.Intrinsic.Control.Case("SECTIONS")

			V.Local.ic.Declare(Long)

			Gui.Stress_Weld.gsfgScreens.Cols(4)
			Gui.Stress_Weld.gsfgScreens.Rows(1)
			Gui.Stress_Weld.gsfgScreens.Rows(2)
			Gui.Stress_Weld.gsfgScreens.FixedRows(1)
			Gui.Stress_Weld.gsfgScreens.SetColumnPercentages(".25:.24:.24:.24")


			Gui.Stress_Weld.gsfgScreens.TextMatrix(0,0,"Section")
			Gui.Stress_Weld.gsfgScreens.TextMatrix(1,0,"Screen")
			Gui.Stress_Weld.gsfgScreens.TextMatrix(2,0,"Slot Size")
			Gui.Stress_Weld.gsfgScreens.TextMatrix(3,0,"Act Section Length")

			F.Intrinsic.Control.For(V.Local.iC,0,3,1)
			                Gui.Stress_Weld.gsfgScreens.BuildStyle(1,V.Local.ic,"Format","Alignment",2)
			                F.Intrinsic.Control.If(V.Local.ic,=,1)
			                                Gui.Stress_Weld.gsfgScreens.BuildStyle(1,V.Local.ic,"Format","Alignment",4)
			                                Gui.Stress_Weld.gsfgScreens.BuildStyle(2,V.Local.ic,"Format","Alignment",4)
			                F.Intrinsic.Control.Else
			                                F.Intrinsic.Control.If(V.Local.ic,>=,2)
			                                                Gui.Stress_Weld.gsfgScreens.BuildStyle(2,V.Local.ic,"Format","Mask","0.000")
			                                F.Intrinsic.Control.EndIf
			                                Gui.Stress_Weld.gsfgScreens.BuildStyle(1,V.Local.ic,"Format","Alignment",2)
			                                Gui.Stress_Weld.gsfgScreens.BuildStyle(2,V.Local.ic,"Format","Alignment",6)
			                F.Intrinsic.Control.EndIf

			                Gui.Stress_Weld.gsfgScreens.BuildStyle(1,V.Local.ic,"Fontstyle","Bold",True)
			                Gui.Stress_Weld.gsfgScreens.BuildStyle(2,V.Local.ic,"Fontstyle","Bold",False)

			                Gui.Stress_Weld.gsfgScreens.BuildStyle(1,V.Local.ic,"type","Locked",True)
			                Gui.Stress_Weld.gsfgScreens.BuildStyle(2,V.Local.ic,"type","Locked",True)
			F.Intrinsic.Control.next(V.Local.ic)

			Gui.Stress_Weld.gsfgScreens.ApplyStyle(0,1)

'	
'			'Building Sections Grid
'			Gui.Stress_Weld.gsfgSections.Cols(5)
'			Gui.Stress_Weld.gsfgSections.Rows(2)
'			Gui.Stress_Weld.gsfgSections.FixedRows(1)
'			Gui.Stress_Weld.gsfgSections.SetColumnPercentages(".15:.10:.15:.35:.27")
'
'			Gui.Stress_Weld.gsfgSections.TextMatrix(0,0,"Section")
'			Gui.Stress_Weld.gsfgSections.TextMatrix(1,0,"Type")
'			Gui.Stress_Weld.gsfgSections.TextMatrix(2,0,"Slot Size (In)")
'			Gui.Stress_Weld.gsfgSections.TextMatrix(3,0,"Section Length (In)")
'			Gui.Stress_Weld.gsfgSections.TextMatrix(4,0,"Perf. Length (In)")
'
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,0,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,1,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,2,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,3,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,4,"type","locked",True)
'
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,0,"Fontstyle","Bold","True")
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,1,"Fontstyle","Bold","True")
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,2,"Fontstyle","Bold","True")
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,3,"Fontstyle","Bold","True")
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,4,"Fontstyle","Bold","True")
'
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,0,"Format","Alignment",2)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,1,"Format","Alignment",2)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,2,"Format","Alignment",2)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,3,"Format","Alignment",2)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(1,4,"Format","Alignment",2)
'
'			Gui.Stress_Weld.gsfgSections.BuildStyle(2,0,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(2,1,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(2,2,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(2,2,"Format","Mask","0.000")
'			Gui.Stress_Weld.gsfgSections.BuildStyle(2,4,"type","locked",False)
'
'			Gui.Stress_Weld.gsfgSections.BuildStyle(3,0,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(3,1,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(3,2,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(3,2,"Format","Mask","")
'			Gui.Stress_Weld.gsfgSections.BuildStyle(3,4,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(3,4,"Format","Mask","")
'
'			Gui.Stress_Weld.gsfgSections.BuildStyle(4,0,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(4,1,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(4,2,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(4,3,"type","locked",True)
'			Gui.Stress_Weld.gsfgSections.BuildStyle(4,4,"type","locked",True)
'
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(0,1)
'			Gui.Stress_Weld.gsfgSections.ApplyStyle(1,4)

F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("BuildStyle_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.BuildStyle.End

Program.Sub.cmdtempadd_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdtempadd_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sTime.Declare(String)
V.Local.sTime.Set(V.Ambient.Time)

F.Intrinsic.Control.If(V.Screen.HeatChecks!txtTemp.Text,=,"")
	F.Intrinsic.UI.Msgbox("Please enter a temperature")
F.Intrinsic.Control.Else
	F.Intrinsic.Math.Add(V.Global.iKey,1,V.Global.iKey)
	Gui.HeatChecks.lvw1.AddListItem(V.Global.iKey,V.Screen.HeatChecks!txtTemp.Text)
	Gui.HeatChecks.lvw1.SetListItemSubItemText(V.Global.iKey,1,V.local.sTime)
	Gui.HeatChecks.txtTemp.Text("")
	Gui.HeatChecks.txtTemp.SetFocus
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdtempadd_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdtempadd_click.End

Program.Sub.cmdtempsave_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdtempsave_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sScreen.Declare(String)
V.Local.sUser.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSQL2.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRet2.Declare(String)
V.Local.sRecList.Declare(String)
V.Local.i.Declare(String)
V.Local.sBatch.Declare(String)
V.Local.iCount.Declare(String)
V.Local.sRowCount.Declare(String)
V.Local.sRecCount.Declare(String)
V.Local.sTime.Declare(String)
V.Local.iRec.Declare(Long)
V.Local.iOrd.Declare(Long)
V.Local.dDate.Declare(Date)

V.Local.sBatch.Set(V.Screen.HeatChecks!txtBatch.Text)

F.Intrinsic.Control.BlockEvents

Gui.HeatChecks.cmdTempSave.Enabled(False)

F.Intrinsic.String.Concat("SELECT * FROM OVEN_TEMP WHERE BATCH = '",V.Screen.HeatChecks!txtBatch.Text,"'",V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Concat("DELETE FROM OVEN_TEMP WHERE BATCH = '",V.Screen.HeatChecks!txtBatch.Text,"'",V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM OVEN_TEMP")
Gui.HeatChecks.lvw1.RetrieveAllListItems(V.Local.sRecList)
F.Intrinsic.Control.If(V.Local.sRecList,<>,"***NORETURN***")
	F.Intrinsic.String.Split(V.Local.sRecList,"*!*",V.Local.sRecList)
	F.Intrinsic.Control.For(V.Local.i,V.Local.sRecList.LBound,V.Local.sRecList.UBound,1)
		Gui.HeatChecks.lvw1.ListitemKeyToOrdinal(V.Local.sRecList(V.Local.i),V.Local.iOrd)
		V.Local.sRet.Set(V.Screen.HeatChecks!lvw1.ListItemTextExtended(V.Local.iOrd))
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		F.Intrinsic.Math.Add(V.Local.iRec,1,V.Local.iRec)
		F.ODBC.conx!rst.AddNew
		F.ODBC.conx!rst.Set!BATCH(V.Local.sBatch)
		F.ODBC.conx!rst.Set!TEMP(V.Local.sRet)
		F.ODBC.conx!rst.Set!TIME(V.Local.sRet(1))
		F.ODBC.conx!rst.Set!REC_ID(V.Local.iRec)
		F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
		F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
		F.ODBC.conx!rst.Update
	F.Intrinsic.Control.Next(V.Local.i)
	Gui.HeatChecks.txtTemp.Text("")
	F.Intrinsic.UI.Msgbox("Temperature Information saved","Save Successful")
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.String.Concat("SELECT * FROM GCG_ACPT_RJCT WHERE SERIAL = '",V.Screen.HeatChecks!txtBatch.Text,"' AND LOG_SHEET = 'TEMP'",V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Concat("DELETE FROM GCG_ACPT_RJCT WHERE SERIAL = '",V.Screen.HeatChecks!txtBatch.Text,"' AND LOG_SHEET = 'TEMP'",V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_ACPT_RJCT")
F.ODBC.conx!rst.AddNew
	F.Intrinsic.Control.If(V.Screen.HeatChecks!ddlAR.ListIndex,=,0)
		F.ODBC.conx!rst.Set!ACCEPTED("Accept")
	F.Intrinsic.Control.ElseIf(V.Screen.HeatChecks!ddlAR.ListIndex,=,1)
		F.ODBC.conx!rst.Set!ACCEPTED("Reject")
	F.Intrinsic.Control.Else
		F.ODBC.conx!rst.Set!ACCEPTED("None")
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Set!SERIAL(V.Screen.HeatChecks!txtBatch.Text)
	F.ODBC.conx!rst.Set!LOG_SHEET("TEMP")
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
F.ODBC.conx!rst.Update
F.ODBC.conx!rst.Close
	
F.Intrinsic.Control.UnBlockEvents

Gui.HeatChecks.cmdTempSave.Enabled(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdtempsave_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdtempsave_click.End

Program.Sub.cmdedit_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdedit_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.SS_Heat.cmdAddSerial.Enabled(False)
Gui.SS_Heat.cmdUpdateSN.Enabled(True)
Gui.SS_Heat.txtBatchNum.Enabled(False)

'Gui.SS_Heat.lvw1.ClearItems
Gui.HeatChecks..Visible(False)

Gui.SS_Heat..Show

'Gui.SS_Heat.cmdHeatSave.Enabled(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdedit_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdedit_click.End

Program.Sub.cmdheatchecks_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdheatchecks_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.iOrd.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRec.Declare(String)
V.Local.sRows.Declare(String)

'Gui.SS_Heat.lvw1.ClearItems
Gui.HeatChecks.lvw1.ClearItems

Gui.SS_Heat.lvw1.RetrieveAllListItems(V.Local.sRows)
F.Intrinsic.Control.If(V.Local.sRows,=,"***NORETURN***")
	F.Intrinsic.UI.Msgbox("Please enter serial numbers for the batch ID")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Concat("SELECT * FROM OVEN_TEMP WHERE BATCH = '",V.Screen.SS_Heat!txtBatchNum.Text,"' ORDER BY REC_ID ASC",V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)

	F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)
		Gui.HeatChecks.lvw1.AddListItem(V.Global.iKey,V.ODBC.conx!rst.FieldValTrim!TEMP)
		Gui.HeatChecks.lvw1.SetListItemSubItemText(V.Global.iKey,1,V.ODBC.conx!rst.FieldValTrim!TIME)
	F.Intrinsic.Math.Add(V.Global.iKey,1,V.Global.iKey)

	F.ODBC.conx!rst.MoveNext
	F.Intrinsic.Control.Loop
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

Gui.HeatChecks.txtBatch.Text(V.Screen.SS_Heat!txtBatchNum.Text)
Gui.HeatChecks..Show
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdheatchecks_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmdheatchecks_click.End

Program.Sub.cmdaddserial_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdaddserial_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRows.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iOrd.Declare(Long)

F.Intrinsic.Control.If(V.Screen.SS_Heat!txtSerialNum.Text,=,"")
	F.Intrinsic.UI.Msgbox("Please enter a serial number")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Screen.SS_Heat!txtBatchNum.Text,=,"")
	F.Intrinsic.UI.Msgbox("Please enter a batch number")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'Checks to see if there are any of the same serial numbers within the recordset
F.Intrinsic.String.Build("SELECT * FROM HEAT_BATCH WHERE BATCH = '{0}' AND SERIAL_NUMBER = '{1}'",V.Screen.SS_Heat!txtBatchNum.Text,V.Screen.SS_Heat!txtSerialNum.Text,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.UI.Msgbox("Serial number for this specific batch number already exists")
	F.ODBC.conx!rst.Close
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

'checks to see if there are duplicate serial numbers already within the listiew.
Gui.SS_Heat.lvw1.RetrieveAllListItems(V.Local.sRows)
F.Intrinsic.Control.If(V.Local.sRows,<>,"***NORETURN***")
	F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
	F.Intrinsic.Control.For(V.Local.iC,0,V.Local.sRows.UBound,1)
		Gui.SS_Heat.lvw1.RetrieveItemOrdinal(V.Local.sRows(V.Local.iC),V.Local.iOrd)
		V.Local.sRet.Set(V.Screen.SS_Heat!lvw1.ListItemTextExtended(V.Local.iOrd))
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		F.Intrinsic.Control.If(V.Screen.SS_Heat!txtSerialNum.Text,=,V.Local.sRet(0))
			F.Intrinsic.UI.Msgbox("Serial number for this specific batch number already exists")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.EndIf


F.Intrinsic.Math.Add(V.Global.iKey,1,V.Global.iKey)
Gui.SS_Heat.lvw1.AddListItem(V.Global.iKey,V.Screen.SS_Heat!txtSerialNum.Text)
Gui.SS_Heat.lvw1.SetListItemSubItemText(V.Global.iKey,1,V.Screen.SS_Heat!txtBatchNum.Text)

Gui.SS_Heat.txtSerialNum.Text("")
Gui.SS_Heat.txtBatchNum.Enabled(False)
Gui.SS_Heat.cmdHeatSave.Enabled(True)
Gui.SS_Heat.txtSerialNum.SetFocus

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdaddserial_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdaddserial_click.End

Program.Sub.cmdsavesn_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdsavesn_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Updates Serial Number

V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSerialReload.Declare(String)
V.Local.sUpdateSN.Declare(String)
V.Local.sRows.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iOrd.Declare(Long)
V.Local.dDate.Declare(Date)


V.Local.sUpdateSN.Set(V.Screen.SS_Heat!txtSerialNum.Text)

F.Intrinsic.Control.If(V.Local.sUpdateSN,=,"")
	F.Intrinsic.UI.Msgbox("Please select a serial number")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Global.sOldSN,=,V.Local.sUpdateSN)
	Gui.SS_Heat.cmdAddSerial.Enabled(True)
	Gui.SS_Heat.cmdUpdateSN.Enabled(False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'checks to see if there are duplicate serial numbers already within the listiew.
Gui.SS_Heat.lvw1.RetrieveAllListItems(V.Local.sRows)
F.Intrinsic.Control.If(V.Local.sRows,<>,"***NORETURN***")
	F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
	F.Intrinsic.Control.For(V.Local.iC,0,V.Local.sRows.UBound,1)
		Gui.SS_Heat.lvw1.RetrieveItemOrdinal(V.Local.sRows(V.Local.iC),V.Local.iOrd)
		V.Local.sRet.Set(V.Screen.SS_Heat!lvw1.ListItemTextExtended(V.Local.iOrd))
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		F.Intrinsic.Control.If(V.Screen.SS_Heat!txtSerialNum.Text,=,V.Local.sRet(0))
			F.Intrinsic.UI.Msgbox("Serial number for this specific batch number already exists")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.BlockEvents


F.Intrinsic.String.Build("SELECT * FROM HEAT_BATCH WHERE BATCH = '{0}' AND SERIAL_NUMBER = '{1}'",V.Screen.SS_Heat!txtBatchNum.Text,V.Global.sOldSN,V.Local.sSQL)

F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.ODBC.conx!rst.Set!SERIAL_NUMBER(V.Local.sUpdateSN)
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Update
	F.ODBC.conx!rst.Close
	F.Intrinsic.UI.Msgbox("Serial number successfully updated")
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox("Records for previous serial number not found. Unable to save","Unable to save")
	F.ODBC.conx!rst.Close
	F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
Gui.SS_Heat.txtSerialNum.Text("")
V.Global.sOldSN.Set("")

Gui.SS_Heat.lvw1.ClearItems
'After list view has been cleared, which included older serial number, the listview will reload the batch including the newly updated serial number
F.Intrinsic.String.Concat("SELECT * FROM HEAT_BATCH WHERE BATCH = '",V.Screen.SS_Heat!txtBatchNum.Text,"' ORDER BY REC_ID ASC",V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)

	F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)
		Gui.SS_Heat.lvw1.AddListItem(V.Global.iKey,V.ODBC.conx!rst.FieldValTrim!SERIAL_NUMBER)
		Gui.SS_Heat.lvw1.SetListItemSubItemText(V.Global.iKey,1,V.Screen.SS_Heat!txtBatchNum.Text)
	F.Intrinsic.Math.Add(V.Global.iKey,1,V.Global.iKey)
	F.ODBC.conx!rst.MoveNext
	F.Intrinsic.Control.Loop

F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close
Gui.SS_Heat.cmdUpdateSN.Enabled(False)
Gui.SS_Heat.cmdAddSerial.Enabled(True)
F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdsavesn_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdsavesn_click.End

Program.Sub.heatchecks_unload.Start
F.Intrinsic.Control.SetErrorHandler("heatchecks_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.HeatChecks.lvw1.ClearItems
Gui.HeatChecks..Visible(False)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("heatchecks_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.heatchecks_unload.End

Program.Sub.LoadRst_Temp.Start
F.Intrinsic.Control.SetErrorHandler("LoadRst_Temp_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL.Declare(String)
V.Local.sSerial.Declare(String)
V.Local.sBatch.Declare(String)
V.Local.sTemp.Declare(String)
V.Local.sTime.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sScreen.Declare(String)

V.local.sBatch.Set(V.Screen.HeatChecks!txtBatch.Text)
Gui.HeatChecks.lvw1.ClearItems

F.Intrinsic.String.Build("SELECT * FROM GCG_HEAT_CHECK_TEMP WHERE JOB = '{0}' AND SUFFIX = '{1}' ANd Seq = '{5}' AND BATCH ='{2}' AND SCREEN_ID = '{3}' AND SERIAL = '{4}' ORDER BY TIME ASC",V.Global.sWO,V.Global.sSuff,V.Local.sBatch,V.local.sScreen,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	V.Local.sAccept.Set(V.ODBC.conx!rst.FieldValTrim!ACCEPTED)
	F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)
		V.Local.sTemp.Set(V.ODBC.conx!rst.FieldValTrim!TEMP)
		V.Local.sTime.Set(V.ODBC.conx!rst.FieldValTrim!TIME)
		F.Intrinsic.Control.If(V.Local.sTemp,<>,"")
			F.Intrinsic.Math.Add(V.Global.iKey,1,V.Global.iKey)
			Gui.HeatChecks.lvw1.AddListItem(V.Global.iKey,V.Local.sTemp)
			Gui.HeatChecks.lvw1.SetListItemSubItemText(V.Global.iKey,1,V.local.sTime)
		F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.MoveNext
	F.Intrinsic.Control.Loop
	'move drop down menu to Accepted if sAccepted = "Accepted"
	F.Intrinsic.Control.If(V.Local.sAccept,=,"Accept")
		Gui.HeatChecks.ddlAR.ListIndex(0)
	F.Intrinsic.Control.ElseIf(V.Local.sAccept,=,"Reject")
		Gui.HeatChecks.ddlAR.ListIndex(1)
	F.Intrinsic.Control.Else
		Gui.HeatChecks.ddlAR.ListIndex(2)
	F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close
	
F.Intrinsic.Control.Else
F.ODBC.conx!rst.Close
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("LoadRst_Temp_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.LoadRst_Temp.End

Program.Sub.lvw1_dblclick.Start
F.Intrinsic.Control.SetErrorHandler("lvw1_dblclick_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sRet.Declare(String)
V.Local.sSerial.Declare(String)
V.Local.iOrd.Declare(Long)

Gui.SS_Heat.cmdAddSerial.Enabled(False)
Gui.SS_Heat.cmdDeleteSN.Enabled(True)
Gui.SS_Heat.lvw1.RetrieveSelectedListitems(V.Local.sRet)
Gui.SS_Heat.lvw1.ListitemKeyToOrdinal(V.Local.sRet,V.Local.iOrd)
V.Local.sSerial.Set(V.Screen.SS_Heat!lvw1.ListItemTextExtended(V.Local.iOrd))
F.Intrinsic.String.Split(V.Local.sSerial,"*!*",V.Local.sSerial)
Gui.SS_Heat.txtSerialNum.Text(V.Local.sSerial(0))
V.Global.sOldSN.Set(V.Local.sSerial(0))
Gui.SS_Heat.cmdUpdateSN.Enabled(True)
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("lvw1_dblclick_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.lvw1_dblclick.End

Program.Sub.ddlldptcompid_click.Start
F.Intrinsic.Control.SetErrorHandler("ddlldptcompid_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


V.Local.sSQL.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.sCompID.Declare(String)

V.Local.sScreen.Set(V.Screen.SS_LDPT!ddlScreenID.Text)
V.Local.sCompID.Set(V.Screen.SS_LDPT!ddlCompID.Text)

F.Intrinsic.String.Build("Select * from GCG_Screen_Comp where Job = '{0}' and Suffix = '{1}' And SEQ = '{5}' and Serial ='{2}' and Screen_ID = '{3}' and Comp_ID = '{4}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Local.sCompID,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.ODBC.conx!rst.Close
	F.Intrinsic.String.Build("SELECT * FROM GCG_SCREEN_LIQ_DYE WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{5}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND COMP_ID =  '{4}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.local.sScreen,V.local.sCompID,V.Global.sSeq,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,1,V.ODBC.conx!rst.FieldValTrim!CLEANER_TYPE)
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,2,V.ODBC.conx!rst.FieldValTrim!PENETRANT_TYPE)
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,3,V.ODBC.conx!rst.FieldValTrim!DEVELOPER_TYPE)
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,4,V.ODBC.conx!rst.FieldValTrim!SURFACE_TEMP)
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,5,V.ODBC.conx!rst.FieldValTrim!PRE_CLEAN_DRY)
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,6,V.ODBC.conx!rst.FieldValTrim!PENETRANT_DRY)
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,7,V.ODBC.conx!rst.FieldValTrim!POST_REMOVAL_DRY)
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,8,V.ODBC.conx!rst.FieldValTrim!DEVELOPER_DRY)
		V.Local.sAccept.Set(V.ODBC.conx!rst.FieldValTrim!ACCEPTED)
		F.Intrinsic.Control.If(V.Local.sAccept,=,"Accept")
			Gui.SS_LDPT.ddlAR.ListIndex(0)
		F.Intrinsic.Control.ElseIf(V.Local.sAccept,=,"Reject")
			Gui.SS_LDPT.ddlAR.ListIndex(1)
		F.Intrinsic.Control.EndIf
		F.ODBC.conx!rst.Close
	F.Intrinsic.Control.Else
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,1,"")
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,2,"")
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,3,"")
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,4,"")
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,5,"")
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,6,"")
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,7,"")
		Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,8,"")
	F.ODBC.conx!rst.Close
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlldptcompid_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.ui.msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf

Program.Sub.ddlldptcompid_click.End

Program.Sub.ddlmain_forms_click.Start
'
'F.Intrinsic.Control.If(V.Screen.SS_MainForm!txtSerial.Text,=,"")
'	F.Intrinsic.UI.Msgbox("Please enter a Serial Number")
'	F.Intrinsic.Control.ExitSub
'F.Intrinsic.Control.EndIf

Program.Sub.ddlmain_forms_click.End

Program.Sub.ddlslot_check_screenid_click.Start
F.Intrinsic.Control.SetErrorHandler("ddlslot_check_screenid_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sLogSheet.Declare(String)
V.Local.iCon.Declare(Long)
V.Local.iCol.Declare(Long)
V.Local.iRow.Declare(Long)

'Though this subroutine will have references to Pull Test, this is pulling and loading data associated with the Slot Check test, this was due to a last minute change.

'Loading exisiting data if any is found
V.Local.sLogSheet.Set("SLOT_CHECK")
V.Local.sScreen.Set(V.Screen.SS_PullTest!ddlScreenID.Text)
F.Intrinsic.String.Build("Select Top 10 Beginning, Middle, {4}END{4}  from GCG_Slot_Check Where Job = '{0}' And Suffix = '{1}' and Serial = '{2}' and Screen_ID = '{3}' ORDER BY Date_last_Change, Seq desc, TEST_NO ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.local.sScreen,V.Ambient.DblQuote,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,1,V.ODBC.conx!rst.FieldValTrim!BEGINNING)
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,2,V.ODBC.conx!rst.FieldValTrim!MIDDLE)
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,3,V.ODBC.conx!rst.FieldValTrim!END)
	F.Intrinsic.Math.Add(V.Local.iCol,1,V.Local.iCol)
	F.ODBC.conx!rst.MoveNext
F.Intrinsic.Control.Loop
F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.EOF,=,True)
	F.Intrinsic.Control.For(V.Local.iCon,V.Local.iCol,9,1)
		Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,1,"")
		Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,2,"")
		Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,3,"")
		F.Intrinsic.Math.Add(V.Local.iCol,1,V.Local.iCol)
	F.Intrinsic.Control.Next(V.local.iCon)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{5}' AND SERIAL  = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = '{4}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sScreen,V.Local.sLogSheet,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst2",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst2.EOF,<>,True)
		F.Intrinsic.Control.If(V.ODBC.conx!rst2.FieldValTrim!ACCEPTED,=,"Accept")
			Gui.SS_PullTest.ddlAR.ListIndex(0)
		F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst2.FieldValTrim!ACCEPTED,=,"Reject")
			Gui.SS_PullTest.ddlAR.ListIndex(1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.ODBC.conx!rst2.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlslot_check_screenid_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.ddlslot_check_screenid_click.End

Program.Sub.ddlpulltest_screenid_click.Start
F.Intrinsic.Control.SetErrorHandler("ddlpulltest_screenid_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL3.Declare(String)
V.Local.sSQL2.Declare(String)
V.Local.sSQL1.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sScreen.Declare(String)

V.Local.sScreen.Set(V.Screen.SS_SlotCheck!ddlScreenID.Text)
F.Intrinsic.String.Build("SELECT * FROM GCG_PULL_TEST WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' AND SCREEN_ID = '{3} 'ORDER BY TEST_NO ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	Gui.SS_SlotCheck.txtFT1.Text(V.ODBC.conx!rst.FieldValTrim!FRONT)
	Gui.SS_SlotCheck.txtBT1.Text(V.ODBC.conx!rst.FieldValTrim!BACK)
	F.ODBC.conx!rst.MoveNext
	Gui.SS_SlotCheck.txtFT2.Text(V.ODBC.conx!rst.FieldValTrim!FRONT)
	Gui.SS_SlotCheck.txtBT2.Text(V.ODBC.conx!rst.FieldValTrim!BACK)
	F.ODBC.conx!rst.MoveNext
	Gui.SS_SlotCheck.txtFT3.Text(V.ODBC.conx!rst.FieldValTrim!FRONT)
	Gui.SS_SlotCheck.txtBT3.Text(V.ODBC.conx!rst.FieldValTrim!BACK)
F.Intrinsic.Control.Else
	Gui.SS_SlotCheck.txtFT1.Text("")
	Gui.SS_SlotCheck.txtBT1.Text("")
	Gui.SS_SlotCheck.txtFT2.Text("")
	Gui.SS_SlotCheck.txtBT2.Text("")
	Gui.SS_SlotCheck.txtFT3.Text("")
	Gui.SS_SlotCheck.txtBT3.Text("")
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{4}'  AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = 'PULL'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Accept")
		Gui.SS_SlotCheck.ddlAR.ListIndex(0)
	F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Reject")
		Gui.SS_SlotCheck.ddlAR.ListIndex(1)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlpulltest_screenid_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.ddlpulltest_screenid_click.End

Program.Sub.txtft1_change.Start
'F.Intrinsic.Control.If(V.Screen.SS_SlotCheck!txtFT1.Text,>,0)
'	F.Intrinsic.UI.Msgbox("Val greater than 0")
'F.Intrinsic.Control.EndIf
'
V.Local.fFT1.Declare(Float)
V.Local.fFT2.Declare(Float)
V.Local.fFT3.Declare(Float)
V.Local.fFav.Declare(Float)
V.Local.fRet.Declare(Float)

V.Local.fFT1.Set(V.Screen.SS_SlotCheck!txtFT1.Text)
V.Local.fFT2.Set(V.Screen.SS_SlotCheck!txtFT2.Text)
V.Local.fFT3.Set(V.Screen.SS_SlotCheck!txtFT3.Text)

V.Local.fFav.Set(V.Screen.SS_SlotCheck!txtFav.Text)

F.Intrinsic.Math.Add(V.Local.fFT1,V.Local.fFT2,V.Local.fFT3,V.Local.fRet)
F.Intrinsic.Math.Div(V.Local.fRet,3,V.Local.fFav)
F.Intrinsic.Math.Round(V.Local.fFav,2,V.Local.fFav)
Gui.SS_SlotCheck.txtFav.Text(V.Local.fFav)


Program.Sub.txtft1_change.End

Program.Sub.txtft2_change.Start
V.Local.fFT1.Declare(Float)
V.Local.fFT2.Declare(Float)
V.Local.fFT3.Declare(Float)
V.Local.fFav.Declare(Float)
V.Local.fRet.Declare(Float)

V.Local.fFT1.Set(V.Screen.SS_SlotCheck!txtFT1.Text)
V.Local.fFT2.Set(V.Screen.SS_SlotCheck!txtFT2.Text)
V.Local.fFT3.Set(V.Screen.SS_SlotCheck!txtFT3.Text)

V.Local.fFav.Set(V.Screen.SS_SlotCheck!txtFav.Text)

F.Intrinsic.Math.Add(V.Local.fFT1,V.Local.fFT2,V.Local.fFT3,V.Local.fRet)
F.Intrinsic.Math.Div(V.Local.fRet,3,V.Local.fFav)
F.Intrinsic.Math.Round(V.Local.fFav,2,V.Local.fFav)
Gui.SS_SlotCheck.txtFav.Text(V.Local.fFav)

Program.Sub.txtft2_change.End

Program.Sub.txtft3_change.Start
F.Intrinsic.Control.SetErrorHandler("txtft3_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.fFT1.Declare(Float)
V.Local.fFT2.Declare(Float)
V.Local.fFT3.Declare(Float)
V.Local.fFav.Declare(Float)
V.Local.fRet.Declare(Float)

V.Local.fFT1.Set(V.Screen.SS_SlotCheck!txtFT1.Text)
V.Local.fFT2.Set(V.Screen.SS_SlotCheck!txtFT2.Text)
V.Local.fFT3.Set(V.Screen.SS_SlotCheck!txtFT3.Text)

V.Local.fFav.Set(V.Screen.SS_SlotCheck!txtFav.Text)

F.Intrinsic.Math.Add(V.Local.fFT1,V.Local.fFT2,V.Local.fFT3,V.Local.fRet)
F.Intrinsic.Math.Div(V.Local.fRet,3,V.Local.fFav)
F.Intrinsic.Math.Round(V.Local.fFav,2,V.Local.fFav)
Gui.SS_SlotCheck.txtFav.Text(V.Local.fFav)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txtft3_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.txtft3_change.End

Program.Sub.txtbt1_change.Start
F.Intrinsic.Control.SetErrorHandler("txtbt1_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.fBT1.Declare(Float)
V.Local.fBT2.Declare(Float)
V.Local.fBT3.Declare(Float)
V.Local.fBav.Declare(Float)
V.Local.fRet.Declare(Float)

V.Local.fBT1.Set(V.Screen.SS_SlotCheck!txtBT1.Text)
V.Local.fBT2.Set(V.Screen.SS_SlotCheck!txtBT2.Text)
V.Local.fBT3.Set(V.Screen.SS_SlotCheck!txtBT3.Text)

V.Local.fBav.Set(V.Screen.SS_SlotCheck!txtBav.Text)


F.Intrinsic.Math.Add(V.Local.fBT1,V.Local.fBT2,V.Local.fBT3,V.Local.fRet)
F.Intrinsic.Math.Div(V.Local.fRet,3,V.Local.fBav)
F.Intrinsic.Math.Round(V.Local.fBav,2,V.Local.fBav)

Gui.SS_SlotCheck.txtBav.Text(V.Local.fBav)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txtbt1_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.txtbt1_change.End

Program.Sub.txtbt2_change.Start
F.Intrinsic.Control.SetErrorHandler("txtbt2_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.fBT1.Declare(Float)
V.Local.fBT2.Declare(Float)
V.Local.fBT3.Declare(Float)
V.Local.fBav.Declare(Float)
V.Local.fRet.Declare(Float)

V.Local.fBT1.Set(V.Screen.SS_SlotCheck!txtBT1.Text)
V.Local.fBT2.Set(V.Screen.SS_SlotCheck!txtBT2.Text)
V.Local.fBT3.Set(V.Screen.SS_SlotCheck!txtBT3.Text)

V.Local.fBav.Set(V.Screen.SS_SlotCheck!txtBav.Text)


F.Intrinsic.Math.Add(V.Local.fBT1,V.Local.fBT2,V.Local.fBT3,V.Local.fRet)
F.Intrinsic.Math.Div(V.Local.fRet,3,V.Local.fBav)
F.Intrinsic.Math.Round(V.Local.fBav,2,V.Local.fBav)
Gui.SS_SlotCheck.txtBav.Text(V.Local.fBav)



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txtbt2_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.txtbt2_change.End

Program.Sub.txtbt3_change.Start
F.Intrinsic.Control.SetErrorHandler("txtbt3_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.fBT1.Declare(Float)
V.Local.fBT2.Declare(Float)
V.Local.fBT3.Declare(Float)
V.Local.fBav.Declare(Float)
V.Local.fRet.Declare(Float)

V.Local.fBT1.Set(V.Screen.SS_SlotCheck!txtBT1.Text)
V.Local.fBT2.Set(V.Screen.SS_SlotCheck!txtBT2.Text)
V.Local.fBT3.Set(V.Screen.SS_SlotCheck!txtBT3.Text)

V.Local.fBav.Set(V.Screen.SS_SlotCheck!txtBav.Text)


F.Intrinsic.Math.Add(V.Local.fBT1,V.Local.fBT2,V.Local.fBT3,V.Local.fRet)
F.Intrinsic.Math.Div(V.Local.fRet,3,V.Local.fBav)
F.Intrinsic.Math.Round(V.Local.fBav,2,V.Local.fBav)
Gui.SS_SlotCheck.txtBav.Text(V.Local.fBav)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txtbt3_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.txtbt3_change.End

Program.Sub.Load_Drift.Start
F.Intrinsic.Control.SetErrorHandler("Load_Drift_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.iRowCount.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sLogSheet.Declare(String)
V.Local.iRow.Declare(Long)
V.Local.iRows.Declare(Long)

V.Local.sLogSheet.Set("DRIFT")
F.Intrinsic.Control.BlockEvents


V.Local.iRow.Set(V.Screen.SS_Drift!gsflexgrid1.Rows)
'Gui.SS_Drift.gsflexgrid1.ApplyStyle(V.Local.iRow
'F.Intrinsic.String.Build("SELECT PROCESS, DRIFT_NO FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' ORDER BY REC_ID ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sSQL)
'F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
'F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
'	Gui.SS_Drift.gsflexgrid1.LoadRecordset("conx!rst",3)
'	V.Local.iRow.Set(V.Screen.SS_Drift!gsflexgrid1.Rows)
'	F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)
'	Gui.SS_Drift.gsflexgrid1.ApplyStyle(V.Local.iRow,2)
'F.Intrinsic.Control.Else
'	Gui.SS_Drift.gsflexgrid1.Rows(2)
'	Gui.SS_Drift.gsflexgrid1.TextMatrix(1,1,"")
'	F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)
'	Gui.SS_Drift.gsflexgrid1.ApplyStyle(V.Local.iRow,2)
'F.Intrinsic.Control.EndIf
'F.ODBC.conx!rst.Close

'don't need to do this anymore
'F.Intrinsic.String.Build("SELECT SCREEN_ID, PROCESS, DRIFT_NO FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' And Screen_ID = ' ORDER BY REC_ID ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sSQL)
'F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
'F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
'	F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!SCREEN_ID,<>,"")
'		Gui.SS_Drift.ddlScreenID.Text(V.ODBC.conx!rst.FieldValTrim!SCREEN_ID)
'	F.Intrinsic.Control.EndIf
'F.Intrinsic.Control.EndIf
'F.ODBC.conx!rst.Close

'F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' AND SCREEN_ID = '' ORDER BY DATE_LAST_CHANGE, TIME DESC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sSQL)
F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{4}' AND SERIAL = '{2}' AND LOG_SHEET = '{3}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sLogSheet,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst2",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst2.EOF,<>,True)
	F.Intrinsic.Control.If(V.ODBC.conx!rst2.FieldValTrim!ACCEPTED,=,"Accept")
		Gui.SS_Drift.ddlAR.ListIndex(0)
	F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst2.FieldValTrim!ACCEPTED,=,"Reject")
		Gui.SS_Drift.ddlAR.ListIndex(1)
	F.Intrinsic.Control.Else
		Gui.SS_Drift.ddlAR.ListIndex(2)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst2.Close
F.Intrinsic.Control.UnBlockEvents


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_Drift_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_Drift.End

Program.Sub.Load_Liq_Dye_Pen.Start
F.Intrinsic.Control.SetErrorHandler("Load_Liq_Dye_Pen_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)

F.Intrinsic.String.Build("SELECT * FROM GCG_SCREEN_LIQ_DYE WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' Order By Date_Last_Change Desc",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	Gui.SS_LDPT.txtCleanerType.Text(V.ODBC.conx!rst.FieldValTrim!CLEANER_TYPE)
	Gui.SS_LDPT.txtPenetrantType.Text(V.ODBC.conx!rst.FieldValTrim!PENETRANT_TYPE)
	Gui.SS_LDPT.txtDeveloperType.Text(V.ODBC.conx!rst.FieldValTrim!DEVELOPER_TYPE)
	Gui.SS_LDPT.txtPipeSurfType.Text(V.ODBC.conx!rst.FieldValTrim!SURFACE_TEMP)
	Gui.SS_LDPT.txtPreCleanDryTime.Text(V.ODBC.conx!rst.FieldValTrim!PRE_CLEAN_DRY)
	Gui.SS_LDPT.txtPenetrantDryTime.Text(V.ODBC.conx!rst.FieldValTrim!PENETRANT_DRY)
	Gui.SS_LDPT.txtPostRemDry.Text(V.ODBC.conx!rst.FieldValTrim!POST_REMOVAL_DRY)
	Gui.SS_LDPT.txtDevDryTime.Text(V.ODBC.conx!rst.FieldValTrim!DEVELOPER_DRY)
	'Gui.SS_LDPT.gsflexgrid1.TextMatrix(Col,Row,Val)

	Gui.SS_LDPT.gsflexgrid1.TextMatrix(0,1,V.ODBC.conx!rst.FieldValTrim!Weld_1)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,1,V.ODBC.conx!rst.FieldValTrim!Weld_2)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(2,1,V.ODBC.conx!rst.FieldValTrim!Weld_3)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(3,1,V.ODBC.conx!rst.FieldValTrim!Weld_4)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(4,1,V.ODBC.conx!rst.FieldValTrim!Weld_5)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(5,1,V.ODBC.conx!rst.FieldValTrim!Weld_6)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(6,1,V.ODBC.conx!rst.FieldValTrim!Weld_7)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(7,1,V.ODBC.conx!rst.FieldValTrim!Weld_8)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(8,1,V.ODBC.conx!rst.FieldValTrim!Weld_9)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(9,1,V.ODBC.conx!rst.FieldValTrim!Weld_10)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(10,1,V.ODBC.conx!rst.FieldValTrim!Weld_11)
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(11,1,V.ODBC.conx!rst.FieldValTrim!Weld_12)

	'Search for Accept/Reject setting
	F.Intrinsic.String.Build("SELECT * from GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' AND LOG_SHEET = 'LIQUID_DYE_PEN'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst2",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst2.EOF,<>,True)
		F.Intrinsic.Control.If(V.ODBC.conx!rst2.FieldValTrim!ACCEPTED,=,"Accept")
			Gui.SS_LDPT.ddlAR.ListIndex(0)
		F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst2.FieldValTrim!ACCEPTED,=,"Reject")
			Gui.SS_LDPT.ddlAR.ListIndex(1)
		F.Intrinsic.Control.Else
			Gui.SS_LDPT.ddlAR.ListIndex(2)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst2.Close


'Else if no records exist, clear all data that may have been entered from previous serial number
F.Intrinsic.Control.Else
	Gui.SS_LDPT.txtCleanerType.Text("")
	Gui.SS_LDPT.txtPenetrantType.Text("")
	Gui.SS_LDPT.txtDeveloperType.Text("")
	Gui.SS_LDPT.txtPipeSurfType.Text("")
	Gui.SS_LDPT.txtPreCleanDryTime.Text("")
	Gui.SS_LDPT.txtPenetrantDryTime.Text("")
	Gui.SS_LDPT.txtPostRemDry.Text("")
	Gui.SS_LDPT.txtDevDryTime.Text("")
	'Gui.SS_LDPT.gsflexgrid1.TextMatrix(Col,Row,Val)

	Gui.SS_LDPT.gsflexgrid1.TextMatrix(0,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(1,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(2,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(3,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(4,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(5,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(6,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(7,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(8,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(9,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(10,1,"")
	Gui.SS_LDPT.gsflexgrid1.TextMatrix(11,1,"")

F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_Liq_Dye_Pen_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_Liq_Dye_Pen.End

Program.Sub.Load_SlotCheck.Start
F.Intrinsic.Control.SetErrorHandler("Load_SlotCheck_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


V.Local.sSQL.Declare(String)
V.Local.sLogSheet.Declare(String)
V.Local.iCol.Declare(Long)
V.Local.R.Declare(Long)
V.Local.bEx.Declare(Boolean)

F.Intrinsic.Variable.ArgExists("Serial",V.Local.bEx)


V.Local.sLogSheet.Set("SLOT_CHECK")
F.Intrinsic.Control.If(V.Local.bEx,=,False)
	F.Intrinsic.String.Build("SELECT * FROM GCG_SLOT_CHECK WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL =  '{2}' AND SCREEN_ID = '' ORDER BY TEST_NO ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sSQL)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT * FROM GCG_SLOT_CHECK WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL =  '{2}' AND SCREEN_ID = '{3}' ORDER BY TEST_NO ASC",V.Global.sWO,V.Global.sSuff,V.args.Serial,V.args.Screen,V.Local.sSQL)
F.Intrinsic.Control.EndIf

F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
'	V.Local.iCol.Set(1)
	F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)

	'Gui.SS_PullTest.gsflexgridPT.TextMatrix(Col,Row,Val)
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,1,V.ODBC.conx!rst.FieldValTrim!BEGINNING)
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,2,V.ODBC.conx!rst.FieldValTrim!MIDDLE)
	Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,3,V.ODBC.conx!rst.FieldValTrim!END)
	F.Intrinsic.Math.Add(V.Local.iCol,1,V.Local.iCol)
	F.ODBC.conx!rst.MoveNext
	F.Intrinsic.Control.Loop
F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.EOF,=,True)
	F.Intrinsic.Control.For(V.Local.R,V.Local.iCol,9,1)
		Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,1,"")
		Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,2,"")
		Gui.SS_PullTest.gsflexgridPT.TextMatrix(V.Local.iCol,3,"")
		F.Intrinsic.Math.Add(V.Local.iCol,1,V.Local.iCol)
	F.Intrinsic.Control.Next(V.local.R)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.If(V.Local.bEx,=,False)
	F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{4}' AND SERIAL  = '{2}' AND LOG_SHEET = '{3}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.local.sLogSheet,V.global.sSEQ,V.Local.sSQL)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{5}' AND SERIAL  = '{2}' AND LOG_SHEET = '{3}' And Screen_ID = '{4}' ",V.Global.sWO,V.Global.sSuff,V.args.Serial,V.local.sLogSheet,V.Args.Screen,V.Global.sSeq,V.Local.sSQL)
	
F.Intrinsic.Control.EndIf
F.ODBC.Connection!conx.OpenRecordsetRO("rst2",V.local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst2.EOF,<>,True)
	F.Intrinsic.Control.If(V.ODBC.conx!rst2.FieldValTrim!ACCEPTED,=,"Accept")
		Gui.SS_PullTest.ddlAR.ListIndex(0)
	F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst2.FieldValTrim!ACCEPTED,=,"Reject")
		Gui.SS_PullTest.ddlAR.ListIndex(1)
	F.Intrinsic.Control.Else
		Gui.SS_PullTest.ddlAR.ListIndex(2)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst2.Close

Gui.SS_PullTest.gsflexgridPT.FixedRows(1)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_SlotCheck_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_SlotCheck.End

Program.Sub.gsflexgridpt_cellexit.Start
F.Intrinsic.Control.SetErrorHandler("gsflexgridpt_cellexit_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
F.Intrinsic.Control.If(V.Screen.SS_PullTest!gsflexgridPT.Col,=,11)
	F.Intrinsic.Control.SelectCase(V.Screen.SS_PullTest!gsflexgridPT.Row)
		F.Intrinsic.Control.Case(1)
			Gui.SS_PullTest.gsflexgridPT.SetActiveCell(0,2)
		F.Intrinsic.Control.Case(2)
			Gui.SS_PullTest.gsflexgridPT.SetActiveCell(0,3)
		F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsflexgridpt_cellexit_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.gsflexgridpt_cellexit.End

Program.Sub.stress_weld_unload.Start
F.Intrinsic.Control.SetErrorHandler("stress_weld_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.Stress_Weld..Visible(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("stress_weld_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.stress_weld_unload.End

Program.Sub.cmd1_weldsave.Start
F.Intrinsic.Control.SetErrorHandler("cmd1_weldsave_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'This Save command will read the lot numbers scanned into the "Comp ID" and "Weld Wire" fields within the item master.
'GAB will then pull the heat, serial along with the lot number. This will happend for each Component ID and Weld Wire scanned.

V.Local.sScreen.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sCompSerial.Declare(String)
V.Local.sCompHeat.Declare(String)
V.Local.sWWSerial.Declare(String)
V.Local.sWWHeat.Declare(String)
V.Local.sReadRow.Declare(String)
V.Local.sFullRow.Declare(String)
V.Local.sCompLot.Declare(String)
V.Local.iRecN.Declare(Long)
V.Local.iRec.Declare(Long)
V.Local.iC.Declare(Long)
V.Local.iRow.Declare(Long)

'
'
F.Intrinsic.Control.BlockEvents

Gui.Stress_Weld.cmdWeldSave.Enabled(False)

Gui.Stress_Weld.gsflexgrid1.Commit
V.Local.sScreen.Set(V.Screen.Stress_Weld!ddlWeld_ScreenID.Text)
F.Intrinsic.Control.If(V.Global.bRod,=,False)
	F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
		F.Intrinsic.UI.Msgbox("Please select a Screen ID before saving.")
		F.Intrinsic.Control.UnBlockEvents
		Gui.Stress_Weld.ddlWeld_ScreenID.SetFocus
		Gui.Stress_Weld.cmdWeldSave.Enabled(True)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
	'If any records exist, delete them from pervasive so that GAB can write the new records.
	'N will represent blank records.
	F.Intrinsic.String.Build("SELECT * FROM GCG_WELD_SCREEN WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Global.sSeq,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_WELD_SCREEN WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.global.sSeq,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
	'Look for Component ID( Lot number) and Weld Wire (lot number) within Item_master and records the serial/heat for each. Also add Lot numbers when saving record sets.

	V.Local.iRec.Set(1)
	V.Local.iRow.Set(1)


	F.Intrinsic.Control.For(V.Local.iC,V.Local.iRow,12,1)
		Gui.Stress_Weld.gsflexgrid1.ReadRow(V.Local.iRow,V.Local.sFullRow)
		F.Intrinsic.String.Concat(V.Local.iRec,"*!*",V.Local.sFullRow,V.Local.sFullRow)
		F.Intrinsic.String.Split(V.Local.sFullRow,"*!*",V.Local.sFullRow)
			F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sFullRow(2).Trim,V.Local.sFullRow(3).Trim,V.Local.sFullRow(4).Trim,V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"")
				'et our hidden column to blank they either cleared it out or something
				Gui.Stress_Weld.gsflexgrid1.TextMatrix(4,V.Local.iRow,"")
			F.Intrinsic.Control.Else
				F.Intrinsic.Control.If(V.Local.sFullRow(5).Trim,=,"")
					Gui.Stress_Weld.gsflexgrid1.TextMatrix(4,V.Local.iRow,V.Local.sScreen)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		'check and see what our row value is for the screen, if same as our screen in drop down continue to say, if not igrnoe.
		F.Intrinsic.Control.If(V.Local.sFullRow(5).Trim,=,"","OR",V.Local.sScreen.Trim,=,V.Local.sFullRow(5).Trim)
			V.Local.sWWHeat.Set("None")
			V.Local.sWWSerial.Set("None")
			V.Local.sCompHeat.Set("None")
			V.Local.sCompSerial.Set("None")

			F.Intrinsic.Control.If(V.Local.sFullRow(2),=,"")
				V.Local.sFullRow(2).Set("None")
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Concat("SELECT * FROM ITEM_MASTER WHERE LOT = '",V.Local.sFullRow(2),"'",V.Local.sSQL)
				F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
					F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!SERIAL_NUMBER,=,"")
						V.Local.sCompSerial.Set("None")
					F.Intrinsic.Control.Else
						V.Local.sCompSerial.Set(V.ODBC.conx!rst.FieldValTrim!SERIAL_NUMBER)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!HEAT,=,"")
						V.Local.sCompHeat.Set("None")
					F.Intrinsic.Control.Else
						V.Local.sCompHeat.Set(V.ODBC.conx!rst.FieldValTrim!HEAT)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("SELECT * FROM ITEM_HISTORY WHERE LOT = '{0}'",V.Local.sFullRow(2),V.Local.sSQL)
					F.ODBC.Connection!conx.OpenRecordsetRO("rstHist",V.Local.sSQL)
					
					F.Intrinsic.Control.If(V.ODBC.conx!rstHist.EOF,<>,True)
						F.Intrinsic.Control.If(V.ODBC.conx!rstHist.FieldValTrim!SERIAL_NUMBER,=,"")
							V.Local.sCompSerial.Set("None")
						F.Intrinsic.Control.Else
							V.Local.sCompSerial.Set(V.ODBC.conx!rstHist.FieldValTrim!SERIAL_NUMBER)
						F.Intrinsic.Control.EndIf
					
						F.Intrinsic.Control.If(V.ODBC.conx!rstHist.FieldValTrim!HEAT,=,"")
							V.Local.sCompHeat.Set("None")
						F.Intrinsic.Control.Else
							V.Local.sCompHeat.Set(V.ODBC.conx!rstHist.FieldValTrim!HEAT)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
					
					F.ODBC.conx!rstHist.Close
				F.Intrinsic.Control.EndIf
				F.ODBC.conx!rst.Close
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.If(V.Local.sFullRow(3),=,"")
				V.Local.sFullRow(3).Set("None")
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Concat("SELECT * FROM ITEM_MASTER WHERE LOT = '",V.Local.sFullRow(3),"'",V.Local.sSQL)
				F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
					F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!SERIAL_NUMBER,=,"")
						V.Local.sWWSerial.Set("None")
					F.Intrinsic.Control.Else
						V.Local.sWWSerial.Set(V.ODBC.conx!rst.FieldValTrim!SERIAL_NUMBER)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!HEAT,=,"")
						V.Local.sWWHeat.Set("None")
					F.Intrinsic.Control.Else
						V.Local.sWWHeat.Set(V.ODBC.conx!rst.FieldValTrim!HEAT)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("SELECT * FROM ITEM_HISTORY WHERE LOT = '{0}'",V.Local.sFullRow(3),V.Local.sSQL)
					F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstHist",V.Local.sSQL)
					
					F.Intrinsic.Control.If(V.ODBC.conx!rstHist.EOF,<>,True)
						F.Intrinsic.Control.If(V.ODBC.conx!rstHist.FieldValTrim!SERIAL_NUMBER,=,"")
							V.Local.sWWSerial.Set("None")
						F.Intrinsic.Control.Else
							V.Local.sWWSerial.Set(V.ODBC.conx!rstHist.FieldValTrim!SERIAL_NUMBER)
						F.Intrinsic.Control.EndIf
						
						F.Intrinsic.Control.If(V.ODBC.conx!rstHist.FieldValTrim!HEAT,=,"")
							V.Local.sWWHeat.Set("None")
						F.Intrinsic.Control.Else
							V.Local.sWWHeat.Set(V.ODBC.conx!RstHist.FieldValTrim!HEAT)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
					
					F.ODBC.conx!rstHist.Close
				F.Intrinsic.Control.EndIf
				F.ODBC.conx!rst.Close
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.If(V.Local.sFullRow(3),=,"")
				V.Local.sFullRow(3).Set("None")
			F.Intrinsic.Control.EndIf

			F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_WELD_SCREEN")
			F.ODBC.conx!rst.AddNew
			F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
			F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
			F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
			F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
			F.ODBC.conx!rst.Set!COMP_LOT(V.Local.sFullRow(2))
			F.ODBC.conx!rst.Set!COMP_HEAT(V.Local.sCompHeat)
			F.ODBC.conx!rst.Set!COMP_SERIAL(V.Local.sCompSerial)
			F.ODBC.conx!rst.Set!WW_LOT(V.Local.sFullRow(3))
			F.ODBC.conx!rst.Set!WW_HEAT(V.Local.sWWHeat)
			F.ODBC.conx!rst.Set!WW_SERIAL(V.Local.sWWSerial)
			F.ODBC.conx!rst.Set!WELD_WIRE(V.Local.sFullRow(4))
			'we are going to reference the screen id frmo here.
			F.ODBC.conx!rst.Set!SCREEN_ID(V.Local.sScreen)
			F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
			F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
			F.ODBC.conx!rst.Set!Flag_Sand_Check("0")
			F.ODBC.conx!rst.Set!REC_ID(V.Local.sFullRow(0))
			F.ODBC.conx!rst.Update
			F.ODBC.conx!rst.Close
'			Gui.Stress_Weld.gsflexgrid1.TextMatrix(4,V.Local.iRow,V.Local.sScreen)

			F.Intrinsic.Math.Add(V.Local.iRec,1,V.Local.iRec)
			F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)

		F.Intrinsic.Control.Else
			'we aren't going to save this record but we need to continue over with the incremention of the records...
			F.Intrinsic.Math.Add(V.Local.iRec,1,V.Local.iRec)
			F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Next(V.Local.iC)

	'Deletes any previous Accept/Reject records before saving new records.
	F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET='WELD'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Global.sSeq,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' ANd SEQ = '{4}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET='WELD'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Global.sSeq,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close

	F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_ACPT_RJCT")
	F.ODBC.conx!rst.AddNew
	F.Intrinsic.Control.If(V.Screen.Stress_Weld!ddlAR.ListIndex,=,0)
		F.ODBC.conx!rst.Set!ACCEPTED("Accept")
	F.Intrinsic.Control.ElseIf(V.Screen.Stress_Weld!ddlAR.ListIndex,=,1)
		F.ODBC.conx!rst.Set!ACCEPTED("Reject")
	F.Intrinsic.Control.Else
		F.ODBC.conx!rst.Set!ACCEPTED("None")
	F.Intrinsic.Control.Endif
	F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
	F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuff)
	F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
	F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
	F.ODBC.conx!rst.Set!SCREEN_ID(V.Local.sScreen)
	F.ODBC.conx!rst.Set!LOG_SHEET("WELD")
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Set!TIME(V.Ambient.Time)
	F.ODBC.conx!rst.Update
	F.ODBC.conx!rst.Close

F.Intrinsic.Control.If(V.Global.bRod,=,True)
	Gui.Stress_Weld.ddlWeld_ScreenID.Text("")
	Gui.Stress_Weld..Visible(False)
F.Intrinsic.Control.EndIf
	
	'F.Intrinsic.Control.EndIf
'F.Intrinsic.Control.EndIf

Gui.Stress_Weld.cmdWeldSave.Enabled(True)

F.Intrinsic.Control.unblockevents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd1_weldsave_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmd1_weldsave.End

Program.Sub.cmdstressform_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdstressform_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sRet.Declare(String)
'This screen will load any exisiting records for the associated job/suffix/serial /and screen ID

F.Intrinsic.Control.If(V.Screen.Stress_Weld!ddlWeld_ScreenID.Text,=,"")
	F.Intrinsic.UI.Msgbox("Continue withouth selecting Screen ID?","Continue?",4,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,=,7)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.ElseIf(V.Local.sRet,=,6)

		V.Global.sForm.Set("Stress")
		F.Intrinsic.Control.CallSub(Buildstyle)
		Gui.StressReliefV2.txtJob.Text(V.Global.sWO)
		Gui.StressReliefV2.txtSuff.Text(V.Global.sSuff)
		Gui.StressReliefV2.txtSeq.Text(V.Global.sSeq)
		Gui.StressReliefV2.txtSerial.Text(V.Global.sSerial)
		F.Intrinsic.Control.CallSub(Load_stressvals)
		Gui.StressReliefV2.txtJob.Enabled(False)
		Gui.StressReliefV2.txtSuff.Enabled(False)
		Gui.StressReliefV2.txtSerial.Enabled(False)
		Gui.StressReliefV2..Show
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
		V.Global.sForm.Set("Stress")
		F.Intrinsic.Control.CallSub(Buildstyle)
		Gui.StressReliefV2.txtJob.Text(V.Global.sWO)
		Gui.StressReliefV2.txtSuff.Text(V.Global.sSuff)
		Gui.StressReliefV2.txtSeq.Text(V.Global.sSeq)
		Gui.StressReliefV2.txtSerial.Text(V.Global.sSerial)
		F.Intrinsic.Control.CallSub(Load_stressvals)
		Gui.StressReliefV2.txtJob.Enabled(False)
		Gui.StressReliefV2.txtSuff.Enabled(False)
		Gui.StressReliefV2.txtSerial.Enabled(False)
		Gui.StressReliefV2..Show
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdstressform_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdstressform_click.End

Program.Sub.ddlweld_screenid_click.Start
F.Intrinsic.Control.SetErrorHandler("ddlweld_screenid_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


V.Local.sSQL.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.sT.Declare(String)
V.Local.sCompLot.Declare(String)
V.Local.sWeldLot.Declare(String)
V.Local.sWeldWire.Declare(String)
V.Local.iRow.Declare(Long)
V.Local.iC.Declare(Long)
F.Intrinsic.Control.BlockEvents
Gui.Stress_Weld.gsflexgrid1.Visible(False)
V.Local.sScreen.Set(V.Screen.Stress_Weld!ddlWeld_ScreenID.Text)
'F.Intrinsic.Control.If(V.Local.sScreen,<>,"")
'Loads records based of fof screen ID
'
'

'4/22/15 don't need to reload anything anymore, trt change. since we are loading all screens associated with a screen we are now working on doing this to only enabled the certain rows or blank rows that have our screen.
	F.Intrinsic.Control.For(V.Local.iC,1,12,1)
		'get text matrix of our 5th column. 			
		Gui.Stress_Weld.gsflexgrid1.GetTextMatrix(4,V.Local.iC,V.Local.sT)
		F.Intrinsic.Control.If(V.Local.sT.Trim,<>,"")
			'check to see if it matches our screen drop down, if it doesn't, or if it's not blank
			Gui.Stress_Weld.gsflexgrid1.RemoveStyle(V.Local.iC)
			F.Intrinsic.Control.If(V.Local.sScreen.Trim,<>,V.Local.sT)
				'don't need to worry about blank rows cause they should already have things enabled for them.
				'need to lock the columns
				'so apply style 7 which is done in the buildstyle.
				Gui.Stress_Weld.gsflexgrid1.ApplyStyle(V.Local.iC,7)
			F.Intrinsic.Control.Else
				'reset it back to another buildstyle. that has this enabled caused they may be toggling back and forth, duh.
				'so apply style 8 which is done in the buildstyle.
				Gui.Stress_Weld.gsflexgrid1.ApplyStyle(V.Local.iC,8)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
				'don't need to worry about blank rows cause they should already have things enabled for them.
'				'need to lock the columns
'				'so apply style 7 which is done in the buildstyle.
			Gui.Stress_Weld.gsflexgrid1.RemoveStyle(V.Local.iC)
				Gui.Stress_Weld.gsflexgrid1.ApplyStyle(V.Local.iC,8)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iC)

'	F.Intrinsic.String.Build("SELECT * FROM GCG_WELD_SCREEN WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' ORDER BY REC_ID ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Local.sSQL)
'	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
'	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
'		V.Local.iRow.Set(1)
'		F.Intrinsic.Control.For(V.Local.iC,V.Local.iRow,12,1)
'
'			F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!COMP_LOT,=,"None")
'				Gui.Stress_Weld.gsflexgrid1.TextMatrix(1,V.Local.iRow,"")
'			F.Intrinsic.Control.Else
'				Gui.Stress_Weld.gsflexgrid1.TextMatrix(1,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!COMP_LOT)
'			F.Intrinsic.Control.EndIf
'
'			F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!WW_LOT,=,"None")
'				Gui.Stress_Weld.gsflexgrid1.TextMatrix(2,V.Local.iRow,"")
'			F.Intrinsic.Control.Else
'				Gui.Stress_Weld.gsflexgrid1.TextMatrix(2,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!WW_LOT)
'			F.Intrinsic.Control.EndIf
'
'			F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!WELD_WIRE,=,"None")
'				Gui.Stress_Weld.gsflexgrid1.TextMatrix(3,V.Local.iRow,"")
'			F.Intrinsic.Control.Else
'				Gui.Stress_Weld.gsflexgrid1.TextMatrix(3,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!WELD_WIRE)
'			F.Intrinsic.Control.Endif
'		
'			F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
'			F.ODBC.conx!rst.MoveNext
'		F.Intrinsic.Control.Next(V.Local.iC)
'
'	F.Intrinsic.Control.Else
''Clear out rows from previous loaded screen ID records
'		V.Local.iRow.Set(1)
'		F.Intrinsic.Control.For(V.Local.iC,V.Local.iRow,12,1)
'
'			Gui.Stress_Weld.gsflexgrid1.TextMatrix(1,V.Local.iRow,"")
'			Gui.Stress_Weld.gsflexgrid1.TextMatrix(2,V.Local.iRow,"")
'			Gui.Stress_Weld.gsflexgrid1.TextMatrix(3,V.Local.iRow,"")
'		
'			F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
'
'		F.Intrinsic.Control.Next(V.Local.iC)
'
'	F.Intrinsic.Control.EndIf
'	F.ODBC.conx!rst.Close
'F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' AND SCREEN_ID = '{3}'  AND LOG_SHEET = 'WELD' Order By Date_last_Change Desc, Time Desc",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Accept")
		Gui.Stress_Weld.ddlAR.ListIndex(0)
	F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Reject")
		Gui.Stress_Weld.ddlAR.ListIndex(1)
	F.Intrinsic.Control.Else
		Gui.Stress_Weld.ddlAR.ListIndex(2)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close
Gui.Stress_Weld.gsflexgrid1.Visible(True)
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlweld_screenid_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.ddlweld_screenid_click.End

Program.Sub.stressreliefv2_unload.Start
F.Intrinsic.Control.SetErrorHandler("stressreliefv2_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.StressReliefV2..Visible(False)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("stressreliefv2_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.stressreliefv2_unload.End

Program.Sub.cmdstess2save_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdstess2save_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sReadRow.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iRow.Declare(Long)

F.Intrinsic.Control.BlockEvents

Gui.StressReliefV2.cmdStess2Save.Enabled(False)

F.Intrinsic.String.Build("SELECT * FROM GCG_STRESS_REL_VALS WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{3}' AND SERIAL = '{2}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSEQ,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM GCG_STRESS_REL_VALS WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{3}' AND SERIAL = '{2}'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSEQ,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

'trt add, have to call commit cause they may may not exit ouf of the cell.
Gui.StressReliefV2.gsflexgrid1.Commit

V.Local.iRow.Set(1)
F.Intrinsic.Control.For(V.Local.iC,V.Local.iRow,12,1)

	Gui.StressReliefV2.gsflexgrid1.ReadRow(V.Local.iRow,V.Local.sReadRow)
	F.Intrinsic.String.Split(V.Local.sReadRow,"*!*",V.Local.sReadRow)
	F.Intrinsic.Control.If(V.Local.sReadRow(1),=,"")
		V.Local.sReadRow(1).Set("N")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.sReadRow(2),=,"")
		V.Local.sReadRow(2).Set("N")
	F.Intrinsic.Control.EndIf
		
	F.ODBC.Connection!conx.OpenRecordsetRW("rst","SELECT * FROM GCG_STRESS_REL_VALS")
	F.ODBC.conx!rst.AddNew
	F.ODBC.conx!rst.Set!JOB(V.Global.sWO)
	F.ODBC.conx!rst.Set!Suffix(V.Global.sSuff)
	F.ODBC.conx!rst.Set!SEQ(V.Global.sSeq)
	F.ODBC.conx!rst.Set!Serial(V.Global.sSerial)
	F.ODBC.conx!rst.Set!Point_ID(V.Local.sReadRow(0))
	F.ODBC.conx!rst.Set!TCF(V.Local.sReadRow(1))
	F.ODBC.conx!rst.Set!TC_CON(V.Local.sReadRow(2))
	F.ODBC.conx!rst.Set!TC_Primary(V.Local.sReadRow(2))
	F.ODBC.conx!rst.Set!TC_Secondary(V.Local.sReadRow(3))
	F.ODBC.conx!rst.Set!Screen_ID(V.Screen.Stress_Weld!ddlWeld_ScreenID.Text)
	F.ODBC.conx!rst.Set!Empl_Last_Change(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!Date_Last_Change(V.Ambient.Date)
	F.ODBC.conx!rst.Update
	F.ODBC.conx!rst.Close
	F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
F.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.UnBlockEvents
Gui.StressReliefV2..Visible(False)

Gui.StressReliefV2.cmdStess2Save.Enabled(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdstess2save_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdstess2save_click.End

Program.Sub.Load_StressVals.Start
F.Intrinsic.Control.SetErrorHandler("Load_StressVals_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iRow.Declare(Long)

V.Local.sScreen.Set(V.Screen.Stress_Weld!ddlWeld_ScreenID.Text)
V.Local.iRow.Set(1)

F.Intrinsic.String.Build("SELECT * FROM GCG_STRESS_REL_VALS WHERE JOB = '{0}' and Suffix = '{1}' And Seq = '{3}' AND Serial = '{2}' Order by Case  WHEN Point_ID = 'P1' THEN 1 WHEN Point_ID = 'P2' THEN 2 WHEN Point_ID = 'P3' THEN 3 WHEN Point_ID = 'P4' Then 4 When Point_ID = 'P5' THEN 5 WHEN POINT_ID = 'P6' THEN 6 WHEN Point_ID = 'P7' THEN 7 WHEN Point_ID = 'P8' THEN 8 WHEN Point_ID = 'P9' THEN 9 WHEN POINT_ID = 'P10' THEN 10 WHEN Point_ID = 'P11' THEN 11 WHEN Point_ID = 'P12' THEN 12 END ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)

	F.Intrinsic.Control.For(V.Local.iC,V.Local.iRow,12,1)

		F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!TCF,<>,"N")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(1,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!TCF)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!TC_Primary,<>,"N")
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(2,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!TC_Primary)
			Gui.StressReliefV2.gsflexgrid1.TextMatrix(3,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!TC_Secondary)
			Gui.StressReliefV2.gsflexgrid1.ApplyStyle(V.Local.iRow,2)
		F.Intrinsic.Control.EndIf

		F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
		F.ODBC.conx!rst.MoveNext
	F.Intrinsic.Control.Next(V.Local.iC)


F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.EOF,=,True)

	F.Intrinsic.Control.For(V.Local.iC,V.Local.iRow,12,1)
		Gui.StressReliefV2.gsflexgrid1.TextMatrix(1,V.Local.iRow,"")
		Gui.StressReliefV2.gsflexgrid1.TextMatrix(2,V.Local.iRow,"")
		Gui.StressReliefV2.gsflexgrid1.TextMatrix(3,V.Local.iRow,"")
		Gui.StressReliefV2.gsflexgrid1.ApplyStyle(V.Local.iRow,2)
		F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
	F.Intrinsic.Control.Next(V.Local.iC)

F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_StressVals_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf

Program.Sub.Load_StressVals.End

Program.Sub.Load_Weld.Start
F.Intrinsic.Control.SetErrorHandler("Load_Weld_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.sCompLot.Declare(String)
V.Local.sWeldLot.Declare(String)
V.Local.sWeldWire.Declare(String)
V.Local.iRow.Declare(Long)
V.Local.iC.Declare(Long)
V.Local.bR.Declare(Boolean)
V.Local.bScreenBold.Declare(Boolean)

'ModByTRT4/20/15.We are now going to load all screen information onto the Grid.However this time we are only going to enable/disable the cells based on the screen id chosen in dropdown.The only editablefields are those that are blank,or belong to that screen, all others will be locked/blocked
Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,0,"Type","Locked",True)
Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,0,"Format","alignment",2)
Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,0,"Fontstyle","Bold","True")

F.Intrinsic.String.Build("SELECT * FROM GCG_WELD_SCREEN WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' And  (Comp_LOT <> 'None' Or WW_LOT <> 'None' Or Weld_Wire <> '' )ORDER BY REC_ID ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
'
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Control.blockevents
	Gui.Stress_Weld.ddlWeld_ScreenID.Text(V.ODBC.conx!rst.FieldValTrim!SCREEN_ID)
	V.Local.sScreen.Set(V.Screen.Stress_Weld!ddlWeld_ScreenID.Text)

	F.Intrinsic.Control.UnBlockEvents
	V.Local.iRow.Set(1)
	'go against the rec_id field and row number field, how they are being saved rec_id corresponds to row number
	F.Intrinsic.Control.For(V.Local.iC,V.Local.iRow,12,1)
		'have to check this again cause we may not have 12 reocrds.
		F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)

			F.Intrinsic.Control.If(V.Local.iC,=,V.ODBC.conx!rst.FieldVal!Rec_ID)
				'we know we are on a corresponding row with proper information for a screen.
				F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!COMP_LOT,=,"None")
					Gui.Stress_Weld.gsflexgrid1.TextMatrix(1,V.Local.iRow,"")

				F.Intrinsic.Control.Else
					Gui.Stress_Weld.gsflexgrid1.TextMatrix(1,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!COMP_LOT)

				F.Intrinsic.Control.EndIf
	 			'build our  buildstyle based on our flag value for column 1

				F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!WW_LOT,=,"None")
					Gui.Stress_Weld.gsflexgrid1.TextMatrix(2,V.Local.iRow,"")

				F.Intrinsic.Control.Else
					Gui.Stress_Weld.gsflexgrid1.TextMatrix(2,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!WW_LOT)

				F.Intrinsic.Control.EndIf

				F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!WELD_WIRE,=,"None")
					Gui.Stress_Weld.gsflexgrid1.TextMatrix(3,V.Local.iRow,"")

				F.Intrinsic.Control.Else
					Gui.Stress_Weld.gsflexgrid1.TextMatrix(3,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!WELD_WIRE)

				F.Intrinsic.Control.Endif
				'load screen value, if our screen value is the same as our table record then we know we can edit this.
				'if not we can't edit that cell cause it's not the same selected screen.
				Gui.Stress_Weld.gsflexgrid1.TextMatrix(4,V.Local.iRow,V.ODBC.conx!rst.FieldValTrim!Screen_ID)
				F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,V.ODBC.conx!rst.FieldValTrim!ScreeN_ID)
					V.Local.bR.Set(False)
					V.Local.bScreenBold.Set(True)
					'screen bolid opposit since its bold not locking. if we are not locked we are oging to be bolded
				F.Intrinsic.Control.Else
					'vica versa from if above, if we are locked (br=True) we are going to be not bolded bScreenBold(False)
					V.Local.bR.Set(True)
					V.Local.bScreenBold.Set(False)
				F.Intrinsic.Control.EndIf
				Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,1,"Type","Locked",V.Local.bR)
				Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,2,"Type","Locked",V.Local.bR)
				Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,3,"Type","Locked",V.Local.bR)
				Gui.stress_Weld.gsflexgrid1.BuildStyle(6,1,"Fontstyle","Bold",V.Local.bScreenBold)
				Gui.stress_Weld.gsflexgrid1.BuildStyle(6,2,"Fontstyle","Bold",V.Local.bScreenBold)
				Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,3,"Fontstyle","Bold",V.Local.bScreenbold)
			
				Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,0,"Format","Alignment",2)
				Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,1,"Format","Alignment",6)
				Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,2,"Format","Alignment",6)
				Gui.Stress_Weld.gsflexgrid1.BuildStyle(6,3,"Format","Alignment",6)

				'apply our newly formed buildstyle.
				'remove style just in case
				Gui.Stress_Weld.gsflexgrid1.RemoveStyle(V.Local.iRow)

				Gui.Stress_Weld.gsflexgrid1.ApplyStyle(V.Local.iRow,6)
				F.ODBC.conx!rst.MoveNext
'				F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
			F.Intrinsic.Control.Else
				'JUST APPLY DEFAUTL STYLE 3 TO ROW
				Gui.Stress_Weld.gsflexgrid1.RemoveStyle(V.Local.iRow)

				Gui.Stress_Weld.gsflexgrid1.ApplyStyle(V.Local.iRow,3)
				
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			'JUSTAPPLYDEFAUTLSTYLE3TOROW
			Gui.Stress_Weld.gsflexgrid1.RemoveStyle(V.Local.iRow)
			Gui.Stress_Weld.gsflexgrid1.ApplyStyle(V.Local.iRow,3)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
	F.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.Else
'Clear out rows from previous loaded screen ID records
	V.Local.iRow.Set(1)
	F.Intrinsic.Control.For(V.Local.iC,V.Local.iRow,12,1)
	
		Gui.Stress_Weld.gsflexgrid1.TextMatrix(1,V.Local.iRow,"")
		Gui.Stress_Weld.gsflexgrid1.TextMatrix(2,V.Local.iRow,"")
		Gui.Stress_Weld.gsflexgrid1.TextMatrix(3,V.Local.iRow,"")
		'JUST APPLY DEFAUTL STYLE 3 TO ROW
		Gui.Stress_Weld.gsflexgrid1.RemoveStyle(V.Local.iRow)

		Gui.Stress_Weld.gsflexgrid1.ApplyStyle(V.Local.iRow,3)
		F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)

	F.Intrinsic.Control.Next(V.Local.iC)

F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{4}' AND SERIAL  = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = 'WELD'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Accept")
		Gui.Stress_Weld.ddlAR.ListIndex(0)
	F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Reject")
		Gui.Stress_Weld.ddlAR.ListIndex(1)
	F.Intrinsic.Control.Else
		Gui.Stress_Weld.ddlAR.ListIndex(2)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.CallSub(Load_partdesc)
F.Intrinsic.Control.CallSub(Load_screens)
'F.Intrinsic.Control.CallSub(Load_sections)
'Gui.Stress_Weld.gsfgSections.SetProperty("Enter",2)

F.Intrinsic.Control.If(V.Global.bRod,=,True)
	F.Intrinsic.Control.CallSub(Ddlweld_screenid_click)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_Weld_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_Weld.End

Program.Sub.Load_Heat_1.Start
F.Intrinsic.Control.SetErrorHandler("Load_Heat_1_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSerial.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.i.Declare(Long)
V.Local.iBatch.Declare(Long)

Gui.SS_Heat.cmdDeleteSN.Enabled(False)

F.ODBC.Connection!conx.OpenRecordsetRO("rst","select * from "HEAT_BATCH" ORDER BY BATCH DESC")
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,True)
	V.Local.iBatch.Set(1)
F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Math.Add(V.ODBC.conx!rst.FieldValTrim!BATCH,1,V.Local.iBatch)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

Gui.SS_Heat.txtBatchNum.Text(V.Local.iBatch)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_Heat_1_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_Heat_1.End

Program.Sub.cmdbtchbrws_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdbtchbrws_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL.Declare(String)
V.Local.sTitles.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iWidths.Declare(Long)
V.Local.iKey.Declare(Long)

Gui.SS_Heat.txtSerialNum.Text("")
Gui.SS_Heat.cmdDeleteSN.Enabled(False)

'This sub is used as the browser to select unique batch IDs
V.Local.sSQL.Set("SELECT distinct BATCH, EMPL_LAST_CHANGE, DATE_LAST_CHANGE FROM HEAT_BATCH ORDER BY BATCH ASC")
F.Intrinsic.String.Split("Batch Number*!*Employee Last Changed*!*Date Last Changed","*!*",V.Local.sTitles)
F.Intrinsic.String.Split("2000*!*2000*!*2000","*!*",V.Local.iWidths)
F.Intrinsic.UI.Browser("Select a Batch ID","conx",V.Local.sSQL,V.Local.sTitles,V.Local.iWidths,1000,6000,V.Local.sRet)
F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)

F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	Gui.SS_Heat.txtBatchNum.Text(V.Local.sRet(0))
	Gui.SS_Heat.lvw1.ClearItems
	F.Intrinsic.String.Concat("SELECT * FROM HEAT_BATCH WHERE BATCH = '",V.local.sRet(0),"' ORDER BY REC_ID ASC",V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)

		F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)
			Gui.SS_Heat.lvw1.AddListItem(V.Global.iKey,V.ODBC.conx!rst.FieldValTrim!SERIAL_NUMBER)
			Gui.SS_Heat.lvw1.SetListItemSubItemText(V.Global.iKey,1,V.local.sRet(0))
		F.Intrinsic.Math.Add(V.Global.iKey,1,V.Global.iKey)
		F.ODBC.conx!rst.MoveNext
		F.Intrinsic.Control.Loop
		
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.EndIf
V.Global.sOldSN.Set("")
Gui.SS_Heat.cmdAddSerial.Enabled(True)
Gui.SS_Heat.cmdUpdateSN.Enabled(False)

F.Intrinsic.String.Concat("SELECT * FROM GCG_ACPT_RJCT WHERE SERIAL = '",V.Local.sRet(0),"' AND LOG_SHEET = 'HEAT'",V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Accept")
		Gui.SS_Heat.ddlAR.ListIndex(0)
	F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Reject")
		Gui.SS_Heat.ddlAR.ListIndex(1)
	F.Intrinsic.Control.Else
		Gui.SS_Heat.ddlAR.ListIndex(2)
	F.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdbtchbrws_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdbtchbrws_click.End

Program.Sub.cmddeletesn_click.Start
F.Intrinsic.Control.SetErrorHandler("cmddeletesn_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sFlag.Declare(String)

V.Local.iKey.Declare(Long)
V.Local.iOrd.Declare(Long)

F.Intrinsic.String.Build("SELECT * FROM HEAT_BATCH WHERE BATCH  = '{0}' AND SERIAL_NUMBER = '{1}'",V.Screen.SS_Heat!txtBatchNum.Text,V.Screen.SS_Heat!txtSerialNum.Text,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.String.Build("DELETE FROM HEAT_BATCH WHERE BATCH  = '{0}' AND SERIAL_NUMBER = '{1}'",V.Screen.SS_Heat!txtBatchNum.Text,V.Screen.SS_Heat!txtSerialNum.Text,V.Local.sSQL)
	F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	Gui.SS_Heat.txtSerialNum.Text("")
	V.Local.sFlag.Set("Y")
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

'F.Intrinsic.Control.If(V.Local.sFlag,=,"Y")
'	Gui.SS_Heat.lvw1.ClearItems
'	F.Intrinsic.String.Concat("SELECT * FROM HEAT_BATCH WHERE BATCH = '",V.Screen.SS_Heat!txtBatchNum.Text,"' ORDER BY REC_ID ASC",V.Local.sSQL)
'	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
'	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
'
'		F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)
'			Gui.SS_Heat.lvw1.AddListItem(V.Global.iKey,V.ODBC.conx!rst.FieldValTrim!SERIAL_NUMBER)
'			Gui.SS_Heat.lvw1.SetListItemSubItemText(V.Global.iKey,1,V.Screen.SS_Heat!txtBatchNum.Text)
'		F.Intrinsic.Math.Add(V.Global.iKey,1,V.Global.iKey)
'		F.ODBC.conx!rst.MoveNext
'		F.Intrinsic.Control.Loop
'
'	F.Intrinsic.Control.EndIf
'	F.ODBC.conx!rst.Close
'F.Intrinsic.Control.EndIf

V.Local.iKey.Set(V.Screen.SS_Heat!lvw1.SelectedItemKey)
Gui.SS_Heat.lvw1.RemoveItem(V.Local.iKey)

V.Global.sOldSN.Set("")
Gui.SS_Heat.cmdAddSerial.Enabled(True)
Gui.SS_Heat.cmdUpdateSN.Enabled(False)
Gui.SS_Heat.cmdDeleteSN.Enabled(False)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmddeletesn_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmddeletesn_click.End

Program.Sub.Load_PullVals.Start
F.Intrinsic.Control.SetErrorHandler("Load_PullVals_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sAccept.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.bEx.Declare(Boolean)

F.Intrinsic.Variable.ArgExists("Screen",V.local.beX)
F.Intrinsic.Control.If(V.Local.bEx,=,True)
	V.Local.sScreen.Set(V.Args.Screen)
F.Intrinsic.Control.Else
	V.Local.sScreen.Set(V.Screen.SS_SlotCheck!ddlScreenID.Text)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Serial",V.Local.bEx)
F.Intrinsic.Control.If(V.Local.bEx,=,True)
	F.Intrinsic.String.Build("SELECT * FROM GCG_PULL_TEST WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' ORDER BY TEST_NO ASC",V.Global.sWO,V.Global.sSuff,V.args.Serial,V.Local.sScreen,V.Local.sSQL)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT * FROM GCG_PULL_TEST WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' ORDER BY TEST_NO ASC",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	Gui.SS_SlotCheck.txtFT1.Text(V.ODBC.conx!rst.FieldValTrim!FRONT)
	Gui.SS_SlotCheck.txtBT1.Text(V.ODBC.conx!rst.FieldValTrim!BACK)
	F.ODBC.conx!rst.MoveNext
	Gui.SS_SlotCheck.txtFT2.Text(V.ODBC.conx!rst.FieldValTrim!FRONT)
	Gui.SS_SlotCheck.txtBT2.Text(V.ODBC.conx!rst.FieldValTrim!BACK)
	F.ODBC.conx!rst.MoveNext
	Gui.SS_SlotCheck.txtFT3.Text(V.ODBC.conx!rst.FieldValTrim!FRONT)
	Gui.SS_SlotCheck.txtBT3.Text(V.ODBC.conx!rst.FieldValTrim!BACK)
F.Intrinsic.Control.Else
	Gui.SS_SlotCheck.txtFT1.Text("")
	Gui.SS_SlotCheck.txtBT1.Text("")
	Gui.SS_SlotCheck.txtFT2.Text("")
	Gui.SS_SlotCheck.txtBT2.Text("")
	Gui.SS_SlotCheck.txtBT3.Text("")
	Gui.SS_SlotCheck.txtFT3.Text("")
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close
F.Intrinsic.Control.If(V.Local.bEx,=,True)
	F.Intrinsic.Control.ExitSub
'	F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = 'PULL'",V.Global.sWO,V.Global.sSuff,V.args.Serial,V.Local.sScreen,V.Local.sSQL)F.Intrinsic.Contro
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT * FROM GCG_ACPT_RJCT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL = '{2}' AND SCREEN_ID = '{3}' AND LOG_SHEET = 'PULL'",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen,V.Local.sSQL)

F.Intrinsic.Control.EndIf
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Accept")
		Gui.SS_SlotCheck.ddlAR.ListIndex(0)
	F.Intrinsic.Control.ElseIf(V.ODBC.conx!rst.FieldValTrim!ACCEPTED,=,"Reject")
		Gui.SS_SlotCheck.ddlAR.ListIndex(1)
	F.Intrinsic.Control.Else
		Gui.SS_SlotCheck.ddlAR.ListIndex(2)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_PullVals_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_PullVals.End

Program.Sub.Load_PartDesc.Start
F.Intrinsic.Control.SetErrorHandler("Load_PartDesc_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sText.Declare(String)

Gui.Stress_Weld.mltxt1.Text("")

'Queries Job/Suffix/Sequence from Job operations table to get the part number.
'F.Intrinsic.String.Build("SELECT PART FROM JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}'",V.Passed.009990,V.Passed.009991,V.Passed.009992,V.Local.sSQL)
F.Intrinsic.String.Build("Select Part From V_Job_Header Where Job = '{0}' And Suffix = '{1}'",V.Global.sWO,V.Global.sSuff,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	V.Local.sPart.Set(V.ODBC.conx!rst.FieldValTrim!PART)
F.Intrinsic.Control.Else
	F.ODBC.conx!rst.Close
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

'Queries part from GCG_Config table and retrieves description/extra desctription if any exists.
F.Intrinsic.String.Build("SELECT DESCRIPTION,EXT_DESCR FROM GCG_CONFIG WHERE PART = '{0}'",V.Local.sPart,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
'			V.Local.sText.Set(V.ODBC.conx!rst.FieldValTrim!DESCRIPTION)
		F.Intrinsic.String.Build("{0}{1}{2}",V.ODBC.conx!rst.FieldValTrim!Description,V.Ambient.NewLine,V.ODBC.conx!rst.FieldValTrim!Ext_Descr,V.Local.sText)
	F.Intrinsic.Control.Else
		V.Local.sText.Set("")
	F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

'F.Intrinsic.String.Build("SELECT EXT_DESCR FROM GCG_CONFIG WHERE PART = '{0}'",V.Local.sPart,V.Local.sSQL)
F.Intrinsic.String.Build("Select Text_Info2 From Inventory_Mst2 Where part = '{0}'  ",V.Local.sPart,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		'F.Intrinsic.String.Build("{0}{1}",V.Local.sText,V.ODBC.conx!rst.FieldValTrim!EXT_DESCR,V.Local.sText)
		F.Intrinsic.Control.If(V.Local.sText.Trim,=,"")
			V.Local.sText.Set(V.ODBC.conx!rst.FieldValTrim!Text_Info2)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sText,V.Ambient.NewLine,V.ODBC.conx!rst.FieldValTrim!Text_Info2,V.Local.sText)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.If(V.Local.sText,<>,"")
	Gui.Stress_Weld.mltxt1.Text(V.Local.sText)
F.Intrinsic.Control.EndIf
Gui.Stress_Weld.mltxt1.Locked(True)



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_PartDesc_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_PartDesc.End

Program.Sub.Load_Sections.Start
'F.Intrinsic.Control.SetErrorHandler("Load_Sections_Err")
'F.Intrinsic.Control.ClearErrors
'
'V.Local.sError.Declare(String)
'
'V.Local.i.Declare(Long)
'V.Local.iub.Declare(Long)
'V.Local.iSection.Declare(Long)
'V.Local.iScreens.Declare(Long)
'V.Local.sSQL.Declare(String)
'V.Local.bThread.Declare(Boolean)
'V.Local.sThread.Declare(String)
'V.Local.sSection.Declare(String)
'V.Local.sScreen.Declare(String)
'V.Local.sPart.Declare(String)
'
'V.Local.sScreen.Set(V.Screen.Stress_Weld!ddlWeld_ScreenID.Text)
'V.Local.iRow.Declare(Long)
'V.Local.iRows.Declare(Long)
'V.Local.iCol.Declare(Long)
'
'V.Global.sForm.Set("SECTIONS")
'F.Intrinsic.Control.CallSub(Buildstyle)
'
'F.Intrinsic.String.Build("Select Part From V_Job_Header Where Job = '{0}' And Suffix = '{1}'",V.Global.sWO,V.Global.sSuff,V.Local.sSQL)
'F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
'F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
'	V.Local.sPart.Set(V.ODBC.conx!rst.FieldValTrim!PART)
'F.Intrinsic.Control.Else
'	F.ODBC.conx!rst.Close
'	F.Intrinsic.Control.ExitSub
'F.Intrinsic.Control.EndIf
'F.ODBC.conx!rst.Close
'
'
''Notes
''Populate Section, Type, Slot Size (in), and Section Length (In) from GCG_CONFIG_SECTION table.
''Could be by Part in which case no matching job/suff/ser.
'V.Local.iRow.Set(1)
'F.Intrinsic.Control.If(V.Local.sPart,<>,"")
'	F.Intrinsic.String.Build("SELECT SECTION, TYPE, SLOT_SIZE, LENGTH, PERF_LENGTH  FROM GCG_CONFIG_SECTION WHERE PART = '{0}'",V.Local.sPart,V.Local.sSQL)
'
'	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)
'	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
'		Gui.Stress_Weld.gsfgSections.LoadRecordset("conx!rst",4)
'		V.Local.iRows.Set(V.Screen.Stress_Weld!gsfgSections.Rows)
'		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
'		Gui.Stress_Weld.gsfgSections.Rows(V.Local.iRows)
'
'
'	F.Intrinsic.Control.EndIf
'	F.ODBC.conx!rst.Close
'F.Intrinsic.Control.EndIf
'
'F.Intrinsic.Control.ExitSub
'
'F.Intrinsic.Control.Label("Load_Sections_Err")
'	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
'	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
'	F.Intrinsic.UI.Msgbox(V.Local.sError)
'Function.Intrinsic.Control.EndIf


Program.Sub.Load_Sections.End

Program.Sub.gsflexgrid1_cellexit.Start
'V.Local.iRow.Declare(Long)
'V.Local.iCol.Declare(Long)
'
'F.Intrinsic.Control.If(V.Local.iCol,=,3)
'	V.Local.iRow.Set(V.Screen.Stress_Weld!gsflexgrid1.Row)
'	F.Intrinsic.Control.SelectCase(V.Local.iRow)
'		F.Intrinsic.Control.Case(1)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,2)
'		F.Intrinsic.Control.Case(2)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,3)
'		F.Intrinsic.Control.Case(3)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,4)
'		F.Intrinsic.Control.Case(4)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,5)
'		F.Intrinsic.Control.Case(5)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,6)
'		F.Intrinsic.Control.Case(6)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,7)
'		F.Intrinsic.Control.Case(7)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,8)
'		F.Intrinsic.Control.Case(8)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,9)
'		F.Intrinsic.Control.Case(9)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,10)
'		F.Intrinsic.Control.Case(11)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,12)
'	F.Intrinsic.Control.EndSelect
'F.Intrinsic.Control.EndIf

Program.Sub.gsflexgrid1_cellexit.End

Program.Sub.gsflexgrid1_cellenter.Start
'V.Local.iRow.Declare(Long)
'V.Local.iCol.Declare(Long)
'
'F.Intrinsic.Control.If(V.Local.iCol,=,3)
'	V.Local.iRow.Set(V.Screen.Stress_Weld!gsflexgrid1.Row)
'	F.Intrinsic.Control.SelectCase(V.Local.iRow)
'		F.Intrinsic.Control.Case(1)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,2)
'		F.Intrinsic.Control.Case(2)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,3)
'		F.Intrinsic.Control.Case(3)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,4)
'		F.Intrinsic.Control.Case(4)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,5)
'		F.Intrinsic.Control.Case(5)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,6)
'		F.Intrinsic.Control.Case(6)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,7)
'		F.Intrinsic.Control.Case(7)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,8)
'		F.Intrinsic.Control.Case(8)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,9)
'		F.Intrinsic.Control.Case(9)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,10)
'		F.Intrinsic.Control.Case(11)
'			Gui.Stress_Weld.gsflexgrid1.SetActiveCell(1,12)
'	F.Intrinsic.Control.EndSelect
'F.Intrinsic.Control.EndIf

Program.Sub.gsflexgrid1_cellenter.End

Program.Sub.Load_Screens.Start
F.Intrinsic.Control.SetErrorHandler("Load_Screens_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


V.Local.sPart.Declare(String)
V.Local.sSQL.Declare(String)
V.local.sScreens.Declare(String)
V.local.sRet.Declare(String)
V.local.sT.declare(String)
V.local.sScreen.Declare(String)
V.local.sTxtMeasured.Declare(String)
V.local.iC.Declare(Long)
'
'

'Retrieves part used on WO from V_Job_Header
F.Intrinsic.String.Build("Select Part From V_Job_Header Where Job = '{0}' And Suffix = '{1}'",V.Global.sWO,V.Global.sSuff,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	V.Local.sPart.Set(V.ODBC.conx!rst.FieldValTrim!PART)
F.Intrinsic.Control.Else
	F.ODBC.conx!rst.Close
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close


'get measured from our pipe_layout screen.
F.Intrinsic.String.Build("Select Measured_From From GCG_Pipe_layout Where Job = '{0}' And Suffix = '{1}' And SEQ = '{3}' And Serial = '{2}'",V.Global.sWO.Trim,V.Global.sSuff.Trim,V.Global.sSerial.Trim,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
                'Gui.frmComp.txtMeasuredFrom.Text(V.ODBC.conX!rst.FieldValTrim!Measured_From)
		V.local.sTxtMeasured.Set(V.ODBC.conX!rst.FieldValTrim!Measured_From)
				
                'determine screen names based on direction, and get the actual screens that were marked as used from the pipe layout table.
                'F.Intrinsic.Control.If(V.Screen.frmComp!txtMeasuredFrom.Text,=,"Bottom to Top")
		F.Intrinsic.Control.If(V.Local.sTxtMeasured,=,"Bottom to Top")
				
                                'F.Intrinsic.String.Build("Select Box_End,Box_Center,Center,Pin_Center,Pin_End From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Serial= '{2}'",V.Global.sJob,V.Global.sSuffix.Trim,V.Global.sSerial.trim,V.Local.sSQL)
                                F.Intrinsic.String.Build("Select Box_End,Box_Center,Center,Pin_Center,Pin_End From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Seq ='{3}' And Serial= '{2}'",V.Global.sWO,V.Global.sSuff.Trim,V.Global.sSerial.trim,V.Global.sSeq,V.Local.sSQL)
				F.Intrinsic.String.Split("Bottom End*!*Bottom Center*!*Center*!*Top Center*!*Top End","*!*",V.Local.sScreens)
                F.Intrinsic.Control.Else
                               ' F.Intrinsic.String.Build("Select Pin_End,Pin_Center,Center,Box_Center,Box_end From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Serial= '{2}'",V.Global.sJob,V.Global.sSuffix.Trim,V.Global.sSerial.trim,V.Local.sSQL)
				F.Intrinsic.String.Build("Select Pin_End,Pin_Center,Center,Box_Center,Box_end From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Seq ='{3}' And Serial= '{2}'",V.Global.sWO,V.Global.sSuff.Trim,V.Global.sSerial.trim,V.global.sSEQ,V.Local.sSQL)
                                F.Intrinsic.String.Split("Top End*!*Top Center*!*Center*!*Bottom Center*!*Bottom End","*!*",V.Local.sScreens)
                F.Intrinsic.Control.Endif
                'sret will be a delimited string with True or false values, delimited by *!*
                F.ODBC.Connection!conX.ExecuteAndREturn(V.Local.sSQL,V.Local.sRet)
                F.Intrinsic.Control.If(V.Local.sret.Trim,<>,"")
      	         	F.Intrinsic.String.Split(V.Local.sret,"*!*",V.Local.sRet)
                       F.Intrinsic.Control.For(V.Local.ic,0,V.Local.sRet.UBound,1)
                        	F.Intrinsic.Control.If(V.Local.sRet(v.Local.ic).Trim,<>,"")
                                                                'figure out what screens are being used. if they are true, we are going to set sT to screens array value then concat together into sscreen below
                               					 F.Intrinsic.Control.If(V.Local.sRet(v.Local.ic),=,True)
                                                                                V.Local.sT.Set(V.Local.sScreens(v.Local.ic).Trim)
                                                                F.Intrinsic.Control.Else
                                                                                V.Local.sT.Set("")
                                                                F.Intrinsic.Control.EndIf

                                                                F.Intrinsic.Control.If(V.Local.sT.Trim,<>,"")
                                                                                F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
                                                                                                V.Local.sScreen.Set(V.Local.sT.Trim)
                                                                                F.Intrinsic.Control.Else
                                                                                                F.Intrinsic.String.Build("{0}*!*{1}",V.local.sScreen,V.Local.sT.Trim,V.Local.sScreen)
                                                                                F.Intrinsic.Control.EndIf
                                                                F.Intrinsic.Control.EndIf

                                F.Intrinsic.Control.endif
                	F.Intrinsic.Control.Next(V.Local.ic)
                F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
              '  F.Intrinsic.UI.Msgbox("Measured From direction can not be determined. Please verify input on Pipe Layout screen.")
                F.ODBC.conX!rst.Close
                F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

'screens needed were not entered in correctly on pipe layout screen. so we must default based on measured from direction
F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
                'F.Intrinsic.Control.If(V.Screen.frmComp!txtMeasuredFrom.Text,=,"Top to Bottom")
		F.Intrinsic.Control.If(V.Local.sTxtMeasured,=,"Top to Bottom")
                                V.Local.sScreen.Set("Top End*!*Center*!*Bottom End")
                F.Intrinsic.Control.Else
                                V.Local.sScreen.Set("Bottom End*!*Center*!*Top End")
                F.Intrinsic.Control.Endif
F.Intrinsic.Control.EndIf

'F.Intrinsic.Control.CallSub(Buildstylescreen)
V.Global.sForm.Set("SECTIONS")
F.Intrinsic.Control.CallSub(Buildstyle)
'
'

F.Intrinsic.String.Split(V.Local.sScreen,"*!*",V.Local.sScreen)
'only select those records that are of scren type
F.Intrinsic.String.Build("Select * From GCG_Config_Sec_Act Where Job = '{0}' ANd Suffix = '{1}' And Serial = '{2}' And Part = '{3}' And Seq In (Select Top 1 Seq From GCG_Config_Sec_Act Where Job = '{0}' ANd Suffix = '{1}' And Serial = '{2}' And Part = '{3}') Order By Seq Desc,Section",V.Global.sWO.Trim,V.Global.sSuff.Trim,V.Global.sSerial.Trim,V.Local.sPart.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
                F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Perf_Length,"PERF_LENGTH")
                F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Sec_Length,"LENGTH")
                F.Intrinsic.Variable.LoadUDTFromRecordset("conX","rst","v.uglobal.uSections",False)
                F.Intrinsic.Control.If(V.uGlobal.uSections.UBound,>,-1)
                                'now we have to determine alright what are we measuring from and where are we going.
                                'loop through and replace what we need.
                                'make sure the ubounds are the less than or equal, if they are great we will go through replacing what we need.
                                'if not we are just going to leave it screen, but either way we are replacin with screens they are using or default order
                                F.Intrinsic.Control.If(V.uGlobal.uSections.UBound,<=,V.Local.sScreen.UBound)
                                                F.Intrinsic.Control.For(V.Local.ic,0,V.uGlobal.uSections.UBound,1)
                                                                V.uGlobal.uSections(v.Local.ic)!Type.Set(V.Local.sScreen(v.Local.ic).Trim)
                                                F.Intrinsic.Control.Next(V.Local.ic)
                                F.Intrinsic.Control.EndIf
                                Gui.Stress_Weld.gsfgScreens.LoadFromUDT("v.uglobal.uSections","Section*!*Type*!*SlotSize*!*Act_Sec_Length",2)

                F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_Screens_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_Screens.End

Program.Sub.ddlscreenid_change.Start
F.Intrinsic.Control.SetErrorHandler("ddlscreenid_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.iRow.Declare(Long)
F.Intrinsic.Control.BlockEvents
Gui.SS_Drift.gsflexgrid1.Visible(false)
'we changes the screen id on our drop down.
'so we need to load our screen information into the grid.
F.Intrinsic.Control.If(V.Screen.SS_Drift!ddlScreenID.Text,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else



	V.Local.sScreen.Set(V.Screen.SS_Drift!ddlScreenID.Text)
	F.Intrinsic.String.Build("Select PROCESS, DRIFT_NO From GCG_Drift Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Screen_ID = '{3}'Order By Date_Last_Change Desc",V.Global.sWO,V.Global.sSuff,V.Global.sSerial,V.Local.sScreen.Trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)
		
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		Gui.SS_Drift.gsflexgrid1.Rows(1)
		Gui.SS_Drift.gsflexgrid1.Rows(2)
		Gui.SS_Drift.gsflexgrid1.FixedRows(1)
		Gui.SS_Drift.gsflexgrid1.LoadRecordset("conx!rst",3)
		V.Local.iRow.Set(V.Screen.SS_Drift!gsflexgrid1.Rows)
		F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)
		Gui.SS_Drift.gsflexgrid1.ApplyStyle(V.Local.iRow,2)
	F.Intrinsic.Control.Else
		Gui.SS_Drift.gsflexgrid1.Rows(2)
		Gui.SS_Drift.gsflexgrid1.TextMatrix(1,1,"")
		Gui.SS_Drift.gsflexgrid1.TextMatrix(0,1,"")
		F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)
		Gui.SS_Drift.gsflexgrid1.ApplyStyle(1,2)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close


F.Intrinsic.Control.EndIf
Gui.SS_Drift.gsflexgrid1.Visible(True)
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlscreenid_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.ddlscreenid_change.End

Program.Sub.Unload.Start
F.Intrinsic.Control.SetErrorHandler("Unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'close all recordsets
F.ODBC.Connection!conx.CloseRecordsets
F.ODBC.Connection!conx.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.Label("Unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.Unload.End

Program.Sub.cmdcopyfrom_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdcopyfrom_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sTitle.Declare(String)
V.Local.iWidth.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sData.Declare(String)
'this is on the Pull Test Screen
'so here we are going to Copy from a selected serial number for other pull tests
F.Intrinsic.String.Build("Select Serial,Screen_ID, Test_NO,Front,Back,Front_AVG,Back_AVG From GCG_Pull_Test Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' ORDER By Serial,Screen_ID,TEST_NO ASC",V.global.sWO.Trim,V.Global.sSuff.Trim,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.DoUntil(V.ODBC.conx!rst.EOF,=,True)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.fieldvalfloat!Test_No,=,1.00)
		F.Intrinsic.Control.If(V.Local.sData.Trim,=,"")
			F.Intrinsic.String.Build("{1}{0}{2}{0}{3}{0}{4}","*!*",V.ODBC.conx!rst.FieldValTrim!Serial,V.ODBC.conx!rst.FieldValTrim!Screen_ID,V.ODBC.conx!rst.FieldValTrim!Front,V.ODBC.conx!rst.FieldValTrim!Back,V.Local.sData)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{5}$!${1}{0}{2}{0}{3}{0}{4}","*!*",V.ODBC.conx!rst.FieldValTrim!Serial,V.ODBC.conx!rst.FieldValTrim!Screen_ID,V.ODBC.conx!rst.FieldValTrim!Front,V.ODBC.conx!rst.FieldValTrim!Back,V.Local.sData,V.Local.sData)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}*!*{1}*!*{2}",V.Local.sData,V.ODBC.conx!rst.FieldValTrim!Front,V.ODBC.conx!rst.FieldValTrim!Back,V.Local.sData)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.movenext
F.Intrinsic.Control.Loop
F.ODBC.conx!rst.Close


F.Intrinsic.String.Split("Serial*!*Screen ID*!*Test 1 Front*!*Test 1 Back*!*Test 2 Front*!*Test 2 Back*!*Test 3 Front*!*Test 3 Back","*!*",V.Local.sTitle)
F.Intrinsic.String.Split("1500*!*1000*!*1500*!*1500*!*1500*!*1500*!*1500*!*1500","*!*",V.Local.iWidth)

F.Intrinsic.Control.If(V.Local.sData.Trim,=,"")
	F.Intrinsic.UI.Msgbox("No Previous records to display for this job.")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.BrowserFromString("Select a Serial No.",V.Local.sData,"*!*","$!$",V.Local.sTitle,V.Local.iWidth,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet.Trim,"*!*",V.Local.sRet)
	F.Intrinsic.Control.CallSub(Load_pullvals,"Screen",V.Local.sRet(1),"Serial",V.local.sret(0))
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdcopyfrom_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdcopyfrom_click.End

Program.Sub.cmdcopyslots_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdcopyslots_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iWidth.Declare(Long)
V.Local.sTitle.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSQL.Declare(String)
F.Intrinsic.String.Split("Serial*!*ScreenID","*!*",V.local.sTitle)
F.Intrinsic.String.Split("1500*!*1500","*!*",V.Local.iwidth)

F.Intrinsic.String.Build("Select Distinct Serial,Screen_ID From GCG_Slot_Check Where Job = '{0}' ANd Suffix = '{1}' And SEQ = '{2}' ",V.Global.sWO.Trim,V.Global.sSuff.Trim,V.global.sSEQ,V.Local.sSQL)
F.Intrinsic.UI.Browser("Select Serial to Copy","conX",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,V.Local.sRet)

F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.local.sRet,"*!*",V.Local.sRet)
	F.Intrinsic.Control.CallSub(Load_slotcheck,"Serial",V.Local.sRet(0),"Screen",V.Local.sRet(1))
F.Intrinsic.Control.EndIf



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdcopyslots_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Data_Entry_Forms.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmdcopyslots_click.End
