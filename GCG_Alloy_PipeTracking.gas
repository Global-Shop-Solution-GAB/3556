Program.Sub.ScreenSU.Start
gui.frmPipeLayout..create
gui.frmPipeLayout..caption("Pipe Layout")
gui.frmPipeLayout..size(14535,8490)
gui.frmPipeLayout..minx(0)
gui.frmPipeLayout..miny(0)
gui.frmPipeLayout..position(0,0)
gui.frmPipeLayout..event(unload,frmpipelayout_unload)
gui.frmPipeLayout..alwaysontop(False)
gui.frmPipeLayout..fontname("Arial")
gui.frmPipeLayout..fontsize(8)
gui.frmPipeLayout..forecolor(0)
gui.frmPipeLayout..fontstyle(,,,,)
gui.frmPipeLayout..BackColor(-2147483633)
gui.frmPipeLayout..controlbox(True)
gui.frmPipeLayout..maxbutton(False)
gui.frmPipeLayout..minbutton(True)
gui.frmPipeLayout..mousepointer(0)
gui.frmPipeLayout..moveable(True)
gui.frmPipeLayout..sizeable(False)
gui.frmPipeLayout..ShowInTaskBar(True)
gui.frmPipeLayout..titlebar(True)
gui.frmPipeLayout.frameBBE.create(frame)
gui.frmPipeLayout.frameBBE.caption("BoxEnd")
gui.frmPipeLayout.frameBBE.size(1395,1695)
gui.frmPipeLayout.frameBBE.position(1900,9200)
gui.frmPipeLayout.frameBBE.visible(True)
gui.frmPipeLayout.frameBBE.borderstyle(0)
gui.frmPipeLayout.frameBBE.fontname("Arial")
gui.frmPipeLayout.frameBBE.fontsize(8)
gui.frmPipeLayout.frameBBC.create(frame)
gui.frmPipeLayout.frameBBC.caption("BoxCenter")
gui.frmPipeLayout.frameBBC.size(1395,1680)
gui.frmPipeLayout.frameBBC.position(3400,9200)
gui.frmPipeLayout.frameBBC.visible(True)
gui.frmPipeLayout.frameBBC.borderstyle(0)
gui.frmPipeLayout.frameBBC.fontname("Arial")
gui.frmPipeLayout.frameBBC.fontsize(8)
gui.frmPipeLayout.frameBPC.create(frame)
gui.frmPipeLayout.frameBPC.caption("PinCenter")
gui.frmPipeLayout.frameBPC.size(1395,1650)
gui.frmPipeLayout.frameBPC.position(6200,9700)
gui.frmPipeLayout.frameBPC.visible(True)
gui.frmPipeLayout.frameBPC.borderstyle(0)
gui.frmPipeLayout.frameBPC.fontname("Arial")
gui.frmPipeLayout.frameBPC.fontsize(8)
gui.frmPipeLayout.frameBPE.create(frame)
gui.frmPipeLayout.frameBPE.caption("PinEnd")
gui.frmPipeLayout.frameBPE.size(1395,1650)
gui.frmPipeLayout.frameBPE.position(300,9200)
gui.frmPipeLayout.frameBPE.visible(True)
gui.frmPipeLayout.frameBPE.borderstyle(0)
gui.frmPipeLayout.frameBPE.fontname("Arial")
gui.frmPipeLayout.frameBPE.fontsize(8)
gui.frmPipeLayout.frmCenter.create(frame)
gui.frmPipeLayout.frmCenter.caption("PinFloat")
gui.frmPipeLayout.frmCenter.size(1350,1605)
gui.frmPipeLayout.frmCenter.position(4800,9600)
gui.frmPipeLayout.frmCenter.visible(True)
gui.frmPipeLayout.frmCenter.borderstyle(0)
gui.frmPipeLayout.frmCenter.fontname("Arial")
gui.frmPipeLayout.frmCenter.fontsize(8)
gui.frmPipeLayout.chkBoxEnd_frmPLay.create(checkbox)
gui.frmPipeLayout.chkBoxEnd_frmPLay.caption("Bottom End")
gui.frmPipeLayout.chkBoxEnd_frmPLay.visible(True)
gui.frmPipeLayout.chkBoxEnd_frmPLay.size(1155,300)
gui.frmPipeLayout.chkBoxEnd_frmPLay.zorder(0)
gui.frmPipeLayout.chkBoxEnd_frmPLay.position(1730,4100)
gui.frmPipeLayout.chkBoxEnd_frmPLay.enabled(True)
gui.frmPipeLayout.chkBoxEnd_frmPLay.alignment(0)
gui.frmPipeLayout.chkBoxEnd_frmPLay.fontname("Arial")
gui.frmPipeLayout.chkBoxEnd_frmPLay.fontsize(8)
gui.frmPipeLayout.chkBoxEnd_frmPLay.event(click,chkboxend_frmplay_click)
gui.frmPipeLayout.chkBoxEnd_frmPLay.defaultvalue("N")
gui.frmPipeLayout.chkBoxEnd_frmPLay.controlgroup(0)
gui.frmPipeLayout.chkPinEnd_frmPlay.create(checkbox)
gui.frmPipeLayout.chkPinEnd_frmPlay.caption("Top End")
gui.frmPipeLayout.chkPinEnd_frmPlay.visible(True)
gui.frmPipeLayout.chkPinEnd_frmPlay.size(900,255)
gui.frmPipeLayout.chkPinEnd_frmPlay.zorder(0)
gui.frmPipeLayout.chkPinEnd_frmPlay.position(7350,4100)
gui.frmPipeLayout.chkPinEnd_frmPlay.enabled(True)
gui.frmPipeLayout.chkPinEnd_frmPlay.alignment(0)
gui.frmPipeLayout.chkPinEnd_frmPlay.fontname("Arial")
gui.frmPipeLayout.chkPinEnd_frmPlay.fontsize(8)
gui.frmPipeLayout.chkPinEnd_frmPlay.event(click,chkpinend_frmplay_click)
gui.frmPipeLayout.chkPinEnd_frmPlay.defaultvalue("N")
gui.frmPipeLayout.chkPinEnd_frmPlay.controlgroup(0)
gui.frmPipeLayout.lblchooseend.create(label,"Measured From",True,1170,255,1,200,3160,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lblchooseend.defaultvalue("")
gui.frmPipeLayout.lblchooseend.controlgroup(0)
gui.frmPipeLayout.chkCenter_frmPLay.create(checkbox)
gui.frmPipeLayout.chkCenter_frmPLay.caption("Center")
gui.frmPipeLayout.chkCenter_frmPLay.visible(True)
gui.frmPipeLayout.chkCenter_frmPLay.size(855,255)
gui.frmPipeLayout.chkCenter_frmPLay.zorder(0)
gui.frmPipeLayout.chkCenter_frmPLay.position(4545,4100)
gui.frmPipeLayout.chkCenter_frmPLay.enabled(True)
gui.frmPipeLayout.chkCenter_frmPLay.alignment(0)
gui.frmPipeLayout.chkCenter_frmPLay.fontname("Arial")
gui.frmPipeLayout.chkCenter_frmPLay.fontsize(8)
gui.frmPipeLayout.chkCenter_frmPLay.event(click,chkcenter_frmplay_click)
gui.frmPipeLayout.chkCenter_frmPLay.defaultvalue("N")
gui.frmPipeLayout.chkCenter_frmPLay.controlgroup(0)
gui.frmPipeLayout.txtBE1.create(textbox,"",True,1215,300,0,75,260,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtBE1.parent("framebbe")
gui.frmPipeLayout.txtBE1.defaultvalue("")
gui.frmPipeLayout.txtBE1.controlgroup(0)
gui.frmPipeLayout.txtBE2.create(textbox,"",True,1215,300,0,75,585,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtBE2.parent("framebbe")
gui.frmPipeLayout.txtBE2.defaultvalue("")
gui.frmPipeLayout.txtBE2.controlgroup(0)
gui.frmPipeLayout.txtBE3.create(textbox,"",True,1215,300,0,80,935,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtBE3.parent("framebbe")
gui.frmPipeLayout.txtBE3.defaultvalue("")
gui.frmPipeLayout.txtBE3.controlgroup(0)
gui.frmPipeLayout.txtBE4.create(textbox,"",True,1215,300,0,75,1265,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtBE4.parent("framebbe")
gui.frmPipeLayout.txtBE4.defaultvalue("")
gui.frmPipeLayout.txtBE4.controlgroup(0)
gui.frmPipeLayout.txtBC1.create(textbox,"",True,1215,300,0,60,245,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtBC1.parent("framebbc")
gui.frmPipeLayout.txtBC1.defaultvalue("")
gui.frmPipeLayout.txtBC1.controlgroup(0)
gui.frmPipeLayout.txtBC2.create(textbox,"",True,1215,300,0,60,585,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtBC2.parent("framebbc")
gui.frmPipeLayout.txtBC2.defaultvalue("")
gui.frmPipeLayout.txtBC2.controlgroup(0)
gui.frmPipeLayout.txtBC3.create(textbox,"",True,1215,300,0,60,925,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtBC3.parent("framebbc")
gui.frmPipeLayout.txtBC3.defaultvalue("")
gui.frmPipeLayout.txtBC3.controlgroup(0)
gui.frmPipeLayout.txtBC4.create(textbox,"",True,1215,300,0,60,1265,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtBC4.parent("framebbc")
gui.frmPipeLayout.txtBC4.defaultvalue("")
gui.frmPipeLayout.txtBC4.controlgroup(0)
gui.frmPipeLayout.txtPC1.create(textbox,"",True,1215,300,0,60,260,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPC1.parent("framebpc")
gui.frmPipeLayout.txtPC1.defaultvalue("")
gui.frmPipeLayout.txtPC1.controlgroup(0)
gui.frmPipeLayout.txtPC2.create(textbox,"",True,1215,300,0,60,585,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPC2.parent("framebpc")
gui.frmPipeLayout.txtPC2.defaultvalue("")
gui.frmPipeLayout.txtPC2.controlgroup(0)
gui.frmPipeLayout.txtPC3.create(textbox,"",True,1215,300,0,60,895,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPC3.parent("framebpc")
gui.frmPipeLayout.txtPC3.defaultvalue("")
gui.frmPipeLayout.txtPC3.controlgroup(0)
gui.frmPipeLayout.txtPC4.create(textbox,"",True,1215,300,0,60,1235,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPC4.parent("framebpc")
gui.frmPipeLayout.txtPC4.defaultvalue("")
gui.frmPipeLayout.txtPC4.controlgroup(0)
gui.frmPipeLayout.txtPE1.create(textbox,"",True,1215,300,0,60,260,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPE1.parent("framebpe")
gui.frmPipeLayout.txtPE1.defaultvalue("")
gui.frmPipeLayout.txtPE1.controlgroup(0)
gui.frmPipeLayout.txtPE2.create(textbox,"",True,1215,300,0,60,570,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPE2.parent("framebpe")
gui.frmPipeLayout.txtPE2.defaultvalue("")
gui.frmPipeLayout.txtPE2.controlgroup(0)
gui.frmPipeLayout.txtPE3.create(textbox,"",True,1215,300,0,60,895,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPE3.parent("framebpe")
gui.frmPipeLayout.txtPE3.defaultvalue("")
gui.frmPipeLayout.txtPE3.controlgroup(0)
gui.frmPipeLayout.txtPE4.create(textbox,"",True,1215,300,0,60,1220,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPE4.parent("framebpe")
gui.frmPipeLayout.txtPE4.defaultvalue("")
gui.frmPipeLayout.txtPE4.controlgroup(0)
gui.frmPipeLayout.txtC1.create(textbox,"",True,1215,300,0,75,155,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtC1.parent("frmcenter")
gui.frmPipeLayout.txtC1.defaultvalue("")
gui.frmPipeLayout.txtC1.controlgroup(0)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.create(dropdownlist)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.visible(True)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.size(2010,330)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.zorder(0)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.position(1505,3105)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.enabled(True)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.fontname("Arial")
gui.frmPipeLayout.ddlMeasFrom_frmPLay.fontsize(8)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.event(change,ddlmeasfrom_frmplay_change)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.event(click,ddlmeasfrom_frmplay_click)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.tooltip("Select which end of the pipe to measure from")
gui.frmPipeLayout.ddlMeasFrom_frmPLay.defaultvalue("")
gui.frmPipeLayout.ddlMeasFrom_frmPLay.controlgroup(0)
gui.frmPipeLayout.lbl3.create(label,"Screens Needed",True,1305,300,1,145,4115,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl3.defaultvalue("")
gui.frmPipeLayout.lbl3.controlgroup(0)
gui.frmPipeLayout.chkBxCenter_frmPLay.create(checkbox)
gui.frmPipeLayout.chkBxCenter_frmPLay.caption("Bottom Center")
gui.frmPipeLayout.chkBxCenter_frmPLay.visible(True)
gui.frmPipeLayout.chkBxCenter_frmPLay.size(1365,255)
gui.frmPipeLayout.chkBxCenter_frmPLay.zorder(0)
gui.frmPipeLayout.chkBxCenter_frmPLay.position(3100,4100)
gui.frmPipeLayout.chkBxCenter_frmPLay.enabled(True)
gui.frmPipeLayout.chkBxCenter_frmPLay.alignment(0)
gui.frmPipeLayout.chkBxCenter_frmPLay.fontname("Arial")
gui.frmPipeLayout.chkBxCenter_frmPLay.fontsize(8)
gui.frmPipeLayout.chkBxCenter_frmPLay.event(click,chkbxcenter_frmplay_click)
gui.frmPipeLayout.chkBxCenter_frmPLay.defaultvalue("N")
gui.frmPipeLayout.chkBxCenter_frmPLay.controlgroup(0)
gui.frmPipeLayout.chkPinCenter_frmPLay.create(checkbox)
gui.frmPipeLayout.chkPinCenter_frmPLay.caption("Top Center")
gui.frmPipeLayout.chkPinCenter_frmPLay.visible(True)
gui.frmPipeLayout.chkPinCenter_frmPLay.size(1095,270)
gui.frmPipeLayout.chkPinCenter_frmPLay.zorder(0)
gui.frmPipeLayout.chkPinCenter_frmPLay.position(5785,4100)
gui.frmPipeLayout.chkPinCenter_frmPLay.enabled(True)
gui.frmPipeLayout.chkPinCenter_frmPLay.alignment(0)
gui.frmPipeLayout.chkPinCenter_frmPLay.fontname("Arial")
gui.frmPipeLayout.chkPinCenter_frmPLay.fontsize(8)
gui.frmPipeLayout.chkPinCenter_frmPLay.event(click,chkpincenter_frmplay_click)
gui.frmPipeLayout.chkPinCenter_frmPLay.defaultvalue("N")
gui.frmPipeLayout.chkPinCenter_frmPLay.controlgroup(0)
gui.frmPipeLayout.txtJob_frmPLay.create(textbox,"",True,1215,300,0,1545,1915,False,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtJob_frmPLay.event(change,jobh_change)
gui.frmPipeLayout.txtJob_frmPLay.defaultvalue("")
gui.frmPipeLayout.txtJob_frmPLay.controlgroup(0)
gui.frmPipeLayout.txtSerial_frmPLay.create(textbox,"",True,2010,300,0,1500,2540,False,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtSerial_frmPLay.defaultvalue("")
gui.frmPipeLayout.txtSerial_frmPLay.controlgroup(0)
gui.frmPipeLayout.txtSuffix_frmPLay.create(textbox,"",True,690,300,0,2870,1915,False,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtSuffix_frmPLay.defaultvalue("")
gui.frmPipeLayout.txtSuffix_frmPLay.controlgroup(0)
gui.frmPipeLayout.lbl5.create(label,"Job - Suffix",True,900,255,1,230,1955,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl5.defaultvalue("")
gui.frmPipeLayout.lbl5.controlgroup(0)
gui.frmPipeLayout.lbl6.create(label,"Serial Number",True,1035,255,1,185,2580,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl6.defaultvalue("")
gui.frmPipeLayout.lbl6.controlgroup(0)
gui.frmPipeLayout.txtPipNo_frmPLay.create(textbox,"",True,1680,300,0,6870,1855,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPipNo_frmPLay.event(change,pipenum_change)
gui.frmPipeLayout.txtPipNo_frmPLay.event(lostfocus,pipenum_change)
gui.frmPipeLayout.txtPipNo_frmPLay.defaultvalue("")
gui.frmPipeLayout.txtPipNo_frmPLay.controlgroup(0)
gui.frmPipeLayout.lbl7.create(label,"AMW Pipe Number",True,1350,255,1,5355,1885,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl7.defaultvalue("")
gui.frmPipeLayout.lbl7.controlgroup(0)
gui.frmPipeLayout.txtPipeCurLength_frmPLay.create(textbox,"",True,1680,300,0,6855,2270,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPipeCurLength_frmPLay.defaultvalue("")
gui.frmPipeLayout.txtPipeCurLength_frmPLay.controlgroup(0)
gui.frmPipeLayout.lbl8.create(label,"Pipe Current Length",True,1470,255,1,5270,2345,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl8.defaultvalue("")
gui.frmPipeLayout.lbl8.controlgroup(0)
gui.frmPipeLayout.txtPCutLength_frmPLay.create(textbox,"",True,1680,300,0,6870,2700,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtPCutLength_frmPLay.defaultvalue("")
gui.frmPipeLayout.txtPCutLength_frmPLay.controlgroup(0)
gui.frmPipeLayout.lbl9.create(label,"Pipe Cut Length",True,1230,255,1,5560,2745,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl9.defaultvalue("")
gui.frmPipeLayout.lbl9.controlgroup(0)
gui.frmPipeLayout.cmdSave_frmPLay.create(button)
gui.frmPipeLayout.cmdSave_frmPLay.caption("Save")
gui.frmPipeLayout.cmdSave_frmPLay.visible(True)
gui.frmPipeLayout.cmdSave_frmPLay.size(855,375)
gui.frmPipeLayout.cmdSave_frmPLay.zorder(0)
gui.frmPipeLayout.cmdSave_frmPLay.position(85,7440)
gui.frmPipeLayout.cmdSave_frmPLay.enabled(True)
gui.frmPipeLayout.cmdSave_frmPLay.fontname("Arial")
gui.frmPipeLayout.cmdSave_frmPLay.fontsize(8)
gui.frmPipeLayout.cmdSave_frmPLay.event(click,cmdsave_frmplay_click)
gui.frmPipeLayout.cmdSave_frmPLay.defaultvalue("")
gui.frmPipeLayout.cmdSave_frmPLay.controlgroup(0)
gui.frmPipeLayout.txtC4.create(textbox,"",True,1215,300,0,75,1160,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtC4.parent("frmcenter")
gui.frmPipeLayout.txtC4.defaultvalue("")
gui.frmPipeLayout.txtC4.controlgroup(0)
gui.frmPipeLayout.txtC3.create(textbox,"",True,1215,300,0,75,815,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtC3.parent("frmcenter")
gui.frmPipeLayout.txtC3.defaultvalue("")
gui.frmPipeLayout.txtC3.controlgroup(0)
gui.frmPipeLayout.txtC2.create(textbox,"",True,1215,300,0,75,485,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtC2.parent("frmcenter")
gui.frmPipeLayout.txtC2.defaultvalue("")
gui.frmPipeLayout.txtC2.controlgroup(0)
gui.frmPipeLayout.chkRejected_frmPLay.create(checkbox)
gui.frmPipeLayout.chkRejected_frmPLay.caption("Rejected")
gui.frmPipeLayout.chkRejected_frmPLay.visible(True)
gui.frmPipeLayout.chkRejected_frmPLay.size(1035,255)
gui.frmPipeLayout.chkRejected_frmPLay.zorder(0)
gui.frmPipeLayout.chkRejected_frmPLay.position(11285,1920)
gui.frmPipeLayout.chkRejected_frmPLay.enabled(True)
gui.frmPipeLayout.chkRejected_frmPLay.alignment(0)
gui.frmPipeLayout.chkRejected_frmPLay.fontname("Arial")
gui.frmPipeLayout.chkRejected_frmPLay.fontsize(8)
gui.frmPipeLayout.chkRejected_frmPLay.event(click,chkrejected_frmplay_click)
gui.frmPipeLayout.chkRejected_frmPLay.defaultvalue("")
gui.frmPipeLayout.chkRejected_frmPLay.controlgroup(0)
gui.frmPipeLayout.txtNOEnd.create(textbox,"",True,2040,300,0,1500,3550,True,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtNOEnd.event(change,pipenum_change)
gui.frmPipeLayout.txtNOEnd.numericonly(2)
gui.frmPipeLayout.txtNOEnd.defaultvalue("")
gui.frmPipeLayout.txtNOEnd.controlgroup(0)
gui.frmPipeLayout.lbl10.create(label,"Joint Number",True,1935,255,1,215,3645,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl10.defaultvalue("")
gui.frmPipeLayout.lbl10.controlgroup(0)
gui.frmPipeLayout.lbl11.create(label,"Box To Perf",True,1935,285,1,200,8500,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl11.defaultvalue("")
gui.frmPipeLayout.lbl11.controlgroup(0)
gui.frmPipeLayout.lbl12.create(label,"Box To Screen",True,1935,255,1,1600,8500,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl12.defaultvalue("")
gui.frmPipeLayout.lbl12.controlgroup(0)
gui.frmPipeLayout.lbl13.create(label,"Perf. Length",True,1935,255,1,3200,8500,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl13.defaultvalue("")
gui.frmPipeLayout.lbl13.controlgroup(0)
gui.frmPipeLayout.lbl14.create(label,"Screen Length",True,1935,255,1,5100,8500,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl14.defaultvalue("")
gui.frmPipeLayout.lbl14.controlgroup(0)
gui.frmPipeLayout.lbl17.create(label,"Part Description",True,1935,255,1,170,5,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl17.defaultvalue("")
gui.frmPipeLayout.lbl17.controlgroup(0)
gui.frmPipeLayout.mltPartDesc.create(textboxm)
gui.frmPipeLayout.mltPartDesc.text("")
gui.frmPipeLayout.mltPartDesc.visible(True)
gui.frmPipeLayout.mltPartDesc.size(13830,1665)
gui.frmPipeLayout.mltPartDesc.zorder(0)
gui.frmPipeLayout.mltPartDesc.position(175,180)
gui.frmPipeLayout.mltPartDesc.enabled(True)
gui.frmPipeLayout.mltPartDesc.alignment(0)
gui.frmPipeLayout.mltPartDesc.fontname("Arial")
gui.frmPipeLayout.mltPartDesc.fontsize(8)
gui.frmPipeLayout.mltPartDesc.BackColor(-2147483643)
gui.frmPipeLayout.mltPartDesc.defaultvalue("")
gui.frmPipeLayout.mltPartDesc.controlgroup(0)
gui.frmPipeLayout.gsfgSections.create(gsflexgrid)
gui.frmPipeLayout.gsfgSections.FixedRows(0)
gui.frmPipeLayout.gsfgSections.FixedCols(0)
gui.frmPipeLayout.gsfgSections.visible(True)
gui.frmPipeLayout.gsfgSections.size(14025,2805)
gui.frmPipeLayout.gsfgSections.zorder(0)
gui.frmPipeLayout.gsfgSections.position(100,4545)
gui.frmPipeLayout.gsfgSections.enabled(True)
gui.frmPipeLayout.gsfgSections.event(posttextmatrix,gsfgsections_posttextmatrix)
gui.frmPipeLayout.cmdAddRing.create(button)
gui.frmPipeLayout.cmdAddRing.caption("Add Ring")
gui.frmPipeLayout.cmdAddRing.visible(True)
gui.frmPipeLayout.cmdAddRing.size(1110,390)
gui.frmPipeLayout.cmdAddRing.zorder(0)
gui.frmPipeLayout.cmdAddRing.position(8515,3985)
gui.frmPipeLayout.cmdAddRing.enabled(True)
gui.frmPipeLayout.cmdAddRing.fontname("Arial")
gui.frmPipeLayout.cmdAddRing.fontsize(8)
gui.frmPipeLayout.cmdAddRing.event(click,cmdaddring_click)
gui.frmPipeLayout.cmdAddRing.tooltip("Click this to add a 'ring' section to the grid.")
gui.frmPipeLayout.cmdAddRing.defaultvalue("")
gui.frmPipeLayout.cmdAddRing.controlgroup(0)
gui.frmPipeLayout.cmdRemoveRing.create(button)
gui.frmPipeLayout.cmdRemoveRing.caption("Remove Ring")
gui.frmPipeLayout.cmdRemoveRing.visible(True)
gui.frmPipeLayout.cmdRemoveRing.size(1110,390)
gui.frmPipeLayout.cmdRemoveRing.zorder(0)
gui.frmPipeLayout.cmdRemoveRing.position(9645,3990)
gui.frmPipeLayout.cmdRemoveRing.enabled(True)
gui.frmPipeLayout.cmdRemoveRing.fontname("Arial")
gui.frmPipeLayout.cmdRemoveRing.fontsize(8)
gui.frmPipeLayout.cmdRemoveRing.event(click,cmdremovering_click)
gui.frmPipeLayout.cmdRemoveRing.tooltip("Click this button to remove a ring section")
gui.frmPipeLayout.cmdRemoveRing.defaultvalue("")
gui.frmPipeLayout.cmdRemoveRing.controlgroup(0)
gui.frmPipeLayout.txt28PConfigLength_frmPLay.create(textbox,"",True,1680,300,0,6870,3115,False,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txt28PConfigLength_frmPLay.defaultvalue("")
gui.frmPipeLayout.txt28PConfigLength_frmPLay.controlgroup(0)
gui.frmPipeLayout.lbl15.create(label,"Pipe Config Length",True,1455,255,1,5345,3160,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl15.defaultvalue("")
gui.frmPipeLayout.lbl15.controlgroup(0)
gui.frmPipeLayout.lbl16.create(label,"Seq",True,1935,255,1,3750,1940,True,0,Arial,8,-2147483633,0)
gui.frmPipeLayout.lbl16.defaultvalue("")
gui.frmPipeLayout.lbl16.controlgroup(0)
gui.frmPipeLayout.txtSeq.create(textbox,"",True,930,300,0,4100,1900,False,0,Arial,8,-2147483643,1)
gui.frmPipeLayout.txtSeq.defaultvalue("")
gui.frmPipeLayout.txtSeq.controlgroup(0)
gui.frmPipeLayout.chkLODr.create(checkbox)
gui.frmPipeLayout.chkLODr.caption("Layout Drift Complete")
gui.frmPipeLayout.chkLODr.visible(True)
gui.frmPipeLayout.chkLODr.size(2040,255)
gui.frmPipeLayout.chkLODr.zorder(0)
gui.frmPipeLayout.chkLODr.position(8810,1950)
gui.frmPipeLayout.chkLODr.enabled(True)
gui.frmPipeLayout.chkLODr.alignment(0)
gui.frmPipeLayout.chkLODr.fontname("Arial")
gui.frmPipeLayout.chkLODr.fontsize(8)
gui.frmPipeLayout.chkLODr.defaultvalue("")
gui.frmPipeLayout.chkLODr.controlgroup(0)
gui.frmPipeLayout.mltPartDesc.tabstop(True)
gui.frmPipeLayout.mltPartDesc.tabindex(1)
gui.frmPipeLayout.txtJob_frmPLay.tabstop(True)
gui.frmPipeLayout.txtJob_frmPLay.tabindex(2)
gui.frmPipeLayout.txtSuffix_frmPLay.tabstop(True)
gui.frmPipeLayout.txtSuffix_frmPLay.tabindex(3)
gui.frmPipeLayout.txtSerial_frmPLay.tabstop(True)
gui.frmPipeLayout.txtSerial_frmPLay.tabindex(4)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.tabstop(True)
gui.frmPipeLayout.ddlMeasFrom_frmPLay.tabindex(5)
gui.frmPipeLayout.txtNOEnd.tabstop(True)
gui.frmPipeLayout.txtNOEnd.tabindex(6)
gui.frmPipeLayout.txtPipNo_frmPLay.tabstop(True)
gui.frmPipeLayout.txtPipNo_frmPLay.tabindex(7)
gui.frmPipeLayout.txtPipeCurLength_frmPLay.tabstop(True)
gui.frmPipeLayout.txtPipeCurLength_frmPLay.tabindex(8)
gui.frmPipeLayout.txtPCutLength_frmPLay.tabstop(True)
gui.frmPipeLayout.txtPCutLength_frmPLay.tabindex(9)
gui.frmPipeLayout.chkRejected_frmPLay.tabstop(True)
gui.frmPipeLayout.chkRejected_frmPLay.tabindex(10)
gui.frmPipeLayout.chkBoxEnd_frmPLay.tabstop(True)
gui.frmPipeLayout.chkBoxEnd_frmPLay.tabindex(11)
gui.frmPipeLayout.chkBxCenter_frmPLay.tabstop(True)
gui.frmPipeLayout.chkBxCenter_frmPLay.tabindex(12)
gui.frmPipeLayout.chkCenter_frmPLay.tabstop(True)
gui.frmPipeLayout.chkCenter_frmPLay.tabindex(13)
gui.frmPipeLayout.chkPinCenter_frmPLay.tabstop(True)
gui.frmPipeLayout.chkPinCenter_frmPLay.tabindex(14)
gui.frmPipeLayout.chkPinEnd_frmPlay.tabstop(True)
gui.frmPipeLayout.chkPinEnd_frmPlay.tabindex(15)
gui.frmPipeLayout.cmdAddRing.tabstop(True)
gui.frmPipeLayout.cmdAddRing.tabindex(16)
gui.frmPipeLayout.cmdRemoveRing.tabstop(True)
gui.frmPipeLayout.cmdRemoveRing.tabindex(17)
gui.frmPipeLayout.gsfgSections.tabstop(True)
gui.frmPipeLayout.gsfgSections.tabindex(18)
gui.frmPipeLayout.cmdSave_frmPLay.tabstop(True)
gui.frmPipeLayout.cmdSave_frmPLay.tabindex(19)
gui.frmPipeLayout.txtBE1.tabstop(True)
gui.frmPipeLayout.txtBE1.tabindex(20)
gui.frmPipeLayout.txtBE2.tabstop(True)
gui.frmPipeLayout.txtBE2.tabindex(21)
gui.frmPipeLayout.txtBE3.tabstop(True)
gui.frmPipeLayout.txtBE3.tabindex(22)
gui.frmPipeLayout.txtBE4.tabstop(True)
gui.frmPipeLayout.txtBE4.tabindex(23)
gui.frmPipeLayout.txtBC1.tabstop(True)
gui.frmPipeLayout.txtBC1.tabindex(24)
gui.frmPipeLayout.txtBC2.tabstop(True)
gui.frmPipeLayout.txtBC2.tabindex(25)
gui.frmPipeLayout.txtBC3.tabstop(True)
gui.frmPipeLayout.txtBC3.tabindex(26)
gui.frmPipeLayout.txtBC4.tabstop(True)
gui.frmPipeLayout.txtBC4.tabindex(27)
gui.frmPipeLayout.txtPC1.tabstop(True)
gui.frmPipeLayout.txtPC1.tabindex(28)
gui.frmPipeLayout.txtPC2.tabstop(True)
gui.frmPipeLayout.txtPC2.tabindex(29)
gui.frmPipeLayout.txtPC3.tabstop(True)
gui.frmPipeLayout.txtPC3.tabindex(30)
gui.frmPipeLayout.txtPC4.tabstop(True)
gui.frmPipeLayout.txtPC4.tabindex(31)
gui.frmPipeLayout.txtPE1.tabstop(True)
gui.frmPipeLayout.txtPE1.tabindex(32)
gui.frmPipeLayout.txtPE2.tabstop(True)
gui.frmPipeLayout.txtPE2.tabindex(33)
gui.frmPipeLayout.txtPE3.tabstop(True)
gui.frmPipeLayout.txtPE3.tabindex(34)
gui.frmPipeLayout.txtPE4.tabstop(True)
gui.frmPipeLayout.txtPE4.tabindex(35)
gui.frmPipeLayout.txtC1.tabstop(True)
gui.frmPipeLayout.txtC1.tabindex(36)
gui.frmPipeLayout.txtC4.tabstop(True)
gui.frmPipeLayout.txtC4.tabindex(37)
gui.frmPipeLayout.txtC3.tabstop(True)
gui.frmPipeLayout.txtC3.tabindex(38)
gui.frmPipeLayout.txtC2.tabstop(True)
gui.frmPipeLayout.txtC2.tabindex(39)
gui.frmPipeLayout.txt28PConfigLength_frmPLay.tabstop(False)
gui.frmPipeLayout.txt28PConfigLength_frmPLay.tabindex(115)


gui.frmPipeOps..create
gui.frmPipeOps..caption("Pipe Operations")
gui.frmPipeOps..size(14355,7665)
gui.frmPipeOps..minx(0)
gui.frmPipeOps..miny(0)
gui.frmPipeOps..position(0,0)
gui.frmPipeOps..event(unload,frmpipeops_unload)
gui.frmPipeOps..alwaysontop(False)
gui.frmPipeOps..fontname("Arial")
gui.frmPipeOps..fontsize(8)
gui.frmPipeOps..forecolor(0)
gui.frmPipeOps..fontstyle(,,,,)
gui.frmPipeOps..BackColor(-2147483633)
gui.frmPipeOps..controlbox(True)
gui.frmPipeOps..maxbutton(False)
gui.frmPipeOps..minbutton(True)
gui.frmPipeOps..mousepointer(0)
gui.frmPipeOps..moveable(True)
gui.frmPipeOps..sizeable(False)
gui.frmPipeOps..ShowInTaskBar(True)
gui.frmPipeOps..titlebar(True)
gui.frmPipeOps.frame1.create(frame)
gui.frmPipeOps.frame1.caption("Threading")
gui.frmPipeOps.frame1.size(13155,975)
gui.frmPipeOps.frame1.position(835,4485)
gui.frmPipeOps.frame1.visible(True)
gui.frmPipeOps.frame1.borderstyle(0)
gui.frmPipeOps.frame1.fontname("Arial")
gui.frmPipeOps.frame1.fontsize(8)
gui.frmPipeOps.frame2.create(frame)
gui.frmPipeOps.frame2.caption("Threading")
gui.frmPipeOps.frame2.size(13155,720)
gui.frmPipeOps.frame2.position(845,5645)
gui.frmPipeOps.frame2.visible(True)
gui.frmPipeOps.frame2.borderstyle(0)
gui.frmPipeOps.frame2.fontname("Arial")
gui.frmPipeOps.frame2.fontsize(8)
gui.frmPipeOps.txtJob.create(textbox,"",True,1215,300,0,1385,2705,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtJob.event(change,jobh_change)
gui.frmPipeOps.txtJob.defaultvalue("")
gui.frmPipeOps.txtJob.controlgroup(0)
gui.frmPipeOps.lbl1.create(label,"Job - Suffix",True,900,255,1,430,2735,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl1.defaultvalue("")
gui.frmPipeOps.lbl1.controlgroup(0)
gui.frmPipeOps.txtSuffix.create(textbox,"",True,690,300,0,2735,2695,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtSuffix.defaultvalue("")
gui.frmPipeOps.txtSuffix.controlgroup(0)
gui.frmPipeOps.txtSerialNumber.create(textbox,"",True,2010,300,0,1400,3165,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtSerialNumber.defaultvalue("")
gui.frmPipeOps.txtSerialNumber.controlgroup(0)
gui.frmPipeOps.lbl2.create(label,"Serial Number",True,1035,255,1,275,3200,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl2.defaultvalue("")
gui.frmPipeOps.lbl2.controlgroup(0)
gui.frmPipeOps.txtAMWPipeNumber.create(textbox,"",True,1215,300,0,6725,2695,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtAMWPipeNumber.event(change,pipenum_change)
gui.frmPipeOps.txtAMWPipeNumber.defaultvalue("")
gui.frmPipeOps.txtAMWPipeNumber.controlgroup(0)
gui.frmPipeOps.lbl3.create(label,"AMW Pipe Number",True,1350,255,1,5270,2770,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl3.defaultvalue("")
gui.frmPipeOps.lbl3.controlgroup(0)
gui.frmPipeOps.txtPipeCutLength.create(textbox,"",True,1215,300,0,6725,3150,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtPipeCutLength.defaultvalue("")
gui.frmPipeOps.txtPipeCutLength.controlgroup(0)
gui.frmPipeOps.lbl4.create(label,"Pipe Cut Length",True,1185,255,1,5485,3200,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl4.defaultvalue("")
gui.frmPipeOps.lbl4.controlgroup(0)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.create(combobox)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.text("")
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.visible(True)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.size(2100,330)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.zorder(0)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.position(1400,3640)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.enabled(True)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.fontname("Arial")
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.fontsize(8)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.event(change,cbopipeend_frmpipeop_click)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.event(click,cbopipeend_frmpipeop_click)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.defaultvalue("")
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.controlgroup(0)
gui.frmPipeOps.lbl5.create(label,"Threaded End",True,1260,255,1,255,3685,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl5.defaultvalue("")
gui.frmPipeOps.lbl5.controlgroup(0)
gui.frmPipeOps.txtActualCutLength.create(textbox,"",True,1215,300,0,6725,3585,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtActualCutLength.defaultvalue("")
gui.frmPipeOps.txtActualCutLength.controlgroup(0)
gui.frmPipeOps.lbl6.create(label,"Actual Cut Length",True,1365,255,1,5330,3625,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl6.defaultvalue("")
gui.frmPipeOps.lbl6.controlgroup(0)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.create(checkbox)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.caption("Perf Complete")
gui.frmPipeOps.chkPerfComplete_frmPipeOp.visible(True)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.size(1935,255)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.zorder(0)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.position(9280,2960)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.enabled(True)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.alignment(0)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.fontname("Arial")
gui.frmPipeOps.chkPerfComplete_frmPipeOp.fontsize(8)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.event(click,chkperfcomplete_frmpipeop_click)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.defaultvalue("")
gui.frmPipeOps.chkPerfComplete_frmPipeOp.controlgroup(0)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.create(checkbox)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.caption("Deburr Complete")
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.visible(True)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.size(1695,255)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.zorder(0)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.position(9280,3230)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.enabled(True)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.alignment(0)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.fontname("Arial")
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.fontsize(8)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.event(click,chkdbrrcomplete_frmpipeop_click)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.defaultvalue("")
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.controlgroup(0)
gui.frmPipeOps.chkBlowOut_frmPipeOp.create(checkbox)
gui.frmPipeOps.chkBlowOut_frmPipeOp.caption("Blow Out")
gui.frmPipeOps.chkBlowOut_frmPipeOp.visible(True)
gui.frmPipeOps.chkBlowOut_frmPipeOp.size(1935,255)
gui.frmPipeOps.chkBlowOut_frmPipeOp.zorder(0)
gui.frmPipeOps.chkBlowOut_frmPipeOp.position(9280,3545)
gui.frmPipeOps.chkBlowOut_frmPipeOp.enabled(True)
gui.frmPipeOps.chkBlowOut_frmPipeOp.alignment(0)
gui.frmPipeOps.chkBlowOut_frmPipeOp.fontname("Arial")
gui.frmPipeOps.chkBlowOut_frmPipeOp.fontsize(8)
gui.frmPipeOps.chkBlowOut_frmPipeOp.event(click,chkblowout_frmpipeop_click)
gui.frmPipeOps.chkBlowOut_frmPipeOp.defaultvalue("")
gui.frmPipeOps.chkBlowOut_frmPipeOp.controlgroup(0)
gui.frmPipeOps.txtThreadLength_Standard.create(textbox,"",True,1215,300,0,3100,200,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtThreadLength_Standard.parent("frame1")
gui.frmPipeOps.txtThreadLength_Standard.defaultvalue("")
gui.frmPipeOps.txtThreadLength_Standard.controlgroup(0)
gui.frmPipeOps.txtThreadType_Stan.create(textbox,"",True,1215,300,0,215,195,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtThreadType_Stan.parent("frame1")
gui.frmPipeOps.txtThreadType_Stan.defaultvalue("")
gui.frmPipeOps.txtThreadType_Stan.controlgroup(0)
gui.frmPipeOps.txtRGage_St_Min.create(textbox,"",True,1215,300,0,1600,200,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtRGage_St_Min.parent("frame1")
gui.frmPipeOps.txtRGage_St_Min.defaultvalue("")
gui.frmPipeOps.txtRGage_St_Min.controlgroup(0)
gui.frmPipeOps.txtThreadHeight_Standard.create(textbox,"",True,1215,300,0,4440,200,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtThreadHeight_Standard.parent("frame1")
gui.frmPipeOps.txtThreadHeight_Standard.defaultvalue("")
gui.frmPipeOps.txtThreadHeight_Standard.controlgroup(0)
gui.frmPipeOps.txtTaper_Standard.create(textbox,"",True,1215,300,0,5845,200,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtTaper_Standard.parent("frame1")
gui.frmPipeOps.txtTaper_Standard.defaultvalue("")
gui.frmPipeOps.txtTaper_Standard.controlgroup(0)
gui.frmPipeOps.txtMinFullCrestThread_Standard.create(textbox,"",True,1590,300,0,9745,200,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtMinFullCrestThread_Standard.parent("frame1")
gui.frmPipeOps.txtMinFullCrestThread_Standard.defaultvalue("")
gui.frmPipeOps.txtMinFullCrestThread_Standard.controlgroup(0)
gui.frmPipeOps.txtLead_Standard.create(textbox,"",True,1215,300,0,8475,200,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtLead_Standard.parent("frame1")
gui.frmPipeOps.txtLead_Standard.defaultvalue("")
gui.frmPipeOps.txtLead_Standard.controlgroup(0)
gui.frmPipeOps.txtThreadPerInch_Standard.create(textbox,"",True,1215,300,0,7145,200,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtThreadPerInch_Standard.parent("frame1")
gui.frmPipeOps.txtThreadPerInch_Standard.defaultvalue("")
gui.frmPipeOps.txtThreadPerInch_Standard.controlgroup(0)
gui.frmPipeOps.txtJob6.create(textbox,"",True,1215,300,0,1200,2200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtJob6.parent("frame1")
gui.frmPipeOps.txtJob6.defaultvalue("")
gui.frmPipeOps.txtJob6.controlgroup(0)
gui.frmPipeOps.cmdSave_frmPipeOp.create(button)
gui.frmPipeOps.cmdSave_frmPipeOp.caption("Save")
gui.frmPipeOps.cmdSave_frmPipeOp.visible(True)
gui.frmPipeOps.cmdSave_frmPipeOp.size(855,375)
gui.frmPipeOps.cmdSave_frmPipeOp.zorder(0)
gui.frmPipeOps.cmdSave_frmPipeOp.position(230,6510)
gui.frmPipeOps.cmdSave_frmPipeOp.enabled(True)
gui.frmPipeOps.cmdSave_frmPipeOp.fontname("Arial")
gui.frmPipeOps.cmdSave_frmPipeOp.fontsize(8)
gui.frmPipeOps.cmdSave_frmPipeOp.event(click,cmdsave_frmpipeop_click)
gui.frmPipeOps.cmdSave_frmPipeOp.defaultvalue("")
gui.frmPipeOps.cmdSave_frmPipeOp.controlgroup(0)
gui.frmPipeOps.lbl7.create(label,"Ring Gage (Min)",True,1935,255,1,1625,0,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl7.parent("frame1")
gui.frmPipeOps.lbl7.defaultvalue("")
gui.frmPipeOps.lbl7.controlgroup(0)
gui.frmPipeOps.lbl8.create(label,"Thread Length",True,1965,255,1,3100,0,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl8.parent("frame1")
gui.frmPipeOps.lbl8.defaultvalue("")
gui.frmPipeOps.lbl8.controlgroup(0)
gui.frmPipeOps.lbl9.create(label,"Thread Height",True,1935,255,1,4445,5,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl9.parent("frame1")
gui.frmPipeOps.lbl9.defaultvalue("")
gui.frmPipeOps.lbl9.controlgroup(0)
gui.frmPipeOps.lbl10.create(label,"Taper",True,1935,255,1,5815,0,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl10.parent("frame1")
gui.frmPipeOps.lbl10.defaultvalue("")
gui.frmPipeOps.lbl10.controlgroup(0)
gui.frmPipeOps.lbl11.create(label,"Thread Per Inch",True,1935,255,1,7160,0,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl11.parent("frame1")
gui.frmPipeOps.lbl11.defaultvalue("")
gui.frmPipeOps.lbl11.controlgroup(0)
gui.frmPipeOps.lbl12.create(label,"Lead",True,1935,255,1,8515,0,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl12.parent("frame1")
gui.frmPipeOps.lbl12.defaultvalue("")
gui.frmPipeOps.lbl12.controlgroup(0)
gui.frmPipeOps.lbl13.create(label,"Min Full Crest Thread",True,1935,255,1,9805,0,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl13.parent("frame1")
gui.frmPipeOps.lbl13.defaultvalue("")
gui.frmPipeOps.lbl13.controlgroup(0)
gui.frmPipeOps.lbl14.create(label,"Thread Type",True,1935,255,1,230,20,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl14.parent("frame1")
gui.frmPipeOps.lbl14.defaultvalue("")
gui.frmPipeOps.lbl14.controlgroup(0)
gui.frmPipeOps.txtThreadLength_Act.create(textbox,"",True,1215,300,0,3100,200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtThreadLength_Act.parent("frame2")
gui.frmPipeOps.txtThreadLength_Act.event(gotfocus,txtthreadlength_act_gotfocus)
gui.frmPipeOps.txtThreadLength_Act.defaultvalue("")
gui.frmPipeOps.txtThreadLength_Act.controlgroup(0)
gui.frmPipeOps.txtThreadType_Act.create(textbox,"",True,1215,300,0,215,195,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtThreadType_Act.parent("frame2")
gui.frmPipeOps.txtThreadType_Act.defaultvalue("")
gui.frmPipeOps.txtThreadType_Act.controlgroup(0)
gui.frmPipeOps.txtRingGauge_Act.create(textbox,"",True,1215,300,0,1600,200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtRingGauge_Act.parent("frame2")
gui.frmPipeOps.txtRingGauge_Act.event(gotfocus,txtringgauge_act_gotfocus)
gui.frmPipeOps.txtRingGauge_Act.defaultvalue("")
gui.frmPipeOps.txtRingGauge_Act.controlgroup(0)
gui.frmPipeOps.txtThreadHeight_Act.create(textbox,"",True,1215,300,0,4500,200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtThreadHeight_Act.parent("frame2")
gui.frmPipeOps.txtThreadHeight_Act.event(gotfocus,txtthreadheight_act_gotfocus)
gui.frmPipeOps.txtThreadHeight_Act.defaultvalue("")
gui.frmPipeOps.txtThreadHeight_Act.controlgroup(0)
gui.frmPipeOps.txtTaper_Act.create(textbox,"",True,1215,300,0,5800,200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtTaper_Act.parent("frame2")
gui.frmPipeOps.txtTaper_Act.event(gotfocus,txttaper_act_gotfocus)
gui.frmPipeOps.txtTaper_Act.defaultvalue("")
gui.frmPipeOps.txtTaper_Act.controlgroup(0)
gui.frmPipeOps.txtMinFullCrestThread_Act.create(textbox,"",True,1590,300,0,9700,200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtMinFullCrestThread_Act.parent("frame2")
gui.frmPipeOps.txtMinFullCrestThread_Act.event(gotfocus,txtminfullcrestthread_act_gotfocus)
gui.frmPipeOps.txtMinFullCrestThread_Act.defaultvalue("")
gui.frmPipeOps.txtMinFullCrestThread_Act.controlgroup(0)
gui.frmPipeOps.txtLead_Act.create(textbox,"",True,1215,300,0,8400,200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtLead_Act.parent("frame2")
gui.frmPipeOps.txtLead_Act.event(gotfocus,txtlead_act_gotfocus)
gui.frmPipeOps.txtLead_Act.defaultvalue("")
gui.frmPipeOps.txtLead_Act.controlgroup(0)
gui.frmPipeOps.txtThreadPerInch_Act.create(textbox,"",True,1215,300,0,7100,200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtThreadPerInch_Act.parent("frame2")
gui.frmPipeOps.txtThreadPerInch_Act.numericonly(2)
gui.frmPipeOps.txtThreadPerInch_Act.event(gotfocus,txtthreadperinch_act_gotfocus)
gui.frmPipeOps.txtThreadPerInch_Act.defaultvalue("")
gui.frmPipeOps.txtThreadPerInch_Act.controlgroup(0)
gui.frmPipeOps.chkVispInsp.create(checkbox)
gui.frmPipeOps.chkVispInsp.caption("Visual Inspection")
gui.frmPipeOps.chkVispInsp.visible(True)
gui.frmPipeOps.chkVispInsp.size(1845,255)
gui.frmPipeOps.chkVispInsp.zorder(0)
gui.frmPipeOps.chkVispInsp.position(12345,5900)
gui.frmPipeOps.chkVispInsp.enabled(True)
gui.frmPipeOps.chkVispInsp.alignment(0)
gui.frmPipeOps.chkVispInsp.fontname("Arial")
gui.frmPipeOps.chkVispInsp.fontsize(8)
gui.frmPipeOps.chkVispInsp.event(click,chkvispinsp_click)
gui.frmPipeOps.chkVispInsp.defaultvalue("")
gui.frmPipeOps.chkVispInsp.controlgroup(0)
gui.frmPipeOps.txt24.create(textbox,"",True,1215,300,0,1200,2200,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txt24.parent("frame2")
gui.frmPipeOps.txt24.defaultvalue("")
gui.frmPipeOps.txt24.controlgroup(0)
gui.frmPipeOps.lbl15.create(label,"Ring Gage",True,1935,255,1,1655,-45,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl15.parent("frame2")
gui.frmPipeOps.lbl15.defaultvalue("")
gui.frmPipeOps.lbl15.controlgroup(0)
gui.frmPipeOps.lbl16.create(label,"Thread Length",True,1965,255,1,3100,-15,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl16.parent("frame2")
gui.frmPipeOps.lbl16.defaultvalue("")
gui.frmPipeOps.lbl16.controlgroup(0)
gui.frmPipeOps.lbl17.create(label,"Thread Height",True,1935,255,1,4520,-25,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl17.parent("frame2")
gui.frmPipeOps.lbl17.defaultvalue("")
gui.frmPipeOps.lbl17.controlgroup(0)
gui.frmPipeOps.lbl18.create(label,"Taper",True,1935,255,1,5800,-15,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl18.parent("frame2")
gui.frmPipeOps.lbl18.defaultvalue("")
gui.frmPipeOps.lbl18.controlgroup(0)
gui.frmPipeOps.lbl19.create(label,"Thread Per Inch",True,1935,255,1,7115,-30,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl19.parent("frame2")
gui.frmPipeOps.lbl19.defaultvalue("")
gui.frmPipeOps.lbl19.controlgroup(0)
gui.frmPipeOps.lbl20.create(label,"Lead",True,1935,255,1,8425,-30,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl20.parent("frame2")
gui.frmPipeOps.lbl20.defaultvalue("")
gui.frmPipeOps.lbl20.controlgroup(0)
gui.frmPipeOps.lbl21.create(label,"Min Full Crest Thread",True,1935,255,1,9700,-30,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl21.parent("frame2")
gui.frmPipeOps.lbl21.defaultvalue("")
gui.frmPipeOps.lbl21.controlgroup(0)
gui.frmPipeOps.lbl22.create(label,"Thread Type",True,1935,255,1,230,-25,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl22.parent("frame2")
gui.frmPipeOps.lbl22.defaultvalue("")
gui.frmPipeOps.lbl22.controlgroup(0)
gui.frmPipeOps.lbl23.create(label,"Standard",True,1935,255,1,130,4890,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl23.defaultvalue("")
gui.frmPipeOps.lbl23.controlgroup(0)
gui.frmPipeOps.lbl24.create(label,"Actual",True,1935,255,1,200,5860,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl24.defaultvalue("")
gui.frmPipeOps.lbl24.controlgroup(0)
gui.frmPipeOps.mltPartDesc.create(textboxm)
gui.frmPipeOps.mltPartDesc.text("")
gui.frmPipeOps.mltPartDesc.visible(True)
gui.frmPipeOps.mltPartDesc.size(11025,2175)
gui.frmPipeOps.mltPartDesc.zorder(0)
gui.frmPipeOps.mltPartDesc.position(150,395)
gui.frmPipeOps.mltPartDesc.enabled(True)
gui.frmPipeOps.mltPartDesc.alignment(0)
gui.frmPipeOps.mltPartDesc.fontname("Arial")
gui.frmPipeOps.mltPartDesc.fontsize(8)
gui.frmPipeOps.mltPartDesc.BackColor(-2147483643)
gui.frmPipeOps.mltPartDesc.defaultvalue("")
gui.frmPipeOps.mltPartDesc.controlgroup(0)
gui.frmPipeOps.lbl25.create(label,"Part Description",True,1935,255,1,185,130,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl25.defaultvalue("")
gui.frmPipeOps.lbl25.controlgroup(0)
gui.frmPipeOps.chkPerfPatternCHeck.create(checkbox)
gui.frmPipeOps.chkPerfPatternCHeck.caption("Perf Pattern Check")
gui.frmPipeOps.chkPerfPatternCHeck.visible(True)
gui.frmPipeOps.chkPerfPatternCHeck.size(1935,255)
gui.frmPipeOps.chkPerfPatternCHeck.zorder(0)
gui.frmPipeOps.chkPerfPatternCHeck.position(9280,2645)
gui.frmPipeOps.chkPerfPatternCHeck.enabled(True)
gui.frmPipeOps.chkPerfPatternCHeck.alignment(0)
gui.frmPipeOps.chkPerfPatternCHeck.fontname("Arial")
gui.frmPipeOps.chkPerfPatternCHeck.fontsize(8)
gui.frmPipeOps.chkPerfPatternCHeck.event(click,chkperfpatterncheck_click)
gui.frmPipeOps.chkPerfPatternCHeck.defaultvalue("")
gui.frmPipeOps.chkPerfPatternCHeck.controlgroup(0)
gui.frmPipeOps.txtRGage_Stan_Max.create(textbox,"",True,1215,300,0,2440,5185,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtRGage_Stan_Max.defaultvalue("")
gui.frmPipeOps.txtRGage_Stan_Max.controlgroup(0)
gui.frmPipeOps.lbl26.create(label,"Ring Gage (Max)",True,1935,255,1,1605,500,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl26.parent("frame1")
gui.frmPipeOps.lbl26.defaultvalue("")
gui.frmPipeOps.lbl26.controlgroup(0)
gui.frmPipeOps.chkProfGage.create(checkbox)
gui.frmPipeOps.chkProfGage.caption("Profile Gage")
gui.frmPipeOps.chkProfGage.visible(True)
gui.frmPipeOps.chkProfGage.size(1935,255)
gui.frmPipeOps.chkProfGage.zorder(0)
gui.frmPipeOps.chkProfGage.position(12345,5655)
gui.frmPipeOps.chkProfGage.enabled(True)
gui.frmPipeOps.chkProfGage.alignment(0)
gui.frmPipeOps.chkProfGage.fontname("Arial")
gui.frmPipeOps.chkProfGage.fontsize(8)
gui.frmPipeOps.chkProfGage.event(click,chkprofgage_click)
gui.frmPipeOps.chkProfGage.defaultvalue("")
gui.frmPipeOps.chkProfGage.controlgroup(0)
gui.frmPipeOps.cmdBucking.create(button)
gui.frmPipeOps.cmdBucking.caption("Bucking")
gui.frmPipeOps.cmdBucking.visible(True)
gui.frmPipeOps.cmdBucking.size(1155,480)
gui.frmPipeOps.cmdBucking.zorder(0)
gui.frmPipeOps.cmdBucking.position(9270,3860)
gui.frmPipeOps.cmdBucking.enabled(True)
gui.frmPipeOps.cmdBucking.fontname("Arial")
gui.frmPipeOps.cmdBucking.fontsize(8)
gui.frmPipeOps.cmdBucking.event(click,cmdbucking_click)
gui.frmPipeOps.cmdBucking.defaultvalue("")
gui.frmPipeOps.cmdBucking.controlgroup(0)
gui.frmPipeOps.lbl27.create(label,"Drift",True,1365,255,1,5220,4055,True,1,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl27.defaultvalue("")
gui.frmPipeOps.lbl27.controlgroup(0)
gui.frmPipeOps.txtDrift.create(textbox,"",True,1215,300,0,6725,4010,True,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtDrift.defaultvalue("")
gui.frmPipeOps.txtDrift.controlgroup(0)
gui.frmPipeOps.txtSeq.create(textbox,"",True,1020,300,0,4110,2700,False,0,Arial,8,-2147483643,1)
gui.frmPipeOps.txtSeq.defaultvalue("")
gui.frmPipeOps.txtSeq.controlgroup(0)
gui.frmPipeOps.lbl28.create(label,"Seq",True,1935,255,1,3715,2745,True,0,Arial,8,-2147483633,0)
gui.frmPipeOps.lbl28.defaultvalue("")
gui.frmPipeOps.lbl28.controlgroup(0)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.create(checkbox)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.caption("Deburr Drift Complete")
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.visible(True)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.size(1935,255)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.zorder(0)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.position(11385,3245)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.enabled(True)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.alignment(0)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.fontname("Arial")
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.fontsize(8)
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.defaultvalue("")
gui.frmPipeOps.ChkDbDrComplete_frmPipeOps.controlgroup(0)
gui.frmPipeOps.mltPartDesc.tabstop(True)
gui.frmPipeOps.mltPartDesc.tabindex(1)
gui.frmPipeOps.txtJob.tabstop(True)
gui.frmPipeOps.txtJob.tabindex(2)
gui.frmPipeOps.txtSuffix.tabstop(True)
gui.frmPipeOps.txtSuffix.tabindex(3)
gui.frmPipeOps.txtSerialNumber.tabstop(True)
gui.frmPipeOps.txtSerialNumber.tabindex(4)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.tabstop(True)
gui.frmPipeOps.cboPipeEnd_FrmPipeOp.tabindex(5)
gui.frmPipeOps.txtAMWPipeNumber.tabstop(True)
gui.frmPipeOps.txtAMWPipeNumber.tabindex(6)
gui.frmPipeOps.txtPipeCutLength.tabstop(True)
gui.frmPipeOps.txtPipeCutLength.tabindex(7)
gui.frmPipeOps.txtActualCutLength.tabstop(True)
gui.frmPipeOps.txtActualCutLength.tabindex(8)
gui.frmPipeOps.chkPerfPatternCHeck.tabstop(True)
gui.frmPipeOps.chkPerfPatternCHeck.tabindex(9)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.tabstop(True)
gui.frmPipeOps.chkPerfComplete_frmPipeOp.tabindex(10)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.tabstop(True)
gui.frmPipeOps.chkDbrrComplete_frmPipeOp.tabindex(11)
gui.frmPipeOps.chkBlowOut_frmPipeOp.tabstop(True)
gui.frmPipeOps.chkBlowOut_frmPipeOp.tabindex(12)
gui.frmPipeOps.cmdBucking.tabstop(True)
gui.frmPipeOps.cmdBucking.tabindex(13)
gui.frmPipeOps.txtThreadType_Stan.tabstop(True)
gui.frmPipeOps.txtThreadType_Stan.tabindex(14)
gui.frmPipeOps.txtThreadType_Act.tabstop(True)
gui.frmPipeOps.txtThreadType_Act.tabindex(15)
gui.frmPipeOps.txtRingGauge_Act.tabstop(True)
gui.frmPipeOps.txtRingGauge_Act.tabindex(16)
gui.frmPipeOps.txtThreadLength_Act.tabstop(True)
gui.frmPipeOps.txtThreadLength_Act.tabindex(17)
gui.frmPipeOps.txtThreadHeight_Act.tabstop(True)
gui.frmPipeOps.txtThreadHeight_Act.tabindex(18)
gui.frmPipeOps.txtTaper_Act.tabstop(True)
gui.frmPipeOps.txtTaper_Act.tabindex(19)
gui.frmPipeOps.txtThreadPerInch_Act.tabstop(True)
gui.frmPipeOps.txtThreadPerInch_Act.tabindex(20)
gui.frmPipeOps.txtLead_Act.tabstop(True)
gui.frmPipeOps.txtLead_Act.tabindex(21)
gui.frmPipeOps.txtMinFullCrestThread_Act.tabstop(True)
gui.frmPipeOps.txtMinFullCrestThread_Act.tabindex(22)
gui.frmPipeOps.chkProfGage.tabstop(True)
gui.frmPipeOps.chkProfGage.tabindex(23)
gui.frmPipeOps.chkVispInsp.tabstop(True)
gui.frmPipeOps.chkVispInsp.tabindex(24)
gui.frmPipeOps.cmdSave_frmPipeOp.tabstop(True)
gui.frmPipeOps.cmdSave_frmPipeOp.tabindex(25)
gui.frmPipeOps.txtDrift.tabstop(True)
gui.frmPipeOps.txtDrift.tabindex(128)


gui.frmComp..create
gui.frmComp..caption("Rib Wrap Saw")
gui.frmComp..size(9630,11160)
gui.frmComp..minx(0)
gui.frmComp..miny(0)
gui.frmComp..position(0,0)
gui.frmComp..event(unload,frmcomp_unload)
gui.frmComp..alwaysontop(False)
gui.frmComp..fontname("Arial")
gui.frmComp..fontsize(8)
gui.frmComp..forecolor(0)
gui.frmComp..fontstyle(,,,,)
gui.frmComp..BackColor(-2147483633)
gui.frmComp..controlbox(True)
gui.frmComp..maxbutton(False)
gui.frmComp..minbutton(True)
gui.frmComp..mousepointer(0)
gui.frmComp..moveable(True)
gui.frmComp..sizeable(False)
gui.frmComp..ShowInTaskBar(True)
gui.frmComp..titlebar(True)
gui.frmComp.frame1.create(frame)
gui.frmComp.frame1.caption("Frame")
gui.frmComp.frame1.size(11550,1710)
gui.frmComp.frame1.position(90,2920)
gui.frmComp.frame1.visible(True)
gui.frmComp.frame1.borderstyle(0)
gui.frmComp.frame1.fontname("Arial")
gui.frmComp.frame1.fontsize(8)
gui.frmComp.frame2.create(frame)
gui.frmComp.frame2.caption("Frame")
gui.frmComp.frame2.size(11565,1875)
gui.frmComp.frame2.position(115,5115)
gui.frmComp.frame2.visible(True)
gui.frmComp.frame2.borderstyle(0)
gui.frmComp.frame2.fontname("Arial")
gui.frmComp.frame2.fontsize(8)
gui.frmComp.txtMachine.create(textbox,"",True,1215,300,0,100,500,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtMachine.parent("frame2")
gui.frmComp.txtMachine.tooltip("Enter a Machine Name and tab out of the field. The defaults for the machine will be loaded if they exist.")
gui.frmComp.txtMachine.event(gotfocus,txtmachine_gotfocus)
gui.frmComp.txtMachine.event(lostfocus,txtmachine_change)
gui.frmComp.txtMachine.defaultvalue("")
gui.frmComp.txtMachine.controlgroup(0)
gui.frmComp.txtJob.create(textbox,"",True,1215,285,0,200,515,True,0,Arial,8,15724527,1)
gui.frmComp.txtJob.parent("frame1")
gui.frmComp.txtJob.defaultvalue("")
gui.frmComp.txtJob.controlgroup(0)
gui.frmComp.txtSuffix.create(textbox,"",True,660,300,0,1400,515,True,0,Arial,8,15724527,1)
gui.frmComp.txtSuffix.parent("frame1")
gui.frmComp.txtSuffix.defaultvalue("")
gui.frmComp.txtSuffix.controlgroup(0)
gui.frmComp.txtSerial.create(textbox,"",True,1605,300,0,215,1325,False,0,Arial,8,15724527,1)
gui.frmComp.txtSerial.parent("frame1")
gui.frmComp.txtSerial.defaultvalue("")
gui.frmComp.txtSerial.controlgroup(0)
gui.frmComp.txtWODesc.create(textbox,"",True,4110,300,0,3965,500,False,0,Arial,8,15724527,1)
gui.frmComp.txtWODesc.parent("frame1")
gui.frmComp.txtWODesc.defaultvalue("")
gui.frmComp.txtWODesc.controlgroup(0)
gui.frmComp.txtPL.create(textbox,"",True,660,300,0,8230,500,False,0,Arial,8,15724527,1)
gui.frmComp.txtPL.parent("frame1")
gui.frmComp.txtPL.defaultvalue("")
gui.frmComp.txtPL.controlgroup(0)
gui.frmComp.lbl1.create(label,"Seq",True,1935,255,1,2090,230,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl1.parent("frame1")
gui.frmComp.lbl1.defaultvalue("")
gui.frmComp.lbl1.controlgroup(0)
gui.frmComp.lbl2.create(label,"Serial Number",True,1935,255,1,215,1050,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl2.parent("frame1")
gui.frmComp.lbl2.defaultvalue("")
gui.frmComp.lbl2.controlgroup(0)
gui.frmComp.lbl3.create(label,"Work Order Description",True,1935,255,1,3965,200,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl3.parent("frame1")
gui.frmComp.lbl3.defaultvalue("")
gui.frmComp.lbl3.controlgroup(0)
gui.frmComp.lbl4.create(label,"Product Line",True,1890,270,1,8120,190,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl4.parent("frame1")
gui.frmComp.lbl4.defaultvalue("")
gui.frmComp.lbl4.controlgroup(0)
gui.frmComp.lbl5.create(label,"",,0,0,1,0,0,True,0,,8,0,0)
gui.frmComp.lbl5.parent("frame1")
gui.frmComp.lbl5.defaultvalue("")
gui.frmComp.lbl5.controlgroup(0)
gui.frmComp.opt1.create(option)
gui.frmComp.opt1.caption("")
gui.frmComp.opt1.visible(False)
gui.frmComp.opt1.size(345,255)
gui.frmComp.opt1.zorder(0)
gui.frmComp.opt1.position(7840,4140)
gui.frmComp.opt1.enabled(True)
gui.frmComp.opt1.alignment(0)
gui.frmComp.opt1.fontname("Arial")
gui.frmComp.opt1.fontsize(8)
gui.frmComp.opt1.defaultvalue("")
gui.frmComp.opt1.controlgroup(0)
gui.frmComp.cmdPrtLbl_frmComp.create(button)
gui.frmComp.cmdPrtLbl_frmComp.caption("Print Label")
gui.frmComp.cmdPrtLbl_frmComp.visible(True)
gui.frmComp.cmdPrtLbl_frmComp.size(1185,375)
gui.frmComp.cmdPrtLbl_frmComp.zorder(0)
gui.frmComp.cmdPrtLbl_frmComp.position(1385,10200)
gui.frmComp.cmdPrtLbl_frmComp.enabled(True)
gui.frmComp.cmdPrtLbl_frmComp.fontname("Arial")
gui.frmComp.cmdPrtLbl_frmComp.fontsize(8)
gui.frmComp.cmdPrtLbl_frmComp.event(click,cmdprtlbl_frmcomp_click)
gui.frmComp.cmdPrtLbl_frmComp.defaultvalue("")
gui.frmComp.cmdPrtLbl_frmComp.controlgroup(0)
gui.frmComp.cmdSave_FrmComp.create(button)
gui.frmComp.cmdSave_FrmComp.caption("Save")
gui.frmComp.cmdSave_FrmComp.visible(True)
gui.frmComp.cmdSave_FrmComp.size(1080,375)
gui.frmComp.cmdSave_FrmComp.zorder(0)
gui.frmComp.cmdSave_FrmComp.position(110,10185)
gui.frmComp.cmdSave_FrmComp.enabled(True)
gui.frmComp.cmdSave_FrmComp.fontname("Arial")
gui.frmComp.cmdSave_FrmComp.fontsize(8)
gui.frmComp.cmdSave_FrmComp.event(click,cmdsave_frmcomp_click)
gui.frmComp.cmdSave_FrmComp.defaultvalue("")
gui.frmComp.cmdSave_FrmComp.controlgroup(0)
gui.frmComp.lbl6.create(label,"Machine",True,1065,255,1,200,200,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl6.parent("frame2")
gui.frmComp.lbl6.defaultvalue("")
gui.frmComp.lbl6.controlgroup(0)
gui.frmComp.txtRibLength.create(textbox,"",True,1215,300,0,1300,500,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtRibLength.parent("frame2")
gui.frmComp.txtRibLength.numericonly(1)
gui.frmComp.txtRibLength.event(gotfocus,txtriblength_gotfocus)
gui.frmComp.txtRibLength.defaultvalue("0")
gui.frmComp.txtRibLength.controlgroup(0)
gui.frmComp.lbl7.create(label,"Rib Length",True,780,255,1,1390,200,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl7.parent("frame2")
gui.frmComp.lbl7.defaultvalue("")
gui.frmComp.lbl7.controlgroup(0)
gui.frmComp.txtNumberoRibs.create(textbox,"",True,1215,300,0,2515,490,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtNumberoRibs.parent("frame2")
gui.frmComp.txtNumberoRibs.numericonly(2)
gui.frmComp.txtNumberoRibs.event(gotfocus,txtnumberoribs_gotfocus)
gui.frmComp.txtNumberoRibs.defaultvalue("0")
gui.frmComp.txtNumberoRibs.controlgroup(0)
gui.frmComp.lbl8.create(label,"# Ribs",True,960,255,1,2700,200,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl8.parent("frame2")
gui.frmComp.lbl8.defaultvalue("")
gui.frmComp.lbl8.controlgroup(0)
gui.frmComp.txtRibWireAMW#.create(textbox,"",True,1215,300,0,3755,490,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtRibWireAMW#.parent("frame2")
gui.frmComp.txtRibWireAMW#.event(gotfocus,txtribwireamw#_gotfocus)
gui.frmComp.txtRibWireAMW#.defaultvalue("")
gui.frmComp.txtRibWireAMW#.controlgroup(0)
gui.frmComp.lbl9.create(label,"Rib Wire AMW#",True,1170,255,1,3800,200,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl9.parent("frame2")
gui.frmComp.lbl9.defaultvalue("")
gui.frmComp.lbl9.controlgroup(0)
gui.frmComp.txtWrapWireAMW#.create(textbox,"",True,1485,300,0,4975,490,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtWrapWireAMW#.parent("frame2")
gui.frmComp.txtWrapWireAMW#.event(gotfocus,txtwrapwireamw#_gotfocus)
gui.frmComp.txtWrapWireAMW#.defaultvalue("")
gui.frmComp.txtWrapWireAMW#.controlgroup(0)
gui.frmComp.lbl10.create(label,"Wrap Wire AMW#",True,1410,255,1,5060,185,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl10.parent("frame2")
gui.frmComp.lbl10.defaultvalue("")
gui.frmComp.lbl10.controlgroup(0)
gui.frmComp.txtRPM.create(textbox,"",True,1215,285,0,100,1400,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtRPM.parent("frame2")
gui.frmComp.txtRPM.numericonly(1)
gui.frmComp.txtRPM.event(gotfocus,txtrpm_gotfocus)
gui.frmComp.txtRPM.defaultvalue("0")
gui.frmComp.txtRPM.controlgroup(0)
gui.frmComp.lbl11.create(label,"RPM",True,1095,255,1,145,1100,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl11.parent("frame2")
gui.frmComp.lbl11.defaultvalue("")
gui.frmComp.lbl11.controlgroup(0)
gui.frmComp.txtHeatControl.create(textbox,"",True,1215,300,0,1360,1390,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtHeatControl.parent("frame2")
gui.frmComp.txtHeatControl.event(gotfocus,txtheatcontrol_gotfocus)
gui.frmComp.txtHeatControl.defaultvalue("")
gui.frmComp.txtHeatControl.controlgroup(0)
gui.frmComp.txtComputer.create(textbox,"",True,1215,300,0,2615,1400,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtComputer.parent("frame2")
gui.frmComp.txtComputer.event(gotfocus,txtcomputer_gotfocus)
gui.frmComp.txtComputer.defaultvalue("")
gui.frmComp.txtComputer.controlgroup(0)
gui.frmComp.txtTransformer.create(textbox,"",True,1215,300,0,3815,1390,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtTransformer.parent("frame2")
gui.frmComp.txtTransformer.event(gotfocus,txttransformer_gotfocus)
gui.frmComp.txtTransformer.defaultvalue("")
gui.frmComp.txtTransformer.controlgroup(0)
gui.frmComp.txtArmWeight.create(textbox,"",True,1215,300,0,5045,1390,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtArmWeight.parent("frame2")
gui.frmComp.txtArmWeight.event(gotfocus,txtarmweight_gotfocus)
gui.frmComp.txtArmWeight.defaultvalue("")
gui.frmComp.txtArmWeight.controlgroup(0)
gui.frmComp.txtAmps.create(textbox,"",True,1215,300,0,6260,1400,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtAmps.parent("frame2")
gui.frmComp.txtAmps.numericonly(1)
gui.frmComp.txtAmps.event(gotfocus,txtamps_gotfocus)
gui.frmComp.txtAmps.defaultvalue("0")
gui.frmComp.txtAmps.controlgroup(0)
gui.frmComp.txtVolts.create(textbox,"",True,1215,300,0,7475,1400,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtVolts.parent("frame2")
gui.frmComp.txtVolts.numericonly(1)
gui.frmComp.txtVolts.event(gotfocus,txtvolts_gotfocus)
gui.frmComp.txtVolts.defaultvalue("0")
gui.frmComp.txtVolts.controlgroup(0)
gui.frmComp.lbl12.create(label,"Heat Control",True,1050,255,1,1460,1100,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl12.parent("frame2")
gui.frmComp.lbl12.defaultvalue("")
gui.frmComp.lbl12.controlgroup(0)
gui.frmComp.lbl13.create(label,"Computer",True,945,255,1,2735,1115,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl13.parent("frame2")
gui.frmComp.lbl13.defaultvalue("")
gui.frmComp.lbl13.controlgroup(0)
gui.frmComp.lbl14.create(label,"Transformer",True,1035,255,1,3890,1130,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl14.parent("frame2")
gui.frmComp.lbl14.defaultvalue("")
gui.frmComp.lbl14.controlgroup(0)
gui.frmComp.lbl15.create(label,"Arm Weight",True,975,255,1,5115,1130,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl15.parent("frame2")
gui.frmComp.lbl15.defaultvalue("")
gui.frmComp.lbl15.controlgroup(0)
gui.frmComp.lbl16.create(label,"Amps",True,945,255,1,6345,1130,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl16.parent("frame2")
gui.frmComp.lbl16.defaultvalue("")
gui.frmComp.lbl16.controlgroup(0)
gui.frmComp.lbl17.create(label,"Volts",True,870,255,1,7560,1145,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl17.parent("frame2")
gui.frmComp.lbl17.defaultvalue("")
gui.frmComp.lbl17.controlgroup(0)
gui.frmComp.txtActCutLength.create(textbox,"",True,1665,300,0,6490,500,True,0,Arial,8,-2147483643,1)
gui.frmComp.txtActCutLength.parent("frame2")
gui.frmComp.txtActCutLength.numericonly(1)
gui.frmComp.txtActCutLength.tooltip("Actual Screen Cut Length")
gui.frmComp.txtActCutLength.event(gotfocus,txtactcutlength_gotfocus)
gui.frmComp.txtActCutLength.defaultvalue("0")
gui.frmComp.txtActCutLength.controlgroup(0)
gui.frmComp.lbl18.create(label,"Act. Scr. Cut Length",True,1665,255,1,6545,185,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl18.parent("frame2")
gui.frmComp.lbl18.tooltip("Actual Screen Cut Length")
gui.frmComp.lbl18.defaultvalue("")
gui.frmComp.lbl18.controlgroup(0)
gui.frmComp.txtScreenCutLength.create(textbox,"",True,1665,300,0,6610,4985,False,0,Arial,8,15724527,1)
gui.frmComp.txtScreenCutLength.defaultvalue("")
gui.frmComp.txtScreenCutLength.controlgroup(0)
gui.frmComp.lbl19.create(label,"Screen Cut Length (Inches)",True,2115,255,1,6615,4730,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl19.defaultvalue("")
gui.frmComp.lbl19.controlgroup(0)
gui.frmComp.opt2.create(option)
gui.frmComp.opt2.caption("")
gui.frmComp.opt2.visible(False)
gui.frmComp.opt2.size(255,255)
gui.frmComp.opt2.zorder(0)
gui.frmComp.opt2.position(7650,4155)
gui.frmComp.opt2.enabled(True)
gui.frmComp.opt2.alignment(0)
gui.frmComp.opt2.fontname("Arial")
gui.frmComp.opt2.fontsize(8)
gui.frmComp.opt2.defaultvalue("")
gui.frmComp.opt2.controlgroup(0)
gui.frmComp.ddlScreenID.create(dropdownlist)
gui.frmComp.ddlScreenID.visible(True)
gui.frmComp.ddlScreenID.size(1755,330)
gui.frmComp.ddlScreenID.zorder(0)
gui.frmComp.ddlScreenID.position(2015,1290)
gui.frmComp.ddlScreenID.enabled(True)
gui.frmComp.ddlScreenID.parent("frame1")
gui.frmComp.ddlScreenID.fontname("Arial")
gui.frmComp.ddlScreenID.fontsize(8)
gui.frmComp.ddlScreenID.event(click,ddlscreenid_click)
gui.frmComp.ddlScreenID.defaultvalue("")
gui.frmComp.ddlScreenID.controlgroup(0)
gui.frmComp.lbl20.create(label,"Screen",True,1935,255,1,2015,1045,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl20.parent("frame1")
gui.frmComp.lbl20.defaultvalue("")
gui.frmComp.lbl20.controlgroup(0)
gui.frmComp.mltPartDesc.create(textboxm)
gui.frmComp.mltPartDesc.text("")
gui.frmComp.mltPartDesc.visible(True)
gui.frmComp.mltPartDesc.size(9090,2325)
gui.frmComp.mltPartDesc.zorder(0)
gui.frmComp.mltPartDesc.position(100,375)
gui.frmComp.mltPartDesc.enabled(True)
gui.frmComp.mltPartDesc.alignment(0)
gui.frmComp.mltPartDesc.fontname("Arial")
gui.frmComp.mltPartDesc.fontsize(8)
gui.frmComp.mltPartDesc.BackColor(-2147483643)
gui.frmComp.mltPartDesc.defaultvalue("")
gui.frmComp.mltPartDesc.controlgroup(0)
gui.frmComp.lbl21.create(label,"Part Description",True,1935,240,1,190,105,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl21.defaultvalue("")
gui.frmComp.lbl21.controlgroup(0)
gui.frmComp.lbl23.create(label,"Measured From",True,1935,255,1,3945,1070,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl23.parent("frame1")
gui.frmComp.lbl23.defaultvalue("")
gui.frmComp.lbl23.controlgroup(0)
gui.frmComp.txtMeasuredFrom.create(textbox,"",True,1980,300,0,3915,1285,False,0,Arial,8,-2147483643,1)
gui.frmComp.txtMeasuredFrom.parent("frame1")
gui.frmComp.txtMeasuredFrom.defaultvalue("")
gui.frmComp.txtMeasuredFrom.controlgroup(0)
gui.frmComp.gsfgScreens.create(gsflexgrid)
gui.frmComp.gsfgScreens.FixedRows(0)
gui.frmComp.gsfgScreens.FixedCols(0)
gui.frmComp.gsfgScreens.visible(True)
gui.frmComp.gsfgScreens.size(8685,2745)
gui.frmComp.gsfgScreens.zorder(0)
gui.frmComp.gsfgScreens.position(120,7390)
gui.frmComp.gsfgScreens.enabled(True)
gui.frmComp.cmd_saveMachComp.create(button)
gui.frmComp.cmd_saveMachComp.caption("Save Machine Settings")
gui.frmComp.cmd_saveMachComp.visible(True)
gui.frmComp.cmd_saveMachComp.size(1965,405)
gui.frmComp.cmd_saveMachComp.zorder(0)
gui.frmComp.cmd_saveMachComp.position(200,4725)
gui.frmComp.cmd_saveMachComp.enabled(True)
gui.frmComp.cmd_saveMachComp.fontname("Arial")
gui.frmComp.cmd_saveMachComp.fontsize(8)
gui.frmComp.cmd_saveMachComp.event(click,cmd_savemachcomp_click)
gui.frmComp.cmd_saveMachComp.defaultvalue("")
gui.frmComp.cmd_saveMachComp.controlgroup(0)
gui.frmComp.lblMSettings.create(label,"",True,3420,255,1,2315,4835,True,0,Arial,8,-2147483633,0)
gui.frmComp.lblMSettings.defaultvalue("")
gui.frmComp.lblMSettings.controlgroup(0)
gui.frmComp.txtSeq.create(textbox,"",True,1035,285,0,2100,500,True,0,Arial,8,15724527,1)
gui.frmComp.txtSeq.parent("frame1")
gui.frmComp.txtSeq.defaultvalue("")
gui.frmComp.txtSeq.controlgroup(0)
gui.frmComp.lbl24.create(label,"Job - Suffix",True,1935,255,1,200,245,True,0,Arial,8,-2147483633,0)
gui.frmComp.lbl24.parent("frame1")
gui.frmComp.lbl24.defaultvalue("")
gui.frmComp.lbl24.controlgroup(0)
gui.frmComp.chkScrChk.create(checkbox)
gui.frmComp.chkScrChk.caption("Screen Drift Complete")
gui.frmComp.chkScrChk.visible(True)
gui.frmComp.chkScrChk.size(2115,255)
gui.frmComp.chkScrChk.zorder(0)
gui.frmComp.chkScrChk.position(290,7000)
gui.frmComp.chkScrChk.enabled(True)
gui.frmComp.chkScrChk.alignment(0)
gui.frmComp.chkScrChk.fontname("Arial")
gui.frmComp.chkScrChk.fontsize(8)
gui.frmComp.chkScrChk.defaultvalue("")
gui.frmComp.chkScrChk.controlgroup(0)
gui.frmComp.ddlScreenID.tabstop(True)
gui.frmComp.ddlScreenID.tabindex(1)
gui.frmComp.txtMachine.tabstop(True)
gui.frmComp.txtMachine.tabindex(2)
gui.frmComp.txtRibLength.tabstop(True)
gui.frmComp.txtRibLength.tabindex(3)
gui.frmComp.txtNumberoRibs.tabstop(True)
gui.frmComp.txtNumberoRibs.tabindex(4)
gui.frmComp.txtRibWireAMW#.tabstop(True)
gui.frmComp.txtRibWireAMW#.tabindex(5)
gui.frmComp.txtWrapWireAMW#.tabstop(True)
gui.frmComp.txtWrapWireAMW#.tabindex(6)
gui.frmComp.txtActCutLength.tabstop(True)
gui.frmComp.txtActCutLength.tabindex(7)
gui.frmComp.txtRPM.tabstop(True)
gui.frmComp.txtRPM.tabindex(8)
gui.frmComp.txtHeatControl.tabstop(True)
gui.frmComp.txtHeatControl.tabindex(9)
gui.frmComp.txtComputer.tabstop(True)
gui.frmComp.txtComputer.tabindex(10)
gui.frmComp.txtTransformer.tabstop(True)
gui.frmComp.txtTransformer.tabindex(11)
gui.frmComp.txtArmWeight.tabstop(True)
gui.frmComp.txtArmWeight.tabindex(12)
gui.frmComp.txtAmps.tabstop(True)
gui.frmComp.txtAmps.tabindex(13)
gui.frmComp.txtVolts.tabstop(True)
gui.frmComp.txtVolts.tabindex(14)
gui.frmComp.cmdSave_FrmComp.tabstop(True)
gui.frmComp.cmdSave_FrmComp.tabindex(15)
gui.frmComp.cmdPrtLbl_frmComp.tabstop(True)
gui.frmComp.cmdPrtLbl_frmComp.tabindex(16)


gui.frmMain..create
gui.frmMain..caption("Pipe Screen Config.")
gui.frmMain..size(4260,3780)
gui.frmMain..minx(0)
gui.frmMain..miny(0)
gui.frmMain..position(0,0)
gui.frmMain..event(unload,frmmain_unload)
gui.frmMain..alwaysontop(False)
gui.frmMain..fontname("Arial")
gui.frmMain..fontsize(8)
gui.frmMain..forecolor(0)
gui.frmMain..fontstyle(,,,,)
gui.frmMain..BackColor(-2147483633)
gui.frmMain..controlbox(True)
gui.frmMain..maxbutton(False)
gui.frmMain..minbutton(True)
gui.frmMain..mousepointer(0)
gui.frmMain..moveable(True)
gui.frmMain..sizeable(False)
gui.frmMain..ShowInTaskBar(True)
gui.frmMain..titlebar(True)
gui.frmMain.lbl1.create(label,"Job - Suffix",True,1035,255,1,-55,405,True,1,Arial,8,-2147483633,0)
gui.frmMain.lbl1.defaultvalue("")
gui.frmMain.lbl1.controlgroup(0)
gui.frmMain.txtJob_Main.create(textbox,"",True,1215,300,0,1175,365,False,0,Arial,8,-2147483643,1)
gui.frmMain.txtJob_Main.event(change,jobh_change)
gui.frmMain.txtJob_Main.maxLength(6)
gui.frmMain.txtJob_Main.defaultvalue("")
gui.frmMain.txtJob_Main.controlgroup(0)
gui.frmMain.txtSuffix_Main.create(textbox,"",True,690,300,0,2445,355,False,0,Arial,8,-2147483643,1)
gui.frmMain.txtSuffix_Main.maxLength(3)
gui.frmMain.txtSuffix_Main.defaultvalue("")
gui.frmMain.txtSuffix_Main.controlgroup(0)
gui.frmMain.lbl2.create(label,"Serial Number",True,1035,255,1,95,1715,True,1,Arial,8,-2147483633,0)
gui.frmMain.lbl2.defaultvalue("")
gui.frmMain.lbl2.controlgroup(0)
gui.frmMain.txtSerial_Main.create(textbox,"",True,1935,300,0,1190,1680,True,0,Arial,8,-2147483643,1)
gui.frmMain.txtSerial_Main.defaultvalue("")
gui.frmMain.txtSerial_Main.controlgroup(0)
gui.frmMain.lbl3.create(label,"Form",True,1035,255,1,95,2300,True,1,Arial,8,-2147483633,0)
gui.frmMain.lbl3.defaultvalue("")
gui.frmMain.lbl3.controlgroup(0)
gui.frmMain.cboForm_Main.create(combobox)
gui.frmMain.cboForm_Main.text("")
gui.frmMain.cboForm_Main.visible(True)
gui.frmMain.cboForm_Main.size(2100,330)
gui.frmMain.cboForm_Main.zorder(0)
gui.frmMain.cboForm_Main.position(1180,2225)
gui.frmMain.cboForm_Main.enabled(True)
gui.frmMain.cboForm_Main.fontname("Arial")
gui.frmMain.cboForm_Main.fontsize(8)
gui.frmMain.cboForm_Main.defaultvalue("")
gui.frmMain.cboForm_Main.controlgroup(0)
gui.frmMain.cmdMain_Continue.create(button)
gui.frmMain.cmdMain_Continue.caption("Continue")
gui.frmMain.cmdMain_Continue.visible(True)
gui.frmMain.cmdMain_Continue.size(1080,375)
gui.frmMain.cmdMain_Continue.zorder(0)
gui.frmMain.cmdMain_Continue.position(1400,2725)
gui.frmMain.cmdMain_Continue.enabled(True)
gui.frmMain.cmdMain_Continue.fontname("Arial")
gui.frmMain.cmdMain_Continue.fontsize(8)
gui.frmMain.cmdMain_Continue.event(click,cmdmain_continue_click)
gui.frmMain.cmdMain_Continue.defaultvalue("")
gui.frmMain.cmdMain_Continue.controlgroup(0)
gui.frmMain.cmdSerial.create(button)
gui.frmMain.cmdSerial.caption("^")
gui.frmMain.cmdSerial.visible(True)
gui.frmMain.cmdSerial.size(405,375)
gui.frmMain.cmdSerial.zorder(0)
gui.frmMain.cmdSerial.position(3200,1650)
gui.frmMain.cmdSerial.enabled(True)
gui.frmMain.cmdSerial.fontname("Arial")
gui.frmMain.cmdSerial.fontsize(8)
gui.frmMain.cmdSerial.event(click,cmdserial_click)
gui.frmMain.cmdSerial.defaultvalue("")
gui.frmMain.cmdSerial.controlgroup(0)
gui.frmMain.lbl4.create(label,"Sequence",True,990,255,1,145,1000,True,0,Arial,8,-2147483633,0)
gui.frmMain.lbl4.defaultvalue("")
gui.frmMain.lbl4.controlgroup(0)
gui.frmMain.txtSeq.create(textbox,"",True,1935,300,0,1190,990,False,0,Arial,8,-2147483643,1)
gui.frmMain.txtSeq.defaultvalue("")
gui.frmMain.txtSeq.controlgroup(0)
gui.frmMain.txtJob_Main.tabstop(True)
gui.frmMain.txtJob_Main.tabindex(1)
gui.frmMain.txtSuffix_Main.tabstop(True)
gui.frmMain.txtSuffix_Main.tabindex(2)
gui.frmMain.txtSerial_Main.tabstop(True)
gui.frmMain.txtSerial_Main.tabindex(3)
gui.frmMain.cboForm_Main.tabstop(True)
gui.frmMain.cboForm_Main.tabindex(4)
gui.frmMain.cmdMain_Continue.tabstop(True)
gui.frmMain.cmdMain_Continue.tabindex(5)


gui.frmBucking..create
gui.frmBucking..caption("Bucking")
gui.frmBucking..size(2370,3390)
gui.frmBucking..minx(0)
gui.frmBucking..miny(0)
gui.frmBucking..position(0,0)
gui.frmBucking..event(unload,frmbucking_unload)
gui.frmBucking..alwaysontop(True)
gui.frmBucking..fontname("Arial")
gui.frmBucking..fontsize(8)
gui.frmBucking..forecolor(0)
gui.frmBucking..fontstyle(,,,,)
gui.frmBucking..BackColor(-2147483633)
gui.frmBucking..controlbox(True)
gui.frmBucking..maxbutton(False)
gui.frmBucking..minbutton(False)
gui.frmBucking..mousepointer(0)
gui.frmBucking..moveable(True)
gui.frmBucking..sizeable(False)
gui.frmBucking..ShowInTaskBar(True)
gui.frmBucking..titlebar(True)
gui.frmBucking.txtAMW_Bucking.create(textbox,"",True,1740,300,0,85,305,True,0,Arial,8,-2147483643,1)
gui.frmBucking.txtAMW_Bucking.event(change,txtamw_bucking_change)
gui.frmBucking.txtAMW_Bucking.event(lostfocus,txtamw_bucking_change)
gui.frmBucking.txtAMW_Bucking.defaultvalue("")
gui.frmBucking.txtAMW_Bucking.controlgroup(0)
gui.frmBucking.txtHeat_Bucking.create(textbox,"",True,1740,300,0,100,900,True,0,Arial,8,-2147483643,1)
gui.frmBucking.txtHeat_Bucking.defaultvalue("")
gui.frmBucking.txtHeat_Bucking.controlgroup(0)
gui.frmBucking.txtActTorqVal.create(textbox,"",True,1740,300,0,100,1465,True,0,Arial,8,-2147483643,1)
gui.frmBucking.txtActTorqVal.numericonly(1)
gui.frmBucking.txtActTorqVal.defaultvalue("")
gui.frmBucking.txtActTorqVal.controlgroup(0)
gui.frmBucking.lbl1.create(label,"AMW #",True,1935,255,1,100,110,True,0,Arial,8,-2147483633,0)
gui.frmBucking.lbl1.defaultvalue("")
gui.frmBucking.lbl1.controlgroup(0)
gui.frmBucking.lbl2.create(label,"Heat Number",True,1935,255,1,100,700,True,0,Arial,8,-2147483633,0)
gui.frmBucking.lbl2.defaultvalue("")
gui.frmBucking.lbl2.controlgroup(0)
gui.frmBucking.lbl3.create(label,"Actual Torque Value",True,1935,255,1,100,1270,True,0,Arial,8,-2147483633,0)
gui.frmBucking.lbl3.defaultvalue("")
gui.frmBucking.lbl3.controlgroup(0)
gui.frmBucking.cmdSave_Bucking.create(button)
gui.frmBucking.cmdSave_Bucking.caption("Save")
gui.frmBucking.cmdSave_Bucking.visible(True)
gui.frmBucking.cmdSave_Bucking.size(855,375)
gui.frmBucking.cmdSave_Bucking.zorder(0)
gui.frmBucking.cmdSave_Bucking.position(115,2375)
gui.frmBucking.cmdSave_Bucking.enabled(True)
gui.frmBucking.cmdSave_Bucking.fontname("Arial")
gui.frmBucking.cmdSave_Bucking.fontsize(8)
gui.frmBucking.cmdSave_Bucking.event(click,cmdsave_bucking_click)
gui.frmBucking.cmdSave_Bucking.defaultvalue("")
gui.frmBucking.cmdSave_Bucking.controlgroup(0)
gui.frmBucking.chkBkDr.create(checkbox)
gui.frmBucking.chkBkDr.caption("Bucking Drift Complete")
gui.frmBucking.chkBkDr.visible(True)
gui.frmBucking.chkBkDr.size(1755,375)
gui.frmBucking.chkBkDr.zorder(0)
gui.frmBucking.chkBkDr.position(130,1900)
gui.frmBucking.chkBkDr.enabled(True)
gui.frmBucking.chkBkDr.alignment(0)
gui.frmBucking.chkBkDr.fontname("Arial")
gui.frmBucking.chkBkDr.fontsize(8)
gui.frmBucking.chkBkDr.defaultvalue("")
gui.frmBucking.chkBkDr.controlgroup(0)
gui.frmBucking.txtAMW_Bucking.tabstop(True)
gui.frmBucking.txtAMW_Bucking.tabindex(1)
gui.frmBucking.txtHeat_Bucking.tabstop(True)
gui.frmBucking.txtHeat_Bucking.tabindex(2)
gui.frmBucking.txtActTorqVal.tabstop(True)
gui.frmBucking.txtActTorqVal.tabindex(3)
gui.frmBucking.cmdSave_Bucking.tabstop(True)
gui.frmBucking.cmdSave_Bucking.tabindex(5)


Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start


Variable.Global.sJob.Declare(String)
Variable.Global.sSuffix.Declare(String)
Variable.Global.sSerial.Declare(String)
Variable.UDT.uScreenComp.Define("Comp_ID",String,Comp_ID)
Variable.Global.bNewComp.Declare(Boolean,True)
Variable.uGlobal.uScreenComp.Declare("uScreenComp")
Variable.Global.sFGPart.Declare(String)
Variable.Global.sPartDesc.Declare(String)

Variable.UDT.uSections.Define("Section",Long,Section)
Variable.UDT.uSections.Define("FGPart",String,Part)
Variable.UDT.uSections.Define("Length",String,Length)
Variable.UDT.uSections.Define("PerfLength",Float,Perf_Length)
Variable.UDT.uSections.Define("SlotSize",Float,Slot_Size)
Variable.UDT.uSections.Define("Type",String,Type)
Variable.UDT.uSections.Define("Suffix",String)
Variable.UDT.uSections.Define("Job",String)
Variable.UDT.uSections.Define("Serial",String)
Variable.UDT.uSections.Define("Act_Perf_Length",Float)
Variable.UDT.uSections.Define("Act_Sec_Length",Float)
Variable.UDT.uSections.Define("STANDARD_SECTION",Long)
Variable.UDT.uSections.Define("Seq",String)
Variable.uGlobal.uSections.Declare("uSections")
Variable.Global.bRod.Declare(Boolean,False)
Variable.Global.sSeq.Declare(String)
Variable.Global.sEmpID.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sType.Declare(String)

'original Qte: 5581
'log sheets part 1
'by trt


'vrs Date: 10-13-14
'Qte  6157
'by trt

'vrs date: 12/15/14
'quote 6390 and quote 6401 changes
'by trt

'

'mod 1/19/16
'Pipe Layout: Remove the Key of PipeNo we only need Job Suffix and Serial.
'they need to be able to edit line and it keeps with same serrial number


'3/11/16'
'TRT
'ALL300-3420160753-3


'3/15/16
'User needs to be Employee ID
'Employee ID is Passed Variable 009993

'3/17/16
'Turns out that each sequence doesn't use each screen as originally understood
'what happens now is that 1 sequence uses this screen
'other sequences use other screens. So now we have history tables to keep what was previously enetered from sequences.



F.Intrinsic.Control.If(V.Caller.Hook,=,15840)
	'pop hook of GUI.
	V.Passed.000049.Set("Log Sheets Pt 1")
F.Intrinsic.Control.Elseif(V.Caller.Hook,=,15860)
	'most likely goingt to be reading somethign here.
	F.ODBC.Connection!conX.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)
	'pop combo box, y do this? I thought it was for certain job number?
	Gui.frmMain.cboForm_Main.AddItem("Pipe Layout",0)
	Gui.frmMain.cboForm_Main.AddItem("Pipe Operations",1)
	Gui.frmMain.cboForm_Main.AddItem("Rib Wrap Saw",2)
	'read job information and set to global variables as well as screen.
'	'locked all 3 description boxes. where they can view it and scoll ust not change it
	Gui.frmPipeLayout.mltPartDesc.Locked(True)
	Gui.frmPipeOps.mltPartDesc.Locked(true)
	Gui.frmComp.mltPartDesc.Locked(True)

'
	V.Global.sJob.Set(V.Passed.009990)
	V.Global.sSuffix.Set(V.Passed.009991)
	V.Global.sSeq.Set(V.Passed.000005)
	F.Intrinsic.String.LPad(V.Global.sSeq,"0","6",V.Global.sSeq)
	
	'is it rod or pipe based?
	F.Intrinsic.Control.CallSub(Rod_pipe)
	'get employee ID
	V.Global.sEmpID.Set(V.Passed.009993)

F.Intrinsic.Control.BlockEvents
	Gui.frmMain.txtJob_Main.Text(V.Global.sJob.Trim)
	Gui.frmMain.txtSuffix_Main.Text(V.Global.sSuffix.Trim)
	Gui.frmMain.txtSeq.Text(V.Global.sSeq)
F.Intrinsic.Control.UnBlockEvents
	Gui.frmMain..show
	Gui.frmMain.txtSerial_Main.SetFocus
F.Intrinsic.Control.Else
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf



Program.Sub.Main.End

program.sub.jobh_change.start
F.Intrinsic.Control.SetErrorHandler("jobh_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sSuf.Declare(String)
V.Local.sSerial.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSort.Declare(String)
V.Local.bRet.Declare(Boolean)
V.Local.sNoPipe.Declare(String)
V.Local.sRouter.Declare(String)

V.Local.sNoPipe.Set("RBS*!*DSPP*!*TELESCOPE*!*ES*!*DP")

V.Local.sJob.Set(V.Screen.frmMain!txtJob_Main.Text)
V.Local.sSuf.Set(V.Screen.frmMain!txtSuffix_Main.Text)

'they changed the job information on the main form job number
F.Intrinsic.String.Build("Select Router From V_Job_header Where Job = '{0}' And Suffix = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)


	Gui.frmMain.cboForm_Main.ClearItems
	V.Local.sRouter.Set(V.ODBC.conX!rst.FieldValTrim!Router)
	F.Intrinsic.String.Build("Select Sort_1 From V_Router_Header Where Router = '{0}'",v.Local.sRouter.Trim,v.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstRTR",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rstRTR.EOF,<>,True)
		V.Local.sSort.Set(V.ODBC.conX!rstRTR.FieldValTrim!Sort_1)
		F.Intrinsic.String.IsInString(V.local.sNoPipe,V.Local.sSort,True,V.Local.bRet)
		F.Intrinsic.Control.If(V.Local.bRet,=,True)
			'load for our pipes screens add pipe layout pipe operations and screen components
			Gui.frmMain.cboForm_Main.AddItem("Pipe Layout")
			Gui.frmMain.cboForm_Main.AddItem("Pipe Operations")
			Gui.frmMain.cboForm_Main.AddItem("Rib Wrap Saw")
		F.Intrinsic.Control.Else
			Gui.frmMain.cboForm_Main.AddItem("Rib Wrap Saw")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rstRTR.close
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("jobh_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.jobh_change.End

program.sub.pipenum_change.start
F.Intrinsic.Control.SetErrorHandler("pipenum_change_Err")
F.Intrinsic.Control.ClearErrors

'PIPE LAYOUT SCREEN
'when scanning in the amw pipe number the qty on hand value  from inv master will be loaded into the pipe current legnth field.
'inventory part being the finished good part on the work order.
V.Local.sSQL.Declare(String)
V.Local.sAMWPipeNo.Declare(String)
V.Local.sError.Declare(String)
V.Local.fPipeLength.Declare(Float)

F.Intrinsic.Control.BlockEvents
Gui.frmPipeLayout.txtPipeCurLength_frmPLay.Enabled(False)

V.Local.sAMWPipeNo.Set(V.Screen.frmPipeLayout!txtPipNo_frmPLay.Text)
F.Intrinsic.Control.If(V.Local.sAMWPipeNo.Trim,<>,"")
	'grab qty on hand from inventory master based on the fg part global variable(fg part on the work order0
	F.Intrinsic.String.Build("Select SUM(Quantity) AS Quantity From Item_History Where job = '{1}' and Quantity <> 0 And Lot ='{0}' and Code_Transaction = 'J55'",V.Local.sAMWPipeNo.trim,V.global.sjob,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("Rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,False)
		V.Local.fPipeLength.Set(V.ODBC.conX!rst.FieldValTrim!Quantity)
		F.Intrinsic.Control.If(V.Local.fPipeLength,<,0)
			F.Intrinsic.Math.Mult(V.Local.fPipeLength,-1,V.Local.fPipeLength)
		F.Intrinsic.Control.EndIf
		'set our pipe current length field on our screen from the return
		Gui.frmPipeLayout.txtPipeCurLength_frmPLay.Text(V.Local.fPipeLength)
	F.Intrinsic.Control.Else
		Gui.frmPipeLayout.txtPipeCurLength_frmPlay.Text("")
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rst.Close
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.txtPipeCurLength_frmPLay.Text("")
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("pipenum_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.pipenum_change.End

Program.Sub.Unload.Start
F.Intrinsic.Control.SetErrorHandler("Unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.ODBC.Connection!conX.Close

F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.Unload.End

program.sub.cmdmain_continue_click.start
F.Intrinsic.Control.SetErrorHandler("cmdmain_continue_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)


F.Intrinsic.Control.If(V.Screen.frmMain!cboForm_Main.Text,<>,"")
	V.Global.sJob.Set(V.Screen.frmMain!txtJob_Main.Text)
	V.Global.sSuffix.Set(V.Screen.frmMain!txtSuffix_Main.Text)
	V.Global.sSerial.Set(V.Screen.frmMain!txtSerial_Main.Text)
	'grab description for global variable
	F.Intrinsic.Control.If(V.Global.sSerial.Trim,=,"")
		Gui.frmMain.txtSerial_Main.SetFocus
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	Gui.frmMain..Visible(false)
	'grab fg part from work order header. going to be useful in all other screens.
	F.Intrinsic.String.Build("Select Part From V_Job_Header Where Job = '{0}' And Suffix = '{1}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,False)
		V.Global.sFGPart.Set(V.ODBC.conX!rst.FieldValTrim!Part)
		'grab desc from config to	
		F.Intrinsic.Control.CallSub(Get_desc)
		F.Intrinsic.Control.If(V.Global.sPartDesc.Trim,<>,"")
			Gui.frmComp.mltPartDesc.Text(V.Global.sPartDesc)
			Gui.frmPipeLayout.mltPartDesc.Text(V.Global.sPartDesc)
			Gui.frmPipeOps.mltPartDesc.Text(V.Global.sPartDesc)
		F.Intrinsic.Control.Else
			V.Global.sPartDesc.Set("")
			Gui.frmComp.mltPartDesc.Text(V.Global.sPartDesc)
			Gui.frmPipeLayout.mltPartDesc.Text(V.Global.sPartDesc)
			Gui.frmPipeOps.mltPartDesc.Text(V.Global.sPartDesc)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		V.Global.sFGPart.Set("")
		Gui.frmComp.mltPartDesc.Text(V.Global.sPartDesc)
		Gui.frmPipeLayout.mltPartDesc.Text(V.Global.sPartDesc)
		Gui.frmPipeOps.mltPartDesc.Text(V.Global.sPartDesc)
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rst.Close
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmMain!cboForm_Main.Text.Trim)
		F.Intrinsic.Control.Case("Pipe Layout")
			'populate pipe layout form
			F.Intrinsic.Control.CallSub(Pop_frmpipelayout)
			Gui.frmPipeLayout..show
		F.Intrinsic.Control.Case("Pipe Operations")
			F.Intrinsic.Control.CallSub(Pop_frmpipeops)
			Gui.frmPipeOps..Show
		F.Intrinsic.Control.Case("Rib Wrap Saw")
			F.Intrinsic.Control.CallSub(Pop_frmscreencomp)
			F.Intrinsic.Control.If(V.Global.bRod,=,True)
				Gui.frmComp.cmdSave_FrmComp.SetFocus
			F.Intrinsic.Control.EndIf
			Gui.frmComp..Show
		F.Intrinsic.Control.CaseElse
			Gui.frmMain..Show
			F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdmain_continue_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdmain_continue_click.End

program.sub.frmmain_unload.start
F.Intrinsic.Control.SetErrorHandler("frmmain_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.Intrinsic.Control.CallSub(Unload)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("frmmain_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.frmmain_unload.End

program.sub.txtserial_main_change.start


program.sub.txtserial_main_change.End

program.sub.frmcomp_unload.start
F.Intrinsic.Control.SetErrorHandler("frmcomp_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Screen component screen
Gui.frmComp..Visible(false)
Gui.frmMain..Show

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("frmcomp_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.frmcomp_unload.End

program.sub.txtsuffix_main_change.start
F.Intrinsic.Control.SetErrorHandler("txtsuffix_main_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sSuf.Declare(String)
V.Local.sSerial.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSort.Declare(String)
V.Local.bRet.Declare(Boolean)
V.Local.sNoPipe.Declare(String)
V.Local.sRouter.Declare(String)

F.Intrinsic.Control.BlockEvents

V.Local.sNoPipe.Set("RBS*!*DSPP*!*TELESCOPE*!*ES*!*DP")

V.Local.sJob.Set(V.Screen.frmMain!txtJob_Main.Text)
V.Local.sSuf.Set(V.Screen.frmMain!txtSuffix_Main.Text)

'they changed the job information on the main form job number
F.Intrinsic.String.Build("Select Router From V_Job_header Where Job = '{0}' And Suffix = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	Gui.frmMain.cboForm_Main.ClearItems

	V.Local.sRouter.Set(V.ODBC.conX!rst.FieldValTrim!Router)
	F.Intrinsic.String.Build("Select Sort_1 From V_Router_Header Where Router = '{0}'",v.Local.sRouter.Trim,v.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstRTR",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rstRTR.EOF,<>,True)
		V.Local.sSort.Set(V.ODBC.conX!rstRTR.FieldValTrim!Sort_1)
		F.Intrinsic.String.IsInString(V.local.sNoPipe,V.Local.sSort,True,V.Local.bRet)
		F.Intrinsic.Control.If(V.Local.bRet,=,True)

			'load for our pipes screens add pipe layout pipe operations and screen components
			Gui.frmMain.cboForm_Main.AddItem("Pipe Layout")
			Gui.frmMain.cboForm_Main.AddItem("Pipe Operations")
			Gui.frmMain.cboForm_Main.AddItem("Machine Configuration")
		F.Intrinsic.Control.Else
			Gui.frmMain.cboForm_Main.AddItem("Machine Configuration")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rstRTR.close
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txtsuffix_main_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.txtsuffix_main_change.End

program.sub.frmpipelayout_unload.start
F.Intrinsic.Control.SetErrorHandler("frmpipelayout_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'pipe layout screen
F.Intrinsic.Control.CallSub(Clearscreen_pipelayout)
Gui.frmPipeLayout..Visible(false)
Gui.frmMain..Show

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("frmpipelayout_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.frmpipelayout_unload.End

program.sub.frmpipeops_unload.start
F.Intrinsic.Control.SetErrorHandler("frmpipeops_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
F.Intrinsic.Control.CallSub(Clearscreen_pipeops)
Gui.frmPipeOps..Visible(false)
Gui.frmMain..Show

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("frmpipeops_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.frmpipeops_unload.End

program.sub.chkpinend_frmplay_click.start
F.Intrinsic.Control.SetErrorHandler("chkpinend_frmplay_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'only enable textboxes whose checkboxes are checked

F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkPinEnd_frmPlay.Value,=,1)
	Gui.frmPipeLayout.frameBPE.Enabled(True)
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.txtPE1.Text("")
	Gui.frmPipeLayout.txtPE2.Text("")
	Gui.frmPipeLayout.txtPE3.Text("")
	Gui.frmPipeLayout.txtPE4.Text("")
	Gui.frmPipeLayout.frameBPE.Enabled(False)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkpinend_frmplay_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkpinend_frmplay_click.End

program.sub.chkpincenter_frmplay_click.start
F.Intrinsic.Control.SetErrorHandler("chkpincenter_frmplay_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'only enabled textboxes whose checkboxes are checked.
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkPinCenter_frmPLay.Value,=,1)
	Gui.frmPipeLayout.frameBPC.Enabled(True)
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.txtPC1.Text("")
	Gui.frmPipeLayout.txtPC2.Text("")
	Gui.frmPipeLayout.txtPC3.Text("")
	Gui.frmPipeLayout.txtPC4.Text("")
	Gui.frmPipeLayout.frameBPC.Enabled(False)
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkpincenter_frmplay_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkpincenter_frmplay_click.End

program.sub.chkcenter_frmplay_click.start
F.Intrinsic.Control.SetErrorHandler("chkcenter_frmplay_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.i.Declare(Long)

'if the user checks cernter check box disable both box center and pin center checkboxes
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkCenter_frmPLay.Value,=,1)
	Gui.frmPipeLayout.chkPinCenter_frmPLay.Value(0)
	Gui.frmPipeLayout.chkBxCenter_frmPLay.Value(0)
	Gui.frmPipeLayout.frmCenter.Enabled(True)
	Gui.frmPipeLayout.chkBxCenter_frmPLay.Enabled(False)
	Gui.frmPipeLayout.chkPinCenter_frmPLay.Enabled(False)
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.frmCenter.Enabled(False)
	F.Intrinsic.Control.For(V.Local.i,1,4,1)
		Gui.frmPipeLayout.txtC[v.local.i].Text("")
	F.Intrinsic.Control.next(V.Local.i)
	Gui.frmPipeLayout.chkBxCenter_frmPLay.Enabled(True)
	Gui.frmPipeLayout.chkPinCenter_frmPLay.Enabled(True)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkcenter_frmplay_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkcenter_frmplay_click.End

program.sub.chkbxcenter_frmplay_click.start
F.Intrinsic.Control.SetErrorHandler("chkbxcenter_frmplay_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'only enabled the text boxes below the check boxes.
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkBxCenter_frmPLay.Value,=,1)
	Gui.frmPipeLayout.frameBBC.Enabled(True)
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.txtBC1.Text("")
	Gui.frmPipeLayout.txtBC2.Text("")
	Gui.frmPipeLayout.txtBC3.Text("")
	Gui.frmPipeLayout.txtBC4.Text("")
	Gui.frmPipeLayout.frameBBC.Enabled(False)
F.Intrinsic.Control.EndIf

	

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkbxcenter_frmplay_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkbxcenter_frmplay_click.End

program.sub.chkboxend_frmplay_click.start
F.Intrinsic.Control.SetErrorHandler("chkboxend_frmplay_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'only enabled those text boxes who corresponding checkbox is checked
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkBoxEnd_frmPLay.Value,=,1)
	Gui.frmPipeLayout.frameBBE.Enabled(True)
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.txtBE1.Text("")
	Gui.frmPipeLayout.txtBE2.Text("")
	Gui.frmPipeLayout.txtBE3.Text("")
	Gui.frmPipeLayout.txtBE4.Text("")
	Gui.frmPipeLayout.frameBBE.Enabled(False)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkboxend_frmplay_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkboxend_frmplay_click.End

Program.Sub.Pop_frmPipeLayout.Start
F.Intrinsic.Control.SetErrorHandler("Pop_frmPipeLayout_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iV.Declare(Long)
V.Local.sFields.Declare(String)
V.Local.sValue.Declare(String)
V.Local.iChecked.Declare(Long)
V.Local.iSectionLength.Declare(Float)
V.Local.iTotal.Declare(Float)
V.Local.iPerfTot.Declare(Float)


V.uGlobal.uSections.Redim(-1,-1)

'frmPipeLayout populate
Gui.frmPipeLayout.txtJob_frmPLay.Text(V.Global.sJob)
Gui.frmPipeLayout.txtSuffix_frmPLay.Text(V.Global.sSuffix)
Gui.frmPipeLayout.txtSeq.Text(V.Global.sSeq)
Gui.frmPipeLayout.txtSerial_frmPLay.Text(V.Global.sSerial)

'grab pipe cut length from GCG_Config Table GCG_CONFIG.PIPE_CUT_LENGTH,key being part number
F.Intrinsic.String.Build("Select Pipe_Cut_Length From GCG_Config Where Part ='{0}'",V.Global.sFGPart,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	Gui.frmPipeLayout.txt28PConfigLength_frmPLay.Text(V.ODBC.conX!rst.FieldVal!Pipe_Cut_Length)
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.txt28PConfigLength_frmPLay.Text("")
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.close


'used array for below.
F.Intrinsic.String.Split("Box_End*!*Box_Center*!*Center*!*Pin_Center*!*Pin_End","*!*",V.Local.sFields)
F.Intrinsic.String.Split("BE*!*BC*!*C*!*PC*!*PE","*!*",V.Local.sValue)

'they may or may not be enabled later depending on what the table has stored below
Gui.frmPipeLayout.frmCenter.Enabled(False)
Gui.frmPipeLayout.frameBPE.Enabled(False)
Gui.frmPipeLayout.frameBPC.Enabled(False)
Gui.frmPipeLayout.frameBBE.Enabled(False)
Gui.frmPipeLayout.frameBBC.Enabled(False)
'just in case any exist
Gui.frmPipeLayout.ddlMeasFrom_frmPLay.ClearItems
Gui.frmPipeLayout.ddlMeasFrom_frmPLay.AddItem("Top to Bottom",1)
Gui.frmPipeLayout.ddlMeasFrom_frmPLay.AddItem("Bottom to Top",2)


F.Intrinsic.String.Build("Select * From GCG_Pipe_Layout Where Job = '{0}' And Suffix ='{1}' And Serial = '{2}'",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	Gui.frmPipeLayout.txtPipNo_frmPLay.Text(V.ODBC.conX!rst.FieldValTrim!Pipe_No)
	Gui.frmPipeLayout.txtNOEnd.Text(V.ODBC.conX!rst.FieldValTrim!Joint_Number)
	Gui.frmPipeLayout.txtPipeCurLength_frmPLay.Text(V.ODBC.conX!rst.FieldValTrim!Pipe_Length)
	Gui.frmPipeLayout.txtPCutLength_frmPLay.Text(V.ODBC.conX!rst.FieldValTrim!Pipe_Cut_Length)
	Gui.frmPipeLayout.ddlMeasFrom_frmPLay.Text(V.ODBC.conX!rst.FieldValTrim!Measured_From)
	Gui.frmPipeLayout.chkBoxEnd_frmPLay.Value(V.ODBC.conX!rst.FieldValTrim!Box_end)
	Gui.frmPipeLayout.chkBxCenter_frmPLay.Value(V.ODBC.conX!rst.FieldValTrim!Box_Center)
	Gui.frmPipeLayout.chkCenter_frmPLay.Value(V.ODBC.conX!rst.FieldValTrim!Center)
	Gui.frmPipeLayout.chkPinCenter_frmPLay.Value(V.ODBC.conX!rst.fieldvaltrim!Pin_Center)
	Gui.frmPipeLayout.chkPinEnd_frmPlay.Value(V.ODBC.conX!rst.FieldValTrim!Pin_End)
F.Intrinsic.Control.Else
'	default that mess
	F.Intrinsic.String.Build("Select * From GCG_Config Where Part = '{0}'",V.Global.sFGPart.Trim,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstConfig",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
		F.Intrinsic.Control.CallSub(Load_sections,"Num_Screens",V.ODBC.conX!rstConfig.FieldVal!num_screens,"Layout_Direction",V.Screen.frmPipeLayout!ddlMeasFrom_frmPLay.Text)
		Gui.frmPipeLayout.txtPCutLength_frmPLay.Text(V.ODBC.conX!rstConfig.FieldvalTrim!Pipe_Cut_Length)
	F.Intrinsic.Control.EndIf
	F.ODBc.conX!rstConfig.Close
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

Gui.frmPipeLayout.gsfgSections.Visible(False)
F.Intrinsic.Control.CallSub(Buildstyle)

F.Intrinsic.Debug.Stop

F.Intrinsic.String.Build("Select * From GCG_Config_Sec_Act Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Part = '{3}' And Serial = '{4}' Order by Seq Desc, Section",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSeq,V.Global.sFGPart.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!STANDARD_SECTIoN,"standard_section")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Perf_Length,"Perf_Length")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Sec_Length,"Length")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Length,"")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!PerfLength,"")
	F.Intrinsic.Variable.LoadUDTFromRecordset("conx","rst","v.uglobal.uSections",False)
	F.Intrinsic.Variable.UDTMultiFlagDuplicates(V.uGlobal.uSections!Section)
	F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uSections)
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Perf_Length,"")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Sec_Length,"")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!STANDARD_SECTION,"")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Length,"Length")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!PerfLength,"Perf_Length")
	F.Intrinsic.Variable.UDTMultiQuickSort(V.uGlobal.uSections!Section,False)
	F.Intrinsic.Control.For(V.Local.iC,0,V.uGlobal.uSections.UBound,1)
		F.Intrinsic.Debug.Stop

		'try to get our actuals from our actual table.
'		F.Intrinsic.String.Build("Select * From GCG_Config_Section Where Part = '{0}' And Section = '{2}' And Type='{1}'",V.Global.sFGPart,V.uGlobal.uSections(v.Local.iC)!Type,V.uglobal.uSections(v.local.ic)!Standard_section,V.Local.sSQL)
'		F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstStandard",V.Local.sSQL)
'		F.Intrinsic.Control.If(V.ODBC.conX!rstStandard.EOF,<>,True)
'			V.uGlobal.uSections(v.Local.iC)!Length.Set(V.ODBC.conX!rstStandard.FieldValFloat!Length)
			F.Intrinsic.Math.Add(V.uGlobal.uSections(v.Local.iC)!Act_Sec_Length,V.Local.itotal,V.Local.iTotal)
'			V.uGlobal.uSections(v.Local.iC)!PerfLength.Set(V.ODBC.conX!rstStandard.FieldValFloat!Perf_Length)
			F.Intrinsic.Math.Add(V.uGlobal.uSections(v.Local.iC)!Act_Perf_Length,V.Local.iperftot,V.Local.iPerftot)
'			V.uGlobal.uSections(v.Local.ic)!SlotSize.Set(V.ODBC.conX!rstStandard.FieldValFloat!Slot_Size)
'		F.Intrinsic.Control.endif
'		F.ODBC.conX!rstStandard.close
	F.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.Else
	'must not of entered any actual yets so lets load from our default table.
	F.ODBC.conX!rst.Close
	'populate our config section if exists. if not we are going to show default stuff.
	F.Intrinsic.String.Build("Select * From GCG_Config_Section Where part = '{0}' Order By Section",V.Global.sFGPart.Trim,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!STANDARD_SECTION,"section")
		F.Intrinsic.Variable.LoadUDTFromRecordset("conx","rst","v.uglobal.uSections",False)
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!STANDARD_SECTION,"")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.uGlobal.uSections.UBound,>,-1)
	Gui.FRMpIPELayout.gsfgSections.LoadFromUDT("uGlobal.uSections","Section::0*!*Type::1*!*SlotSize::2*!*Length::3*!*Act_Sec_Length::4*!*PerfLength::5*!*Act_Perf_length::6",2)
	'so now we update our text matrix of Column header
	F.Intrinsic.String.Build("Act. Section Length (In) {0}",V.Local.iTotal,V.Local.sRet)
	Gui.frmPipeLayout.gsfgSections.TextMatrix(4,0,V.Local.sRet)
	F.Intrinsic.String.Build("Act. Perf. Length (In) {0}",V.Local.iPerfTot,V.Local.sret)
	Gui.frmPipeLayout.gsfgSections.TextMatrix(6,0,V.Local.sRet)
		
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.gsfgSections.TextMatrix(4,0,"Act. section Length (In)")
	Gui.frmPipeLayout.gsfgSections.TextMatrix(6,0,"Act. Perf. Length (In)")
F.Intrinsic.Control.EndIf
Gui.frmPipeLayout.gsfgSections.Visible(True)


F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{3}' And RTRIM(Screen_ID) = 'Pipe' and PROCESS = 'Layout' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst1",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst1.EOF,<>,True)
	Gui.frmPipeLayout.chkLODr.value(1)
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.chkLODr.value(0)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst1.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Pop_frmPipeLayout_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Pop_frmPipeLayout.End

Program.Sub.Pop_frmPipeOPs.Start
F.Intrinsic.Control.SetErrorHandler("Pop_frmPipeOPs_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)

Gui.frmPipeOps.txtJob.Text(V.Global.sJob.Trim)
Gui.frmPipeOps.txtSuffix.Text(V.Global.sSuffix.Trim)
Gui.frmPipeOps.txtSeq.Text(V.Global.sSeq)
Gui.frmPipeOps.txtSerialNumber.Text(V.Global.sSerial.Trim)

F.Intrinsic.Control.BlockEvents

Gui.frmPipeOps.cboPipeEnd_FrmPipeOp.ClearItems

'grab pipe cut length from GCG_Pipe_Layout Table GCG_Pipe_Layout.PIPE_CUT_LENGTH,key being part number and serial number
F.Intrinsic.String.Build("Select Pipe_Cut_Length From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}'",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstPCL",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rstPCL.EOF,<>,True)
	Gui.frmPipeOps.txtPipeCutLength.Text(V.ODBC.conX!rstPCL.FieldVal!Pipe_Cut_Length)
F.Intrinsic.Control.Else
	Gui.frmPipeOps.txtPipeCutLength.Text("")
F.Intrinsic.Control.EndIf
F.ODBC.conX!rstPCL.close

'grab amw pipe numer from pipe layout table if rec exists
F.Intrinsic.String.Build("Select Pipe_NO From GCG_PIpe_Layout Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}'",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("RstAMW",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rstAMW.EOF,<>,True)
	Gui.frmPipeOps.txtAMWPipeNumber.Text(V.ODBC.conX!rstAMW.FieldValTrim!Pipe_NO)
F.Intrinsic.Control.EndIf
F.ODBC.conX!rstAMW.Close

'try to get data from the PIPE_Ops table based on the serial number (Probably wants Job, Suffix too)
F.Intrinsic.String.Build("Select * From GCG_PIpe_Operation Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}'",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)

	Gui.frmPipeOps.txtActualCutLength.Text(V.ODBC.conX!rst.FieldValTrim!Act_Cut_Length)
	Gui.frmPipeOps.chkBlowOut_frmPipeOp.Value(V.ODBC.conX!rst.FieldValTrim!Blow_Out)
	Gui.frmPipeOps.chkDbrrComplete_frmPipeOp.Value(V.ODBC.conX!rst.FieldValTrim!Deb_Comp)
	Gui.frmPipeOps.chkPerfComplete_frmPipeOp.Value(V.ODBC.conX!rst.FieldValTrim!Perf_Comp)
	Gui.frmPipeOps.chkPerfPatternCHeck.Value(V.ODBC.conX!rst.FieldValTrim!Perf_Pat_Chk)
'	Gui.frmPipeOps.chkProfGage.Value(V.ODBC.conX!rst.FieldValTrim!Profile_Gauge_Chk)
'	Gui.frmPipeOps.chkVispInsp.Value(V.ODBC.conX!rst.FieldValTrim!Visual_INSP)
	Gui.frmPipeOps.txtDrift.Text(V.ODBC.conX!rst.FieldValTrim!Drift)

F.Intrinsic.Control.else
	'means this record doesnt exist yet in the table, but we want to get some records from the custom configurator table.
	'particually from pipe cut length GOES HERE
	'pull from GCG_Config table pipe cut length
	'F.Intrinsic.String.Build("Select Pipe_Cut_Length From GCG_Config Where Part = '{0}'",V.Global.sFGPart.Trim,V.Local.sSQL)
	'this should actually be pulling from the pipe layout table as this step should have been done already
	F.Intrinsic.String.Build("Select Pipe_Cut_Length From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}'",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstPipeC",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rstPipeC.EOF,=,True)
		Gui.frmPipeOps.txtPipeCutLength.Text("")
	F.Intrinsic.Control.Else
		Gui.frmPipeOps.txtPipeCutLength.Text(V.ODBC.conX!rstPipeC.FieldValTrim!Pipe_Cut_Length)
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rstPipeC.Close
	

	'default our checkboxes on the side.
'	since these are with serial numbers
	Gui.frmPipeOps.chkPerfPatternCHeck.Value(0)
	Gui.frmPipeOps.chkPerfComplete_frmPipeOp.Value(0)
	Gui.frmPipeOps.chkDbrrComplete_frmPipeOp.Value(0)
	Gui.frmPipeOps.chkBlowOut_frmPipeOp.Value(0)

F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

'writing the record at the time the form opens.  This way checkboxes can operate independantly of the whole record. If the record already exists, this is ignored.
'becuase the previous step retrieves what we need from the Pipe_Layout table, this works perfectly.
F.Intrinsic.String.Build("Select * From GCG_Pipe_Operation Where Job = '{0}' And Suffix = '{1}' And Serial ='{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	'wheres pipe no supposed to go, inv heat, and inv serial supposed to be?
	F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
	F.ODBC.conX!rst.Set!Pipe_NO(V.Args.Output)
	F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtPipeCutLength.Text)
	F.ODBC.conX!rst.Set!Pipe_Cut_Length(V.Args.Output)
	F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtActualCutLEngth.Text)
	F.ODBC.conX!rst.Set!Act_Cut_Length(V.Args.Output)
	F.ODBC.conX!rst.Set!Thread_Type(V.Screen.frmPipeOps!txtThreadType_Act.Text)
	F.ODBC.conX!rst.Set!Perf_Comp(V.Screen.frmPipeOps!chkPerfComplete_frmPipeOp.Value)
	F.ODBC.conX!rst.Set!Perf_User("")
	F.ODBC.conX!rst.Set!Perf_Date("1900-01-01")
	F.ODBC.conX!rst.Set!Deb_Comp(V.Screen.frmPipeOps!chkDbrrComplete_frmPipeOp.Value)
	F.ODBC.conX!rst.Set!Deb_User("")
	F.ODBC.conX!rst.Set!Deb_Date("1900-01-01")
	F.ODBC.conX!rst.Set!Blow_Out(V.Screen.frmPipeOps!chkDbrrComplete_frmPipeOp.value)
	F.ODBC.conX!rst.Set!Blow_Out_User("")
	F.ODBC.conX!rst.Set!Blow_Out_Date("1900-01-01")
	F.ODBC.conX!rst.Set!Visual_INSP(V.Screen.frmPipeOps!chkVispInsp.Value)
	F.ODBC.conX!rst.Set!Perf_Pat_Chk(V.Screen.frmPipeOps!chkPerfPatternCHeck.Value)
	F.ODBC.conX!rst.Set!Perf_Pat_Chk_User("")
	F.ODBC.conX!rst.Set!Perf_Pat_Chk_Date("1900-01-01")
	F.ODBC.conX!rst.Set!Empl_Last_Change("")
	F.ODBC.conX!rst.Set!Date_Last_Change("1900-01-01")
	F.ODBC.conX!rst.Set!Profile_Gauge_Chk(V.Screen.frmPipeOps!chkProfGage.Value)
	F.ODBC.conX!rst.Set!Profile_Gauge_User("")
	F.ODBC.conX!rst.Set!Prof_Gauge_Chk_Date("1900-01-01")
	F.ODBC.conX!rst.Update

	F.ODBC.conX!rst.Close

	'writing the record at the time the form opens.  This way checkboxes can operate independantly of the whole record. If the record already exists, this is ignored.
	'bec	uase the previous step retrieves what we need from the Pipe_Layout table, this works perfectly.
	F.Intrinsic.String.Build("Select * From GCG_Pipe_Oper_Hist Where Job = '{0}' And Suffix = '{1}' And Seq = '{3}' And Serial ='{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Global.sSEQ,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
		F.ODBC.conX!rst.AddNew
		F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
		F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
		F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
		F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
		'wheres pipe no supposed to go, inv heat, and inv serial supposed to be?
		F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
		F.ODBC.conX!rst.Set!Pipe_NO(V.Args.Output)
		F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtPipeCutLength.Text)
		F.ODBC.conX!rst.Set!Pipe_Cut_Length(V.Args.Output)
		F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtActualCutLEngth.Text)
		F.ODBC.conX!rst.Set!Act_Cut_Length(V.Args.Output)
		F.ODBC.conX!rst.Set!Thread_Type(V.Screen.frmPipeOps!txtThreadType_Act.Text)
		F.ODBC.conX!rst.Set!Perf_Comp(V.Screen.frmPipeOps!chkPerfComplete_frmPipeOp.Value)
		F.ODBC.conX!rst.Set!Perf_User("")
		F.ODBC.conX!rst.Set!Perf_Date("1900-01-01")
		F.ODBC.conX!rst.Set!Deb_Comp(V.Screen.frmPipeOps!chkDbrrComplete_frmPipeOp.Value)
		F.ODBC.conX!rst.Set!Deb_User("")
		F.ODBC.conX!rst.Set!Deb_Date("1900-01-01")
		F.ODBC.conX!rst.Set!Blow_Out(V.Screen.frmPipeOps!chkDbrrComplete_frmPipeOp.value)
		F.ODBC.conX!rst.Set!Blow_Out_User("")
		F.ODBC.conX!rst.Set!Blow_Out_Date("1900-01-01")
		F.ODBC.conX!rst.Set!Visual_INSP(V.Screen.frmPipeOps!chkVispInsp.Value)
		F.ODBC.conX!rst.Set!Perf_Pat_Chk(V.Screen.frmPipeOps!chkPerfPatternCHeck.Value)
		F.ODBC.conX!rst.Set!Perf_Pat_Chk_User("")
		F.ODBC.conX!rst.Set!Perf_Pat_Chk_Date("1900-01-01")
		F.ODBC.conX!rst.Set!Empl_Last_Change("")
		F.ODBC.conX!rst.Set!Date_Last_Change("1900-01-01")
		F.ODBC.conX!rst.Set!Profile_Gauge_Chk(V.Screen.frmPipeOps!chkProfGage.Value)
		F.ODBC.conX!rst.Set!Profile_Gauge_User("")
		F.ODBC.conX!rst.Set!Prof_Gauge_Chk_Date("1900-01-01")
		F.ODBC.conX!rst.Update
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{3}' And RTRIM(Screen_ID) = 'Pipe' and PROCESS = 'Deburr' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	Gui.frmPipeOps.chkDbDrComplete_frmPipeOps.value(1)
F.Intrinsic.Control.Else
	Gui.frmPipeOps.chkDbDrComplete_frmPipeOps.value(0)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

Gui.frmPipeOps.cboPipeEnd_FrmPipeOp.ClearItems
'populate the Pipe End CBO box with Pin and Box now top and bottom top = box and bottom = pin
Gui.frmPipeOps.cboPipeEnd_FrmPipeOp.AddItem("Top",0)
Gui.frmPipeOps.cboPipeEnd_FrmPipeOp.AddItem("Bottom",1)

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Pop_frmPipeOPs_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Pop_frmPipeOPs.End

Program.Sub.Pop_frmScreenComp.Start
F.Intrinsic.Control.SetErrorHandler("Pop_frmScreenComp_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.ic.Declare(Long)
V.Local.sT.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.sScreens.Declare(String)
V.Local.fInches.Declare(Float)
V.Local.bRet.Declare(Boolean)

'frmComp -screencomp
V.uGlobal.uSections.Redim(-1,-1)



F.Intrinsic.Control.BlockEvents

'this sub will populate the Screen Components screen once they select it.  and hit continue on the main screen.
Gui.frmMain..visible(False)
Gui.frmComp.ddlScreenID.ClearItems
Gui.frmComp.txtJob.Enabled(False)
Gui.frmComp.txtSuffix.Enabled(False)
Gui.frmComp.txtSeq.Enabled(False)

Gui.frmComp.txtSerial.Enabled(False)

Gui.frmComp.txtJob.Text(V.Global.sJob.Trim)
Gui.frmComp.txtSuffix.Text(V.Global.sSuffix.Trim)
Gui.frmComp.txtSerial.Text(V.Global.sSerial.Trim)
Gui.frmComp.txtSeq.Text(V.Global.sSeq)


'Grab Screen Length from configurator.
F.Intrinsic.String.Build("Select Screen_Length, Sort_CODE From GCG_Config Where Part = '{0}'",V.Global.sFGPart,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("RstTemp",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!RstTemp.EOF,<>,True)
	'according to Kenneth, we have to convert this number to inches. not feet.
	'i guess it's still being stored as feet since we are getting it from the table that way
	F.Intrinsic.Math.Mult(V.ODBC.conX!RstTemp.FieldVal!Screen_Length,12,V.Local.fInches)

	Gui.frmComp.txtScreenCutLength.Text(V.Local.fInches)
	'no longer need to find out if rod or pipe based. had to figure that out way earlier than now
'	'figure out if it's pipe or rod, based on returned sort code then going into GCG_CONFIG_SC Table to determine if true or false it's a rod.
'	F.Intrinsic.String.Build("Select Flag_Pipe From GCG_CONFIG_SC Where Sort_Code = '{0}'",V.ODBC.conX!RstTemp.FieldValTrim!Sort_Code,V.Local.sSQL)
'	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstCheck",V.Local.sSQL)
'	F.Intrinsic.Control.If(V.ODBC.conX!rstCheck.EOF,<>,True)
'		'is it true or false?
'		F.Intrinsic.Control.If(V.ODBC.conX!rstCheck.FieldValTrim!Flag_Pipe,=,"True")
'			V.Global.bRod.Set(False)
'		F.Intrinsic.Control.Else
'			V.Global.bRod.Set(True)
'		F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.Else
'		V.Global.bRod.Set(False)
'	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Else
	Gui.frmComp.txtScreenCutLength.Text("")
	V.Global.bRod.Set(False)
F.Intrinsic.Control.EndIf
F.ODBC.conX!RstTemp.Close

'grab wo desc from job header
F.Intrinsic.String.Build("Select Description,Product_Line From V_Job_Header Where Job = '{0}' And Suffix = '{1}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	Gui.frmComp.txtWODesc.Text(V.Local.sRet(0).Trim)
	Gui.frmComp.txtPL.Text(V.Local.sRet(1).Trim)
F.Intrinsic.Control.EndIf

'fill screen ddl with screens ids that exist for the serial number
Gui.frmComp.ddlScreenID.AddItem("")
'only going to have this if it's not a rod
F.Intrinsic.Control.If(V.Global.bRod,=,False)
	F.Intrinsic.String.Build("Select Distinct Screen_ID From GCG_Screen_Config Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' Order BY Screen_ID ",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.DoUntil(V.ODBC.conX!rst.EOF,=,True)
		Gui.frmComp.ddlScreenID.AddItem(V.ODBC.conX!rst.FieldValTrim!Screen_ID,V.Local.iC)
		F.ODBC.conX!rst.MoveNext
	F.Intrinsic.Control.Loop
	F.ODBC.conX!rst.Close
F.Intrinsic.Control.Else
	Gui.frmComp.ddlScreenID.FindItem("Screen",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet,=,False)
		Gui.frmComp.ddlScreenID.AddItem("Screen")
		Gui.frmComp.ddlScreenID.Text("Screen")
	F.Intrinsic.Control.endIF

F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Global.bRod,=,True)
	F.Intrinsic.Control.CallSub(Ddlscreenid_click)
F.Intrinsic.Control.EndIf


F.Intrinsic.Debug.Stop
F.Intrinsic.Control.If(V.Global.bRod,=,False)


	'get measured from our pipe_layout screen.
'	remove sequence key because they are needing to go back and forht through many sequences on this screen comp screen
	F.Intrinsic.String.Build("Select Measured_From From GCG_Pipe_layout Where Job = '{0}' And Suffix = '{1}'  And Serial = '{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("Rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
		Gui.frmComp.txtMeasuredFrom.Text(V.ODBC.conX!rst.FieldValTrim!Measured_From)
		'determine screen names based on direction, and get the actual screens that were marked as used from the pipe layout table.
		F.Intrinsic.Control.If(V.Screen.frmComp!txtMeasuredFrom.Text,=,"Bottom to Top")
			F.Intrinsic.String.Build("Select Box_End,Box_Center,Center,Pin_Center,Pin_End From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Seq = '{3}' And Serial= '{2}'",V.Global.sJob,V.Global.sSuffix.Trim,V.Global.sSerial.trim,V.Global.sSeq,V.Local.sSQL)
			F.Intrinsic.String.Split("Bottom End*!*Bottom Center*!*Center*!*Top Center*!*Top End","*!*",V.Local.sScreens)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("Select Pin_End,Pin_Center,Center,Box_Center,Box_end From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Seq = '{3}' And Serial= '{2}'",V.Global.sJob,V.Global.sSuffix.Trim,V.Global.sSerial.trim,V.Global.sSeq,V.Local.sSQL)
			F.Intrinsic.String.Split("Top End*!*Top Center*!*Center*!*Bottom Center*!*Bottom End","*!*",V.Local.sScreens)
		F.Intrinsic.Control.Endif
		'sret will be a delimited string with True or false values, delimited by *!*
		F.ODBC.Connection!conX.ExecuteAndREturn(V.Local.sSQL,V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sret.Trim,<>,"")
			F.Intrinsic.String.Split(V.Local.sret,"*!*",V.Local.sRet)
				F.Intrinsic.Control.For(V.Local.ic,0,V.Local.sRet.UBound,1)
				F.Intrinsic.Control.If(V.Local.sRet(v.Local.ic).Trim,<>,"")
					'figure out what screens are being used. if they are true, we are going to set sT to screens array value then concat together into sscreen below
					F.Intrinsic.Control.If(V.Local.sRet(v.Local.ic),=,True)
						V.Local.sT.Set(V.Local.sScreens(v.Local.ic).Trim)
					F.Intrinsic.Control.Else
						V.Local.sT.Set("")
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.If(V.Local.sT.Trim,<>,"")
						F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
							V.Local.sScreen.Set(V.Local.sT.Trim)
						F.Intrinsic.Control.Else
							F.Intrinsic.String.Build("{0}*!*{1}",V.local.sScreen,V.Local.sT.Trim,V.Local.sScreen)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.endif
			F.Intrinsic.Control.Next(V.Local.ic)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Measured From direction can not be determined. Please verify input on Pipe Layout screen.")
'		F.ODBC.conX!rst.Close
'		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rst.Close
F.Intrinsic.Control.EndIf

'screens needed were not entered in correctly on pipe layout screen. so we must default based on measured from direction
'from don. if this thing is a rod we are going to leave screen say screen.
F.Intrinsic.Control.If(V.Global.bRod,=,True)
	V.Local.sScreen.Set("Screen")
F.Intrinsic.Control.Else
	F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
		F.Intrinsic.Control.If(V.Screen.frmComp!txtMeasuredFrom.Text,=,"Top to Bottom")
			V.Local.sScreen.Set("Top End*!*Center*!*Bottom End")
		F.Intrinsic.Control.Else
			V.Local.sScreen.Set("Bottom End*!*Center*!*Top End")
		F.Intrinsic.Control.Endif
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(Buildstylescreen)
F.Intrinsic.String.Split(V.Local.sScreen,"*!*",V.Local.sScreen)
'only select those records that are of scren type


F.Intrinsic.String.Build("Select * From GCG_Config_Sec_Act Where Type = 'Screen' And job = '{0}' ANd Suffix = '{1}' And Serial = '{2}' And Part = '{3}' And Seq In(Select Seq From GCG_Config_Sec_Act Where Type = 'Screen' And job = '{0}' ANd Suffix = '{1}' And Serial = '{2}' And Part = '{3}') Order By Seq Desc,Section",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Global.sFGPart.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Perf_Length,"Perf_Length")
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Sec_Length,"Length")
	F.Intrinsic.Variable.LoadUDTFromRecordset("conX","rst","v.uglobal.uSections",False)
	F.Intrinsic.Control.If(V.uGlobal.uSections.UBound,>,-1)
		'now we have to determine alright what are we measuring from and where are we going.
		'loop through and replace what we need.
		'make sure the ubounds are the less than or equal, if they are great we will go through replacing what we need.
		'if not we are just going to leave it screen, but either way we are replacin with screens they are using or default order
		F.Intrinsic.Control.If(V.uGlobal.uSections.UBound,<=,V.Local.sScreen.UBound)
			F.Intrinsic.Control.For(V.Local.ic,0,V.uGlobal.uSections.UBound,1)
				V.uGlobal.uSections(v.Local.ic)!Type.Set(V.Local.sScreen(v.Local.ic).Trim)
			F.Intrinsic.Control.Next(V.Local.ic)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Global.bRod,=,True)
			F.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uSections!Type,"Screen")
		F.Intrinsic.Control.EndIf
		Gui.frmComp.gsfgScreens.LoadFromUDT("v.uglobal.uSections","Section*!*Type*!*SlotSize*!*Act_Sec_Length",2)
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rst.close
F.Intrinsic.Control.Else
'	load  based on our default
	'must not of entered any actual yets so lets load from our default table.
	F.ODBC.conX!rst.Close
	'populate our config section if exists. if not we are going to show default stuff.
	F.Intrinsic.String.Build("Select * From GCG_Config_Section Where part = '{0}' And Type = 'Screen' Order By Section",V.Global.sFGPart.Trim,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!STANDARD_SECTION,"section")
		F.Intrinsic.Variable.LoadUDTFromRecordset("conx","rst","v.uglobal.uSections",False)
	F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!STANDARD_SECTION,"")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uSections!Type,"Screen")
	Gui.frmComp.gsfgScreens.LoadFromUDT("v.uglobal.uSections","Section*!*Type*!*SlotSize*!*Act_Sec_Length",2)

	'so now we update our text matrix of Column header
'	F.Intrinsic.String.Build("Act. Section Length (In) {0}",V.Local.iTotal,V.Local.sRet)
'	Gui.frmPipeLayout.gsfgSections.TextMatrix(4,0,V.Local.sRet)
'	F.Intrinsic.String.Build("Act. Perf. Length (In) {0}",V.Local.iPerfTot,V.Local.sret)
'	Gui.frmPipeLayout.gsfgSections.TextMatrix(6,0,V.Local.sRet)

	F.ODBC.conX!rst.Close
F.Intrinsic.Control.EndIf
'F.ODBC.conX!rst.Close


F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{3}' And RTRIM(Screen_ID) = 'Screen' and PROCESS = 'Screen' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	Gui.frmComp.chkScrChk.value(1)
F.Intrinsic.Control.Else
	Gui.frmComp.chkScrChk.value(0)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Pop_frmScreenComp_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Pop_frmScreenComp.End

program.sub.ddlmeasfrom_frmplay_change.start
F.Intrinsic.Control.SetErrorHandler("ddlmeasfrom_frmplay_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)




'if user selects PIPE END in the drop down list, we are goign to move something arounds.
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!ddlMeasFrom_frmPLay.Text,=,"Pin End")
	Gui.frmPipeLayout.frameBBE.position(6900,2380)
	Gui.frmPipeLayout.frameBBC.position(5360,2380)
	Gui.frmPipeLayout.frameBPC.position(2100,2380)
	Gui.frmPipeLayout.frameBPE.position(600,2380)
	Gui.frmPipeLayout.frmCenter.position(3600,2380)
	Gui.frmPipeLayout.chkBoxEnd_frmPLay.position(7000,1820)
	Gui.frmPipeLayout.chkPinEnd_frmPlay.position(835,1820)
	Gui.frmPipeLayout.chkCenter_frmPLay.position(3900,1820)
	Gui.frmPipeLayout.ddlMeasFrom_frmPLay.position(1550,960)
	Gui.frmPipeLayout.chkBxCenter_frmPLay.position(5500,1820)
	Gui.frmPipeLayout.chkPinCenter_frmPLay.position(2200,1820)
	Gui.frmPipeLayout.cmdSave_frmPLay.position(200,4100)
F.Intrinsic.Control.Else
	Gui.frmPipeLayout.frameBBE.position(200,1845)
	Gui.frmPipeLayout.frameBBC.position(1515,1860)
	Gui.frmPipeLayout.frameBPC.position(4400,1845)
	Gui.frmPipeLayout.frameBPE.position(5800,1830)
	Gui.frmPipeLayout.frmCenter.position(2910,1945)
	Gui.frmPipeLayout.chkBoxEnd_frmPLay.position(400,1800)
	Gui.frmPipeLayout.chkPinEnd_frmPlay.position(5955,1820)
	Gui.frmPipeLayout.chkCenter_frmPLay.position(3100,1800)
	Gui.frmPipeLayout.ddlMeasFrom_frmPLay.position(1550,960)
	Gui.frmPipeLayout.chkBxCenter_frmPLay.position(1600,1800)
	Gui.frmPipeLayout.chkPinCenter_frmPLay.position(4515,1820)
	Gui.frmPipeLayout.cmdSave_frmPLay.position(200,3785)
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlmeasfrom_frmplay_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)

Function.Intrinsic.Control.EndIf


program.sub.ddlmeasfrom_frmplay_change.End

program.sub.ddlmeasfrom_frmplay_click.start
F.Intrinsic.Control.SetErrorHandler("ddlmeasfrom_frmplay_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'
'
'if user selects PIn END in the drop down list, we are goign to move something arounds.
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!ddlMeasFrom_frmPLay.Text,=,"Top to Bottom")
	Gui.frmPipeLayout.frameBPE.position(1540,4320)
	Gui.frmPipeLayout.frameBPC.position(2985,4320)
	Gui.frmPipeLayout.frmCenter.position(4330,4410)
	Gui.frmPipeLayout.frameBBC.position(5715,4320)
	Gui.frmPipeLayout.frameBBE.position(7145,4320)
	Gui.frmPipeLayout.chkPinEnd_frmPlay.position(1730,4100)
	Gui.frmPipeLayout.chkPinCenter_frmPLay.position(3100,4100)
	Gui.frmPipeLayout.chkCenter_frmPLay.position(4545,4100)
	Gui.frmPipeLayout.chkBxCenter_frmPLay.position(5785,4100)
	Gui.frmPipeLayout.chkBoxEnd_frmPLay.position(7350,4100)
F.Intrinsic.Control.Else
	'original layout
	Gui.frmPipeLayout.frameBBE.position(1540,4320)
	Gui.frmPipeLayout.frameBBC.position(2985,4320)
	Gui.frmPipeLayout.frmCenter.position(4330,4410)
	Gui.frmPipeLayout.frameBPC.position(5715,4320)
	Gui.frmPipeLayout.frameBPE.position(7145,4320)
	Gui.frmPipeLayout.chkBoxEnd_frmPLay.position(1730,4100)
	Gui.frmPipeLayout.chkBxCenter_frmPLay.position(3100,4100)
	Gui.frmPipeLayout.chkCenter_frmPLay.position(4545,4100)
	Gui.frmPipeLayout.chkPinCenter_frmPLay.position(5785,4100)
	Gui.frmPipeLayout.chkPinEnd_frmPlay.position(7350,4100)
F.Intrinsic.Control.EndIf




F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlmeasfrom_frmplay_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.ddlmeasfrom_frmplay_click.End

Program.Sub.Write_ScreenConfig.Start
F.Intrinsic.Control.SetErrorHandler("Write_ScreenConfig_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sIDScreen.Declare(String)
V.Local.iC.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.sValues.Declare(String)
V.Local.bNum.Declare(Boolean)
'called form the cmdSave_FrmPlay_Click subroutine.

'screen id could either be (be bc c pc pe)
V.Local.sIDScreen.Set(V.Args.Screen)
'values are of the textboxes 1 through 4 in this order (Box to per, box to screen, perf. length, screen length)
F.Intrinsic.String.Split(V.Args.Values,"*!*",V.Local.sValues)

'first check to make sure that the values are numeric, if not we set them to 0
F.Intrinsic.Control.For(V.Local.iC,0,3,1)
	F.Intrinsic.Math.IsNumeric(V.Local.sValues(v.Local.iC),V.Local.bNum)
	F.Intrinsic.Control.If(V.Local.bNum,=,False)
		V.Local.sValues(v.Local.iC).Set(0)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iC)


F.Intrinsic.String.Build("Select * From GCG_Screen_Config Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Serial = '{3}' And Screen_ID = '{4}'",V.Global.sJob.Trim,V.global.sSuffix.Trim,V.global.sSeq,V.Global.sSerial.Trim,V.Local.sIDScreen.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Screen_ID(V.Local.sIDScreen.Trim)
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Set!Pipe_No(V.Screen.frmPipeLayout!txtPipNo_frmPLay.Text)
F.ODBC.conX!rst.Set!Box_To_Perf(V.Local.sValues(0))
F.ODBC.conX!rst.Set!Box_To_Screen(V.Local.sValues(1))
F.ODBC.conX!rst.Set!Perf_Length(V.Local.sValues(2))
F.ODBC.conX!rst.Set!Screen_Length(V.Local.sValues(3))
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Write_ScreenConfig_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Write_ScreenConfig.End

program.sub.cmdsave_frmcomp_click.start
F.Intrinsic.Control.SetErrorHandler("cmdsave_frmcomp_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iID.Declare(Long)
V.Local.bIsNumber.Declare(Boolean)
V.Local.sRibHeat.Declare(String)
V.Local.sRibSerial.Declare(String)
V.Local.sWrapHeat.Declare(String)
V.Local.sWrapSerial.Declare(String)
F.Intrinsic.Control.BlockEvents
V.Local.sWrapWire.Declare(String)
V.Local.sRibWire.Declare(String)

V.Local.sScreen.Set(V.Screen.frmComp!ddlScreenID.Text)
V.Local.sRibWire.Set(V.Screen.frmComp!txtRibWireAMW#.Text)
V.Local.sWrapWire.Set(V.Screen.frmComp!txtWrapWireAMW#.Text)


'no blank screen drop down
'we can have a blank screen id if it's rod based if brod is false, it's pipe based and we need to see if we have a screen
'if brod is true we don't check to see if screen id is blank. we going to save it blank.

F.Intrinsic.Control.If(V.Global.bRod,=,False)
	F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
		F.Intrinsic.Control.UnBlockEvents
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
'They clicked the save button on the Rib Wrap Form
'first we are going to check the flag either edit or new, bNewComp
'Edit means they selected this comp from the grid, new means they selected screen and started typing.
'F.Intrinsic.Control.If(V.Global.bNewComp,=,True)
'	'means a new record exists we are adding new record with new component id
'	'get last highest number for this job,suffix,serial,screen information.
'	F.Intrinsic.String.Build("Select Top 1(Comp_ID) As LastID From GCG_Screen_Comp Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Screen_ID = '{3}'  Order By Comp_ID DESC",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sScreen.Trim,V.Local.sSQL)
'	F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
'	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
'		V.Local.iID.Set(1)
'	F.Intrinsic.Control.Else
'		F.Intrinsic.Math.Add(V.ODBC.conX!rst.FieldValLong!LastID,1,V.Local.iID)
'	F.Intrinsic.Control.EndIf
'	F.ODBC.conX!rst.Close
'F.Intrinsic.Control.Else
'	V.Local.iID.Set(V.Screen.frmComp!ddlScreenID.MetaData0)
'F.Intrinsic.Control.EndIf

'Need to add a section here for SCREEN ONLY JOBS.  They won't have a screen ID, just the serial number.
'F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
'	V.Local.sScreen.Set(V.Global.sSuffix.Trim)
'F.Intrinsic.Control.Else(V.Local.sScreen)
'F.Intrinsic.Control.EndIf



F.Intrinsic.UI.InvokeWaitDialog("Saving...")

'selecting the existing record from GCG_Screen_Comp, if one does not exist, build the key values to write a new record
F.Intrinsic.String.Build("Select * From GCG_Screen_Comp Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Screen_ID = '{3}' And Comp_ID = '{4}' ",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sScreen.Trim,V.local.iID,V.Local.sSQL)
'F.Intrinsic.String.Build("Select * From GCG_Screen_Comp Where Rib_Wire_No = '{0}' And Wrap_Wire_No = '{1}'",v.Screen.frmComp!txtRibWireAMW#.Text.Trim,v.Screen.frmComp!txtWrapWireAMW#.Text.trim,v.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Screen_ID(V.Local.sScreen.Trim)
	F.ODBC.conX!rst.Set!Comp_ID(V.Local.iID)
F.Intrinsic.Control.EndIf

'grab heat and serial for the rib wire based off of the issued material lot number.
F.Intrinsic.String.Build("Select Heat,Serial_NUMBER From V_Item_History Where Lot = '{0}' And job = '{1}' And Suffix = '{2}' ",V.Local.sRibWire.Trim,V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstRibHeat",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rstRibHeat.EOF,=,False)
	'grab heat and serial and update necessary fields
	F.ODBC.conX!rst.Set!Inv_Rib_Heat(V.ODBC.conX!rstRibHeat.FieldValTrim!Heat)
	V.Local.sRibHeat.Set(V.ODBC.conX!rstRibHeat.fieldvaltrim!Heat)
	F.ODBC.conX!rst.Set!Inv_Rib_Serial(V.ODBC.conX!rstRibHeat.FieldValTrim!Serial_NUmber)
	V.Local.sRibSerial.Set(V.ODBC.conX!rstribheat.FieldValTrim!Serial_number)
F.Intrinsic.Control.Else
	F.Intrinsic.Debug.SetLA("Rib Wire Heat and Serial Information not found based on basis. ")
F.Intrinsic.Control.EndIf
F.ODBC.conX!rstRibHeat.Close


'grab heat and serial for the wrap wire
F.Intrinsic.String.Build("Select Heat,Serial_NUMBER From V_Item_History Where Lot = '{0}' And job = '{1}' And Suffix = '{2}' ",V.Local.sWrapWire.Trim,V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)

F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstWireHeat",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rstWireHeat.EOF,=,False)
	'grab heat and serial for the wrap number
	F.ODBC.conX!rst.Set!Inv_Wrap_Heat(V.ODBC.conX!rstWireHeat.FieldValTrim!Heat)
	V.Local.sWrapHeat.Set(V.ODBC.conX!rstWireHeat.FieldValTrim!Heat)
	F.ODBC.conX!rst.Set!Inv_Wrap_Serial(V.ODBC.conX!rstWireHeat.FieldValTrim!Serial_Number)
	V.Local.sWrapSerial.Set(V.ODBC.conX!rstWireHeat.FieldValTrim!Serial_Number)
	
F.Intrinsic.Control.Else
	F.Intrinsic.Debug.SetLA("Wrap Wire heat and Serial Information not found based on basis.")
F.Intrinsic.Control.endif
F.ODBC.conX!rstWireHeat.Close


'commented out becuase it does not work et al.
'default our blank numeric text boxes to zero if they are not numeric
''Rib Length
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtRibLength.Text,0,v.Local.iC)

''Num Ribs
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtNumberofRibs.Text,0,v.Screen.frmComp!txtNumebrofRibs.Text)
''Actual Cut Length
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtActCutLength.Text,0,v.Screen.frmComp!txtActCutLength.Text)
''RPM
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtRPM.Text,0,v.Screen.frmComp!txtRPM.Text)
''Amps
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtAmps.Text,0,v.Screen.frmComp!txtAmps.Text)
''volts
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtVolts.Text,0,v.Screen.frmComp!txtVolts.Text)

'update our screen information to RST recordset
F.ODBC.conX!rst.Set!Machine(V.Screen.frmComp!txtMachine.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmComp!txtRibLength.Text)
F.ODBC.conX!rst.Set!Rib_Length(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmComp!txtNumberoRibs.Text)
F.ODBC.conX!rst.Set!Num_Ribs(V.Args.Output)
F.ODBC.conX!rst.Set!Rib_Wire_No(V.Screen.frmComp!txtRibWireAMW#.Text)
F.ODBC.conX!rst.Set!Wrap_Wire_No(V.Screen.frmComp!txtWrapWireAMW#.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtActCutLength.Text)
F.ODBC.conX!rst.Set!Act_Cut_Length(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtRPM.Text)
F.ODBC.conX!rst.Set!RPM(V.Args.Output)
F.ODBC.conX!rst.Set!Heat_ControL(V.Screen.frmComp!txtHeatControl.Text)
F.ODBC.conX!rst.Set!Computer(V.Screen.frmComp!txtComputer.Text)
F.ODBC.conX!rst.Set!Transformer(V.Screen.frmComp!txtTransformer.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtArmWeight.Text)
F.ODBC.conX!rst.Set!Arm_Weight(V.args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtAmps.Text)
F.ODBC.conX!rst.Set!Amps(V.args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtVolts.Text)
F.ODBC.conX!rst.Set!Volts(V.args.Output)
F.ODBC.conX!rst.Set!Empl_Last_Change(V.Global.sEmpID)
F.ODBC.conX!rst.Set!Date_Last_Change(V.Ambient.Date)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

'selecting the existing record from GCG_Screen_Comp, if one does not exist, build the key values to write a new record
F.Intrinsic.String.Build("Select * From GCG_Screen_Comp_Hist Where Job = '{0}' And Suffix = '{1}' ANd Seq = '{2}' And Serial = '{3}' And Screen_ID = '{4}' And Comp_ID = '{5}' ",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSeq,V.Global.sSerial.Trim,V.Local.sScreen.Trim,V.local.iID,V.Local.sSQL)
'F.Intrinsic.String.Build("Select * From GCG_Screen_Comp Where Rib_Wire_No = '{0}' And Wrap_Wire_No = '{1}'",v.Screen.frmComp!txtRibWireAMW#.Text.Trim,v.Screen.frmComp!txtWrapWireAMW#.Text.trim,v.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Screen_ID(V.Local.sScreen.Trim)
	F.ODBC.conX!rst.Set!Comp_ID(V.Local.iID)
F.Intrinsic.Control.EndIf

'grab heat and serial for the rib wire based off of the issued material lot number.
'F.Intrinsic.String.Build("Select Heat,Serial_NUMBER From V_Item_History Where Lot = '{0}' And job = '{1}' And Suffix = '{2}' ",V.Local.sRibWire.Trim,V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)
'F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstRibHeat",V.Local.sSQL)
'F.Intrinsic.Control.If(V.ODBC.conX!rstRibHeat.EOF,=,False)
'	'grab heat and serial and update necessary fields
'	F.ODBC.conX!rst.Set!Inv_Rib_Heat(V.ODBC.conX!rstRibHeat.FieldValTrim!Heat)
'	F.ODBC.conX!rst.Set!Inv_Rib_Serial(V.ODBC.conX!rstRibHeat.FieldValTrim!Serial_NUmber)
'F.Intrinsic.Control.Else
'	F.Intrinsic.Debug.SetLA("Rib Wire Heat and Serial Information not found based on basis. ")
'F.Intrinsic.Control.EndIf
'F.ODBC.conX!rstRibHeat.Close
F.ODBC.conX!rst.Set!Inv_Rib_Heat(V.Local.sRibHeat)
F.ODBC.conX!rst.Set!Inv_Rib_Serial(V.Local.sRibSerial)


'grab heat and serial for the wrap wire
'F.Intrinsic.String.Build("Select Heat,Serial_NUMBER From V_Item_History Where Lot = '{0}' And job = '{1}' And Suffix = '{2}' ",V.Local.sWrapWire.Trim,V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)
'
'F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstWireHeat",V.Local.sSQL)
'F.Intrinsic.Control.If(V.ODBC.conX!rstWireHeat.EOF,=,False)
'	'grab heat and serial for the wrap number
'	F.ODBC.conX!rst.Set!Inv_Wrap_Heat(V.ODBC.conX!rstWireHeat.FieldValTrim!Heat)
'	F.ODBC.conX!rst.Set!Inv_Wrap_Serial(V.ODBC.conX!rstWireHeat.FieldValTrim!Serial_Number)
'F.Intrinsic.Control.Else
'	F.Intrinsic.Debug.SetLA("Wrap Wire heat and Serial Information not found based on basis.")
'F.Intrinsic.Control.endif
'F.ODBC.conX!rstWireHeat.Close
F.ODBC.conX!rst.Set!Inv_Wrap_Heat(V.local.sWrapHeat)
F.ODBC.conX!rst.Set!Inv_Wrap_Serial(V.Local.sWrapSerial)

'commented out becuase it does not work et al.
'default our blank numeric text boxes to zero if they are not numeric
''Rib Length
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtRibLength.Text,0,v.Local.iC)

''Num Ribs
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtNumberofRibs.Text,0,v.Screen.frmComp!txtNumebrofRibs.Text)
''Actual Cut Length
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtActCutLength.Text,0,v.Screen.frmComp!txtActCutLength.Text)
''RPM
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtRPM.Text,0,v.Screen.frmComp!txtRPM.Text)
''Amps
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtAmps.Text,0,v.Screen.frmComp!txtAmps.Text)
''volts
'F.Intrinsic.Variable.SetNumeric(v.Screen.frmComp!txtVolts.Text,0,v.Screen.frmComp!txtVolts.Text)

'update our screen information to RST recordset
F.ODBC.conX!rst.Set!Machine(V.Screen.frmComp!txtMachine.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmComp!txtRibLength.Text)
F.ODBC.conX!rst.Set!Rib_Length(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmComp!txtNumberoRibs.Text)
F.ODBC.conX!rst.Set!Num_Ribs(V.Args.Output)
F.ODBC.conX!rst.Set!Rib_Wire_No(V.Screen.frmComp!txtRibWireAMW#.Text)
F.ODBC.conX!rst.Set!Wrap_Wire_No(V.Screen.frmComp!txtWrapWireAMW#.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtActCutLength.Text)
F.ODBC.conX!rst.Set!Act_Cut_Length(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtRPM.Text)
F.ODBC.conX!rst.Set!RPM(V.Args.Output)
F.ODBC.conX!rst.Set!Heat_ControL(V.Screen.frmComp!txtHeatControl.Text)
F.ODBC.conX!rst.Set!Computer(V.Screen.frmComp!txtComputer.Text)
F.ODBC.conX!rst.Set!Transformer(V.Screen.frmComp!txtTransformer.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtArmWeight.Text)
F.ODBC.conX!rst.Set!Arm_Weight(V.args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtAmps.Text)
F.ODBC.conX!rst.Set!Amps(V.args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmComp!txtVolts.Text)
F.ODBC.conX!rst.Set!Volts(V.args.Output)
F.ODBC.conX!rst.Set!Empl_Last_Change(V.Global.sEmpID)
F.ODBC.conX!rst.Set!Date_Last_Change(V.Ambient.Date)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close


'V.Global.bNewComp.Set(True)

'Gui.frmComp.ddlScreenID.Enabled(True)
'Gui.frmComp.ddlScreenID.SetMetaData("")
Gui.frmComp.ddlScreenID.Text("")
F.Intrinsic.Control.If(V.Screen.frmComp!chkScrChk.Value,=,1)
	
	F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{3}' And Screen_ID = 'Screen' and process = 'Screen'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSerial.trim,V.Global.sSeq.trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And SEQ = '{3}' And Screen_ID = 'Screen' and process = 'Screen'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSerial.trim,V.Global.sSeq.trim,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
	F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst","SELECT * FROM GCG_DRIFT")
	F.ODBC.conx!rst.AddNew
	F.ODBC.conx!rst.Set!JOB(V.Global.sJob)
	F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuffix)
	F.ODBC.conx!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
	F.ODBC.conx!rst.Set!SCREEN_ID("Screen")
	F.ODBC.conx!rst.Set!PROCESS("Screen")
	F.ODBC.conx!rst.Set!REC_ID(0)
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Update
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{3}' And Screen_ID = 'Screen' and process = 'Screen' ",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSerial.trim,V.Global.sSeq.trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And SEQ = '{3}' And Screen_ID = 'Screen' and process = 'Screen'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSerial.trim,V.Global.sSeq.trim,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.CallSub(Clearscreen_comptext)

'won't do this.
F.Intrinsic.Control.If(V.Global.bRod,=,True)
	Gui.frmComp.cmdSave_FrmComp.SetFocus
	F.Intrinsic.Control.CallSub(Frmcomp_unload)
F.Intrinsic.Control.Else
	Gui.frmComp.ddlScreenID.SetFocus
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.UI.CloseWaitDialog
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdsave_frmcomp_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdsave_frmcomp_click.End

program.sub.cmdprtlbl_frmcomp_click.start
F.Intrinsic.Control.SetErrorHandler("cmdprtlbl_frmcomp_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iRptID.Declare(Long)
V.Local.sParams.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.sVals.Declare(String)

V.Local.sScreen.Set(V.Screen.frmComp!ddlScreenID.Text)

F.Intrinsic.Control.If(V.Global.bRod,=,False)
	F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
		'screen id must be selected in order to print?
		F.Intrinsic.UI.Msgbox("Screen ID must be selected to print label.")
		Gui.frmComp.ddlScreenID.SetFocus
		F.Intrinsic.Control.exitsub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Global.BI.GetIDFromName("GCG_RibWrap_Lbl.lab",True,V.Local.iRptID)
F.Intrinsic.Control.If(V.Local.iRptID,<=,0)
	F.Intrinsic.UI.Msgbox("GCG_RibWrap_Lbl.lab not found as active report id within Report Maintenance")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	V.local.sParams.Set("WO*!*Serial*!*Screen_ID")
	F.Intrinsic.Debug.SetLA("Report ID: ",V.Local.iRptID)
'	F.Intrinsic.String.Split("WO*!*Serial*!*Screen_ID","*!*",V.Local.sParams)
	F.Intrinsic.Debug.SetLA("Params: ",V.Local.sParams)
'	F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Screen.frmComp!ddlScreenID.Text,V.Screen.frmComp!txtWODesc.Text,V.Local.sVals)
	F.Intrinsic.Control.If(V.Global.sSuffix.Trim,=,"")
		F.Intrinsic.String.Build("{0}!*{2}*!*{3}",V.Global.sJob.Trim,V.Global.sSerial,V.local.sScreen.trim,V.Local.sVals)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}   {1}*!*{2}*!*{3}",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial,V.Local.sScreen,V.Local.sVals)
	F.Intrinsic.Control.EndIf
	'only printing serial and screen id to label
'	F.Intrinsic.String.Build("{0}*!*{1}",V.Global.sSerial.Trim,V.Local.sScreen.Trim,V.Local.sVals)

	F.Intrinsic.String.Split(V.Local.sParams,"*!*",V.Local.sParams)
	F.Intrinsic.String.Split(V.Local.sVals,"*!*",V.Local.sVals)
	F.Intrinsic.Debug.SetLA("Values: ",V.Local.sVals)
	F.Global.BI.PrintCodesoftLabel(V.Local.iRptID,V.Local.sParams,V.Local.sVals,False,"",1)
	
F.Intrinsic.Control.EndIf



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdprtlbl_frmcomp_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdprtlbl_frmcomp_click.End

program.sub.cmdsave_frmpipeop_click.start
F.Intrinsic.Control.SetErrorHandler("cmdsave_frmpipeop_click_Err")
F.Intrinsic.Control.ClearErrors

'this subroutine will fire when they click save on the Pipe Operations Screen.
'We are goin to save the Actual measurements that they entered into the THread_Actual Table
V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sPipeEnd.Declare(String)

'commented out because this only pertains to threading.  moved to the statement that updates the threading records
'drop down must be filled out
'V.Local.sPipeEnd.Set(V.Screen.frmPipeOps!cboPipeEnd_FrmPipeOp.Text)
'F.Intrinsic.Control.If(V.Local.sPipeEnd.Trim,=,"")
'	F.Intrinsic.Control.ExitSub
'F.Intrinsic.Control.EndIf
F.Intrinsic.Control.BlockEvents
F.Intrinsic.UI.InvokeWaitDialog("Saving...")


F.Intrinsic.String.Build("Select * From GCG_Pipe_Operation Where Job = '{0}' And Suffix = '{1}' And Serial ='{2}' And Pipe_No = '{3}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Screen.frmPipeOps!txtAMWPipeNumber.Text,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)

	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Pipe_NO(V.Screen.frmPipeOps!txtAMWPipeNumber.Text)

	'update Checkboxes: this is oging to be default. the record doesn't exist so update them default
	'Perf Pattern
	F.ODBC.conX!rst.Set!Perf_Pat_Chk(V.Screen.frmPipeOps!chkPerfPatternCHeck.Value)
	F.ODBC.conX!rst.Set!Perf_Pat_Chk_User("")
	F.ODBC.conX!rst.Set!Perf_Pat_Chk_Date("1900-01-01")
	
	'Perf Complete
	F.ODBC.conX!rst.Set!Perf_Comp(V.Screen.frmPipeOps!chkPerfComplete_frmPipeOp.Value)
	F.ODBC.conX!rst.Set!Perf_User("")
	F.ODBC.conX!rst.Set!Perf_Date("1900-01-01")
	
	
	'Deburr Complete
	F.ODBC.conX!rst.Set!Deb_Comp(V.Screen.frmPipeOps!chkDbrrComplete_frmPipeOp.Value)
	F.ODBC.conX!rst.Set!Deb_User("")
	F.ODBC.conX!rst.Set!Deb_Date("1900-01-01")

	'Blow Out
	F.ODBC.conX!rst.Set!Blow_Out(V.Screen.frmPipeOps!chkBlowOut_frmPipeOp.Value)
	F.ODBC.conX!rst.Set!Blow_Out_User("")
	F.ODBC.conX!rst.Set!Blow_Out_date("1900-01-01")

	'profile gauge
	F.ODBC.conX!rst.Set!Profile_gauge_chk(V.Screen.frmPipeOps!chkProfGage.valUe)
	F.ODBC.conX!rst.Set!profile_Gauge_User("")
	F.ODBC.conX!rst.Set!Prof_Gauge_Chk_Date("1900-01-01")

	'visual inspection
	F.ODBC.conX!rst.Set!Visual_Insp(V.Screen.frmPipeOps!chkVispInsp.Value)
	F.ODBC.conX!rst.Set!Visual_Insp_User("")
	F.ODBC.conX!rst.Set!Visual_Insp_date("1900-01-01")
F.Intrinsic.Control.EndIf





'we only have to save the next 3 fields.  The checkboxes update their own data.
'F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
'F.ODBC.conX!rst.Set!Pipe_NO(V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtPipeCutLength.Text)
F.ODBC.conX!rst.Set!Pipe_Cut_Length(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtActualCutLEngth.Text)
F.ODBC.conX!rst.Set!Act_Cut_Length(V.Args.Output)
'F.ODBC.conX!rst.Set!Thread_Type(V.Screen.frmPipeOps!txtThreadType_Act.Text)
	'the thread type will be stored in 2 records in the Thread_actual table so there's no need to save it here.
'Drift Value
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtDrift.Text)
F.ODBC.conX!rst.Set!Drift(V.Args.output)

'empl last change and deate last chang e
F.ODBC.conX!rst.Set!Empl_Last_Change(V.Global.sEmpID)
F.ODBC.conX!rst.Set!Date_Last_Change(V.Ambient.Date.PervasiveDate)


F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

'update our pipe Op hist table

F.Intrinsic.String.Build("Select * From GCG_Pipe_Oper_Hist Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Serial ='{3}' And Pipe_No = '{4}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.global.SSEQ,V.Global.sSerial.Trim,V.Screen.frmPipeOps!txtAMWPipeNumber.Text,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!sEQ(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Pipe_NO(V.Screen.frmPipeOps!txtAMWPipeNumber.Text)

	'update Checkboxes: this is oging to be default. the record doesn't exist so update them default
	'Perf Pattern
	F.ODBC.conX!rst.Set!Perf_Pat_Chk(V.Screen.frmPipeOps!chkPerfPatternCHeck.Value)
	F.ODBC.conX!rst.Set!Perf_Pat_Chk_User("")
	F.ODBC.conX!rst.Set!Perf_Pat_Chk_Date("1900-01-01")
	
	'Perf Complete
	F.ODBC.conX!rst.Set!Perf_Comp(V.Screen.frmPipeOps!chkPerfComplete_frmPipeOp.Value)
	F.ODBC.conX!rst.Set!Perf_User("")
	F.ODBC.conX!rst.Set!Perf_Date("1900-01-01")
	
	
	'Deburr Complete
	F.ODBC.conX!rst.Set!Deb_Comp(V.Screen.frmPipeOps!chkDbrrComplete_frmPipeOp.Value)
	F.ODBC.conX!rst.Set!Deb_User("")
	F.ODBC.conX!rst.Set!Deb_Date("1900-01-01")

	'Blow Out
	F.ODBC.conX!rst.Set!Blow_Out(V.Screen.frmPipeOps!chkBlowOut_frmPipeOp.Value)
	F.ODBC.conX!rst.Set!Blow_Out_User("")
	F.ODBC.conX!rst.Set!Blow_Out_date("1900-01-01")

	'profile gauge
	F.ODBC.conX!rst.Set!Profile_gauge_chk(V.Screen.frmPipeOps!chkProfGage.valUe)
	F.ODBC.conX!rst.Set!profile_Gauge_User("")
	F.ODBC.conX!rst.Set!Prof_Gauge_Chk_Date("1900-01-01")

	'visual inspection
	F.ODBC.conX!rst.Set!Visual_Insp(V.Screen.frmPipeOps!chkVispInsp.Value)
	F.ODBC.conX!rst.Set!Visual_Insp_User("")
	F.ODBC.conX!rst.Set!Visual_Insp_date("1900-01-01")
F.Intrinsic.Control.EndIf





'we only have to save the next 3 fields.  The checkboxes update their own data.
'F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
'F.ODBC.conX!rst.Set!Pipe_NO(V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtPipeCutLength.Text)
F.ODBC.conX!rst.Set!Pipe_Cut_Length(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtActualCutLEngth.Text)
F.ODBC.conX!rst.Set!Act_Cut_Length(V.Args.Output)
'F.ODBC.conX!rst.Set!Thread_Type(V.Screen.frmPipeOps!txtThreadType_Act.Text)
	'the thread type will be stored in 2 records in the Thread_actual table so there's no need to save it here.
'Drift Value
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtDrift.Text)
F.ODBC.conX!rst.Set!Drift(V.Args.output)

'empl last change and deate last chang e
F.ODBC.conX!rst.Set!Empl_Last_Change(V.Global.sEmpID)
F.ODBC.conX!rst.Set!Date_Last_Change(V.Ambient.Date.PervasiveDate)
'
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

''drop down must be filled out for threading
V.Local.sPipeEnd.Set(V.Screen.frmPipeOps!cboPipeEnd_FrmPipeOp.Text)
F.Intrinsic.Control.If(V.Local.sPipeEnd.Trim,=,"")
	F.Intrinsic.UI.Msgbox("Threaded End Missing")
	F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.UI.CloseWaitDialog
''	F.Intrinsic.Control.CallSub(Clearscreen_pipeops)
''	F.Intrinsic.Control.CallSub(Frmpipeops_unload)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'
F.Intrinsic.String.Build("Select * From GCG_Thread_Actual Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Pipe_End  = '{3}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.local.sPipeEnd.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQl)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Pipe_End(V.Screen.frmPipeOps!cboPipeEnd_FrmPipeOp.Text)
	
	'default my checkboxes
	'Visual Insp
	F.ODBC.conX!rst.Set!Visual_Insp_Chk(V.Screen.frmPipeOps!chkVispInsp.Value)
	F.ODBC.conX!rst.Set!Visual_Insp_User("")
	F.ODBC.conX!rst.Set!Visual_Insp_Date("1900-01-01")

	'Profile Gauge
	F.ODBC.conX!rst.Set!Profile_Gauge_Chk(V.Screen.frmPipeOps!chkProfGage.Value)
	F.ODBC.conX!rst.Set!Profile_Gauge_User("")
	F.ODBC.conX!rst.Set!Prof_Gauge_Chk_Date("1900-01-01")
F.Intrinsic.Control.EndIf

F.ODBC.conX!rst.Set!Pipe_No(V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
F.ODBC.conX!rst.Set!Thread_Type(V.Screen.frmPipeOps!txtThreadType_Act.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtRingGauge_Act.Text)
F.ODBC.conX!rst.Set!Ring_Gage(V.Args.Output)
F.ODBC.conX!rst.Set!Thread_Length(V.Screen.frmpipeops!txtThreadLength_Act.Text)
F.ODBC.conX!rst.Set!Thread_Height(V.Screen.frmpipeops!txtThreadHeight_Act.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtTaper_Act.Text)
F.ODBC.conX!rst.Set!Taper(V.args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtThreadPerInch_Act.Text)
F.ODBC.conX!rst.Set!Thread_Per_Inch(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtLead_Act.Text)
F.ODBC.conX!rst.Set!Lead(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtMinFullCrestThread_Act.Text)
F.ODBC.conX!rst.Set!Min_Full_Crest_Thrd(V.Args.Output)

F.ODBC.conX!rst.Set!Empl_Last_Change(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Date_Last_Change(v.Ambient.Date.PervasiveDate)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

'Update History
F.Intrinsic.String.Build("Select * From GCG_Thread_Act_Hist Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Serial = '{3}' And Pipe_End  = '{4}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSeq,V.Global.sSerial.Trim,V.local.sPipeEnd.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQl)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Pipe_End(V.Screen.frmPipeOps!cboPipeEnd_FrmPipeOp.Text)
	
	'default my checkboxes
	'Visual Insp
	F.ODBC.conX!rst.Set!Visual_Insp_Chk(V.Screen.frmPipeOps!chkVispInsp.Value)
	F.ODBC.conX!rst.Set!Visual_Insp_User("")
	F.ODBC.conX!rst.Set!Visual_Insp_Date("1900-01-01")

	'Profile Gauge
	F.ODBC.conX!rst.Set!Profile_Gauge_Chk(V.Screen.frmPipeOps!chkProfGage.Value)
	F.ODBC.conX!rst.Set!Profile_Gauge_User("")
	F.ODBC.conX!rst.Set!Prof_Gauge_Chk_Date("1900-01-01")
F.Intrinsic.Control.EndIf

F.ODBC.conX!rst.Set!Pipe_No(V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
F.ODBC.conX!rst.Set!Thread_Type(V.Screen.frmPipeOps!txtThreadType_Act.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtRingGauge_Act.Text)
F.ODBC.conX!rst.Set!Ring_Gage(V.Args.Output)
F.ODBC.conX!rst.Set!Thread_Length(V.Screen.frmpipeops!txtThreadLength_Act.Text)
F.ODBC.conX!rst.Set!Thread_Height(V.Screen.frmpipeops!txtThreadHeight_Act.Text)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtTaper_Act.Text)
F.ODBC.conX!rst.Set!Taper(V.args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtThreadPerInch_Act.Text)
F.ODBC.conX!rst.Set!Thread_Per_Inch(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtLead_Act.Text)
F.ODBC.conX!rst.Set!Lead(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"input",V.Screen.frmPipeOps!txtMinFullCrestThread_Act.Text)
F.ODBC.conX!rst.Set!Min_Full_Crest_Thrd(V.Args.Output)

F.ODBC.conX!rst.Set!Empl_Last_Change(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Date_Last_Change(v.Ambient.Date.PervasiveDate)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

F.Intrinsic.Control.If(V.Screen.frmPipeOps!chkDbDrComplete_frmPipeOps.Value,=,1)
	
	F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{2}' AND SERIAL = '{3}'  And Screen_ID = 'Pipe' and process = 'Deburr'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSeq.trim,V.Global.sSerial.trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}'  And SEQ = '{2}' AND SERIAL = '{3}' And Screen_ID = 'Pipe' and process = 'Deburr'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSeq.trim,V.Global.sSerial.trim,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
	F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst","SELECT * FROM GCG_DRIFT")
	F.ODBC.conx!rst.AddNew
	F.ODBC.conx!rst.Set!JOB(V.Global.sJob)
	F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuffix)
	F.ODBC.conx!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
	F.ODBC.conx!rst.Set!SCREEN_ID("Pipe")
	F.ODBC.conx!rst.Set!PROCESS("Deburr")
	F.ODBC.conx!rst.Set!REC_ID(0)
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Update
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{2}' AND SERIAL = '{3}' And Screen_ID = 'Pipe' and process = 'Deburr'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSeq.trim,V.Global.sSerial.trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{2}' AND SERIAL = '{3}' And Screen_ID = 'Pipe' and process = 'Deburr'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSeq.trim,V.Global.sSerial.trim,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.EndIf

'F.Intrinsic.UI.Msgbox("Save Successfull","Notice!",64)
Gui.frmPipeOps..Visible(False)
F.Intrinsic.Control.CallSub(Clearscreen_pipeops)
F.Intrinsic.UI.CloseWaitDialog

F.Intrinsic.Control.CallSub(Pop_frmpipeops)

F.Intrinsic.Control.UnBlockEvents

Gui.frmPipeOps..Visible(True)
'F.Intrinsic.Control.CallSub(Frmpipeops_unload)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdsave_frmpipeop_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)

Function.Intrinsic.Control.EndIf


program.sub.cmdsave_frmpipeop_click.End

Program.Sub.ClearScreen_PipeLayout.Start
F.Intrinsic.Control.SetErrorHandler("ClearScreen_PipeLayout_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iB.Declare(Long)
V.Local.sScreen.Declare(String)
V.Local.sCode.Declare(String)
V.Local.sTemp.Declare(String)


F.Intrinsic.String.Split("BE*!*BC*!*PE*!*PC*!*C","*!*",V.Local.sScreen)

'Clear out the Pipe Layout Screen of the textboxes that have for user input.
Gui.frmPipeLayout.txtNOEnd.Text("")
Gui.frmPipeLayout.txtPipNo_frmPLay.Text("")
Gui.frmPipeLayout.txtPipeCurLength_frmPLay.Text("")
Gui.frmPipeLayout.txtPCutLength_frmPLay.Text("")
'Gui.frmPipeLayout.txtPerftoEndBlank.Text("")

Gui.frmpipelayout.chkBoxEnd_frmPLay.Value(0)
Gui.frmpipelayout.chkBxCenter_frmPLay.Value(0)
Gui.frmpipelayout.chkCenter_frmPLay.Value(0)
Gui.frmPipeLayout.chkPinCenter_frmPLay.Value(0)
Gui.frmPipeLayout.chkPinEnd_frmPlay.Value(0)


F.Intrinsic.Control.For(V.Local.iC,V.Local.sScreen.LBound,V.Local.sScreen.UBound,1)
	V.local.sCode.Set(V.Local.sScreen(v.Local.iC))
	F.Intrinsic.Control.For(V.Local.iB,1,4,1)
		F.Intrinsic.String.Build("{0}{1}",V.Local.sCode,V.Local.iB,V.Local.sTemp)
		Gui.frmPipeLayout.txt[v.local.sTemp].Text("")
	F.Intrinsic.Control.Next(V.Local.iB)
F.Intrinsic.Control.Next(V.Local.iC)





F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ClearScreen_PipeLayout_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.ClearScreen_PipeLayout.End

program.sub.chkblowout_frmpipeop_click.start
F.Intrinsic.Control.SetErrorHandler("chkblowout_frmpipeop_click_Err")
F.Intrinsic.Control.ClearErrors

'this sub will occure when the user has checked the Blow Out Checkbox on the Pipe Layou screen.
'we are updateing the table field and grabbing the user and date to store along with operation.
V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iID.Declare(Long)

F.Intrinsic.Control.BlockEvents

F.Intrinsic.String.Build("Select * From GCG_Pipe_Operation Where Job = '{0}' And Suffix = '{1}' And Serial ='{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
'	F.ODBC.conX!rst.Set!SEQ(V.Global.sSeq)
F.Intrinsic.Control.EndIf

F.ODBC.conX!rst.Set!Blow_Out(V.Screen.frmPipeOps!chkBlowOut_frmPipeOp.value)
F.ODBC.conX!rst.Set!Blow_Out_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Blow_Out_Date(v.Ambient.Date.pervasivedate)


F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

'UPDATE OUR HISTORY TABLE
F.ODBC.Connection!conX.OpenLocalRecordsetRW("RST","SELECT * FROM GCG_BLOWOUT_HIST")
F.ODBC.Connection!conX.GetID("GCG_blowout_hist","REC_ID",True,V.Local.iId)

F.ODBC.conX!rst.AddNew
F.ODBC.conX!rst.Set!REC_id(V.Local.iId)
F.ODBC.conX!rst.Set!JOB(V.Global.sJob)
F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
F.ODBC.conX!rst.Set!Seq(V.Global.sSeq.Trim)
F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.ODBC.conX!rst.Set!BLOWOUT_CHK(V.Screen.frmPipeOps!chkBlowOut_frmPipeOp.value)
F.ODBC.conX!rst.Set!BLOWOUT_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!BLOWOUT_Date(v.Ambient.Date.pervasivedate)
F.ODBC.conX!rst.Set!BLOWOUT_TIME(V.Ambient.Time)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close
F.Intrinsic.Control.UnBlockEvents


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkblowout_frmpipeop_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkblowout_frmpipeop_click.End

program.sub.chkperfcomplete_frmpipeop_click.start
F.Intrinsic.Control.SetErrorHandler("chkperfcomplete_frmpipeop_click_Err")
F.Intrinsic.Control.ClearErrors

'this sub will occure when the user has checked the PerfComple  Checkbox on the Pipe Layou screen.
'we are updateing the table field and grabbing the user and date to store along with operation.
V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iID.Declare(Long)

F.Intrinsic.Control.BlockEvents

F.Intrinsic.String.Build("Select * From GCG_Pipe_Operation Where Job = '{0}' And Suffix = '{1}' And Serial ='{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
'	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.Intrinsic.Control.EndIf

F.ODBC.conX!rst.Set!Perf_Comp(V.Screen.frmPipeOps!chkPerfComplete_frmPipeOp.value)
F.ODBC.conX!rst.Set!Perf_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Perf_Date(v.Ambient.Date.pervasivedate)


F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close


'UPDATE OUR HISTORY TABLE
F.ODBC.Connection!conX.OpenLocalRecordsetRW("RST","SELECT * FROM GCG_PERF_COMPL_HIST")
F.ODBC.Connection!conX.GetID("GCG_PERF_COMPL_HIST","REC_ID",True,V.Local.iId)
F.ODBC.conX!rst.AddNew
F.ODBC.conX!rst.Set!REC_id(V.Local.iId)
F.ODBC.conX!rst.Set!JOB(V.Global.sJob)
F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
F.ODBC.conX!rst.Set!Seq(V.Global.sSeq.Trim)
F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.ODBC.conX!rst.Set!Perf_COMPL(V.Screen.frmPipeOps!chkPerfComplete_frmPipeOp.value)
F.ODBC.conX!rst.Set!Perf_COMPL_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Perf_COMPL_Date(v.Ambient.Date.pervasivedate)
F.ODBC.conX!rst.Set!PERF_COMPL_TIME(V.Ambient.Time)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkperfcomplete_frmpipeop_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkperfcomplete_frmpipeop_click.End

program.sub.chkdbrrcomplete_frmpipeop_click.start
F.Intrinsic.Control.SetErrorHandler("chkdbrrcomplete_frmpipeop_click_Err")
F.Intrinsic.Control.ClearErrors

'this sub will occure when the user has checked the Dbrr Checkbox on the Pipe Layout screen.
'we are updateing the table field and grabbing the user and date to store along with operation.
V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iID.Declare(Long)

F.Intrinsic.Control.BlockEvents


F.Intrinsic.String.Build("Select * From GCG_Pipe_Operation Where Job = '{0}' And Suffix = '{1}' And Serial ='{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
'	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.Intrinsic.Control.EndIf

F.ODBC.conX!rst.Set!Deb_Comp(V.Screen.frmPipeOps!chkDbrrComplete_frmPipeOp.value)
F.ODBC.conX!rst.Set!Deb_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Deb_Date(v.Ambient.Date.pervasivedate)


F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close


'UPDATE OUR HISTORY TABLE
F.ODBC.Connection!conX.OpenLocalRecordsetRW("RST","SELECT * FROM GCG_DBRR_COMPL_HIST")
F.ODBC.Connection!conX.GetID("GCG_DBRR_COMPL_HIST","REC_ID",True,V.Local.iId)
F.ODBC.conX!rst.AddNew
F.ODBC.conX!rst.Set!REC_id(V.Local.iId)
F.ODBC.conX!rst.Set!JOB(V.Global.sJob)
F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
F.ODBC.conX!rst.Set!Seq(V.Global.sSeq.Trim)
F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.ODBC.conX!rst.Set!DBRR_CHK(V.Screen.frmPipeOps!chkDbrrComplete_frmPipeOp.Value)
F.ODBC.conX!rst.Set!DBRR_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!DBRR_Date(v.Ambient.Date.pervasivedate)
F.ODBC.conX!rst.Set!DBRR_TIME(V.Ambient.Time)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

F.Intrinsic.Control.UnBlockEvents


F.Intrinsic.Control.Label("chkdbrrcomplete_frmpipeop_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkdbrrcomplete_frmpipeop_click.End

program.sub.gsfglist_commandclick.start
F.Intrinsic.Control.SetErrorHandler("gsfglist_commandclick_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sScreen.Declare(String)

'they clicked on the edit within the flexgrid on the Screen Components form.
'read the row they clicked on and determine which screen id they clicked on.
'load information into the screen above.

F.Intrinsic.Control.BlockEvents
F.Intrinsic.Control.If(V.Args.key,>,0)
 	F.Intrinsic.Control.If(V.Args.column,=,1)
		'lock the drop down list so they don't change it when the loaded the comp id		
		Gui.frmComp.ddlScreenID.Enabled(False)
		V.Local.sScreen.Set(V.Screen.frmComp!ddlScreenID.Text)
		'read component id
'		Gui.frmComp.gsfgList.ReadRow(V.Args.key,V.Local.sRet)
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		'set meta data 0 of ddl to the existing comp id to be used in save		
		Gui.frmComp.ddlScreenID.SetMetaData(V.Local.sRet(0).Trim)
		'also set our global bNewComp to False since they hit edit. we are loading and existing record
		V.Global.bNewComp.Set(False)
		'open up recordset from the GCG_Screen_Comp table and load the information on to our screen text boxes
		F.Intrinsic.String.Build("Select * From GCG_Screen_Comp Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Serial = '{3}' And Screen_ID = '{4}' And Comp_ID  = '{5}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSeq,V.Global.sSerial.Trim,V.Local.sScreen.Trim,V.Local.sRet(0),V.Local.sSQL)
		F.ODBC.Connection!conX.OpenLocalRecordsetRO("Rst",V.Local.ssql)
		F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	'		load information to our screen textboxes.
			Gui.frmComp.txtMachine.Text(V.ODBC.conX!rst.FieldValTrim!Machine)
			Gui.frmComp.txtRibLength.Text(V.ODBC.conX!rst.FieldValTrim!Rib_Length)
			Gui.frmComp.txtNumberoRibs.Text(V.ODBC.conX!rst.FieldValFloat!Num_Ribs)
			Gui.frmComp.txtRibWireAMW#.Text(V.ODBC.conX!rst.FieldValTrim!Rib_Wire_No)
			Gui.frmComp.txtWrapWireAMW#.Text(V.ODBC.conX!rst.FieldValTrim!Wrap_Wire_No)
			Gui.frmComp.txtActCutLength.Text(V.ODBC.conX!rst.FieldValFloat!Act_Cut_Length)
			Gui.frmComp.txtRPM.Text(V.ODBC.conX!rst.FieldValFloat!RPM)
			Gui.frmComp.txtHeatControl.Text(V.ODBC.conX!rst.FieldValTrim!Heat_ControL)
			Gui.frmComp.txtComputer.Text(V.ODBC.conX!rst.FieldValTrim!Computer)
			Gui.frmComp.txtTransformer.Text(V.ODBC.conX!rst.FieldValTrim!Transformer)
			Gui.frmComp.txtArmWeight.texT(V.ODBC.conX!rst.FieldValFloat!Arm_Weight)
			Gui.frmComp.txtAmps.Text(V.ODBC.conX!rst.FieldValFloat!Amps)
			Gui.frmComp.txtVolts.Text(V.ODBC.conX!rst.FieldValFloat!Volts)
		F.Intrinsic.Control.EndIf
		F.ODBC.conX!rst.Close
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfglist_commandclick_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.gsfglist_commandclick.End

Program.Sub.BuildStyle.Start
F.Intrinsic.Control.SetErrorHandler("BuildStyle_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Building Sections Grid
Gui.frmPipeLayout.gsfgSections.Cols(7)
Gui.frmPipeLayout.gsfgSections.Rows(1)
Gui.frmPipeLayout.gsfgSections.Rows(2)
Gui.frmPipeLayout.gsfgSections.FixedRows(1)
Gui.frmPipeLayout.gsfgSections.SetColumnPercentages(".05:.06:.10:.15:.24:.15:.24")

Gui.frmPipeLayout.gsfgSections.TextMatrix(0,0,"Section")
Gui.frmPipeLayout.gsfgSections.TextMatrix(1,0,"Type")
Gui.frmPipeLayout.gsfgSections.TextMatrix(2,0,"Slot Size (In)")
Gui.frmPipeLayout.gsfgSections.TextMatrix(3,0,"Section Length (In)")
Gui.frmPipeLayout.gsfgSections.TextMatrix(4,0,"Act. Section Length (In)")
Gui.frmPipeLayout.gsfgSections.TextMatrix(5,0,"Perf. Length (In)")
Gui.frmPipeLayout.gsfgSections.TextMatrix(6,0,"Act. Perf. Length (In)")

Gui.frmPipeLayout.gsfgSections.BuildStyle(1,0,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,1,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,2,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,3,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,4,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,5,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,6,"type","locked",True)


Gui.frmPipeLayout.gsfgSections.BuildStyle(1,0,"Fontstyle","Bold","True")
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,1,"Fontstyle","Bold","True")
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,2,"Fontstyle","Bold","True")
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,3,"Fontstyle","Bold","True")
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,4,"Fontstyle","Bold","True")
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,5,"Fontstyle","Bold","True")
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,6,"Fontstyle","Bold","True")

Gui.frmPipeLayout.gsfgSections.BuildStyle(1,0,"Format","Alignment",4)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,1,"Format","Alignment",4)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,2,"Format","Alignment",4)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,3,"Format","Alignment",4)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,4,"Format","Alignment",4)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,5,"Format","Alignment",4)
Gui.frmPipeLayout.gsfgSections.BuildStyle(1,6,"Format","Alignment",4)


Gui.frmPipeLayout.gsfgSections.BuildStyle(2,0,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,1,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,2,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,2,"Format","Mask","0.000")
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,3,"Format","Mask","0.000")
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,4,"Format","Mask","0.000")
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,5,"Format","Mask","0.000")
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,6,"Format","Mask","0.000")
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,3,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,4,"type","locked",False)
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,5,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(2,6,"type","locked",False)


Gui.frmPipeLayout.gsfgSections.BuildStyle(3,0,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,1,"type","locked",True)
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,2,"type","locked",False)
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,2,"Format","Mask","")
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,3,"Format","Mask","")
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,4,"Format","Mask","")
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,5,"Format","Mask","")
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,6,"Format","Mask","")
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,3,"type","locked",False)
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,4,"type","locked",False)
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,4,"Format","Mask","")
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,5,"type","locked",False)
Gui.frmPipeLayout.gsfgSections.BuildStyle(3,6,"type","locked",False)

Gui.frmPipeLayout.gsfgSections.SetProperty("Enter",2)

Gui.frmPipeLayout.gsfgSections.ApplyStyle(0,1)





F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("BuildStyle_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf

Program.Sub.BuildStyle.End

program.sub.ddlscreenid_change.start
F.Intrinsic.Control.SetErrorHandler("ddlscreenid_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sScreen.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)

V.Local.sScreen.Set(V.Screen.frmComp!ddlScreenID.Text)

'Screen Componenets is now called Rib Wrap Saw screen.

F.Intrinsic.Control.If(V.Local.sScreen.Trim,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	'they have changed the drop down on the screen id on the Screen COmponents screen
	'repopulate the information based on the screen. If nothing callclear
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	'set meta data 0 of ddl to the existing comp id to be used in save		
'	Gui.frmComp.ddlScreenID.SetMetaData(V.Local.sRet(0).Trim)
	'also set our global bNewComp to False since they hit edit. we are loading and existing record
'	V.Global.bNewComp.Set(False)
	'open up recordset from the GCG_Screen_Comp table and load the information on to our screen text boxes
	F.Intrinsic.String.Build("Select * From GCG_Screen_Comp Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Serial = '{3}' And Screen_ID = '{4}' And Comp_ID  = '{5}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSeq,V.Global.sSerial.Trim,V.Local.sScreen.Trim,V.Local.sRet(0),V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("Rst",V.Local.ssql)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
'		load information to our screen textboxes.
		Gui.frmComp.txtMachine.Text(V.ODBC.conX!rst.FieldValTrim!Machine)
		Gui.frmComp.txtRibLength.Text(V.ODBC.conX!rst.FieldValTrim!Rib_Length)
		Gui.frmComp.txtNumberoRibs.Text(V.ODBC.conX!rst.FieldValFloat!Num_Ribs)
		Gui.frmComp.txtRibWireAMW#.Text(V.ODBC.conX!rst.FieldValTrim!Rib_Wire_No)
		Gui.frmComp.txtWrapWireAMW#.Text(V.ODBC.conX!rst.FieldValTrim!Wrap_Wire_No)
		Gui.frmComp.txtActCutLength.Text(V.ODBC.conX!rst.FieldValFloat!Act_Cut_Length)
		Gui.frmComp.txtRPM.Text(V.ODBC.conX!rst.FieldValFloat!RPM)
		Gui.frmComp.txtHeatControl.Text(V.ODBC.conX!rst.FieldValTrim!Heat_ControL)
		Gui.frmComp.txtComputer.Text(V.ODBC.conX!rst.FieldValTrim!Computer)
		Gui.frmComp.txtTransformer.Text(V.ODBC.conX!rst.FieldValTrim!Transformer)
		Gui.frmComp.txtArmWeight.texT(V.ODBC.conX!rst.FieldValFloat!Arm_Weight)
		Gui.frmComp.txtAmps.Text(V.ODBC.conX!rst.FieldValFloat!Amps)
		Gui.frmComp.txtVolts.Text(V.ODBC.conX!rst.FieldValFloat!Volts)
	F.Intrinsic.Control.Else
		'call clear
		F.Intrinsic.Control.CallSub(Clearscreen_comptext)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlscreenid_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.ddlscreenid_change.End

program.sub.ddlscreenid_click.start
F.Intrinsic.Control.SetErrorHandler("ddlscreenid_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.local.sScreen.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.fInches.Declare(Float)

'Rib Wrap saw screen is the new screen components screen
'
'

'they have changed the drop down on the screen id on the Screen COmponents screen
'repopulate the grid below with the necessary information for that particular screen only
F.Intrinsic.Control.BlockEvents
'Gui.frmComp.gsfgList.Visible(False)
'refresh grid
'F.Intrinsic.Control.CallSub(Buildstyle)

'reload grid based on Job,suffix,serial,screen id
'load all the components into the grid.
V.Local.sScreen.Set(V.Screen.frmComp!ddlScreenID.Text)

F.Intrinsic.String.Build("Select Screen_Length From GCG_Config Where Part = '{0}'",V.Global.sFGPart,V.Local.sSQL)

F.ODBC.Connection!conX.OpenLocalRecordsetRO("RstTemp",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!RstTemp.EOF,<>,True)
	F.Intrinsic.Math.Mult(V.ODBC.conX!rstTemp.FieldVal!Screen_Length,12,V.Local.fInches)
	Gui.frmComp.txtScreenCutLength.Text(V.Local.fInches)
'	Gui.frmComp.txtScreenCutLength.Text(V.ODBC.conX!rstTemp.FieldValTrim!Screen_Length)
'	gui.frmComp.txtscree
F.Intrinsic.Control.Else
	Gui.frmComp.txtScreenCutLength.Text("")
F.Intrinsic.Control.EndIf
F.ODBC.conX!RstTemp.Close

'read component id
'open up recordset from the GCG_Screen_Comp table and load the information on to our screen text boxes
F.Intrinsic.String.Build("Select * From GCG_Screen_Comp Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Screen_ID = '{3}' And Comp_ID  = '{4}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sScreen.Trim,V.Local.sRet(0),V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("Rst",V.Local.ssql)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
'	load information to our screen textboxes.
	Gui.frmComp.txtMachine.Text(V.ODBC.conX!rst.FieldValTrim!Machine)
	Gui.frmComp.txtRibLength.Text(V.ODBC.conX!rst.FieldValTrim!Rib_Length)
	Gui.frmComp.txtNumberoRibs.Text(V.ODBC.conX!rst.FieldValFloat!Num_Ribs)
	Gui.frmComp.txtRibWireAMW#.Text(V.ODBC.conX!rst.FieldValTrim!Rib_Wire_No)
	Gui.frmComp.txtWrapWireAMW#.Text(V.ODBC.conX!rst.FieldValTrim!Wrap_Wire_No)
	Gui.frmComp.txtActCutLength.Text(V.ODBC.conX!rst.FieldValFloat!Act_Cut_Length)
	Gui.frmComp.txtRPM.Text(V.ODBC.conX!rst.FieldValFloat!RPM)
	Gui.frmComp.txtHeatControl.Text(V.ODBC.conX!rst.FieldValTrim!Heat_ControL)
	Gui.frmComp.txtComputer.Text(V.ODBC.conX!rst.FieldValTrim!Computer)
	Gui.frmComp.txtTransformer.Text(V.ODBC.conX!rst.FieldValTrim!Transformer)
	Gui.frmComp.txtArmWeight.texT(V.ODBC.conX!rst.FieldValFloat!Arm_Weight)
	Gui.frmComp.txtAmps.Text(V.ODBC.conX!rst.FieldValFloat!Amps)
	Gui.frmComp.txtVolts.Text(V.ODBC.conX!rst.FieldValFloat!Volts)
F.Intrinsic.Control.Else
	'clear out screen.
	F.Intrinsic.Control.CallSub(Clearscreen_comptext)
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ddlscreenid_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.ddlscreenid_click.End

Program.Sub.ClearScreen_CompText.Start
F.Intrinsic.Control.SetErrorHandler("ClearScreenCompText_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'this sub will clear out the textboxes from our screen components form
'only the textboxes they put in informationto.
Gui.frmComp.txtMachine.Text("")
Gui.frmComp.txtRibLength.Text("")
Gui.frmComp.txtNumberoRibs.Text("")
Gui.frmComp.txtRibWireAMW#.Text("")
Gui.frmComp.txtWrapWireAMW#.Text("")
Gui.frmComp.txtActCutLength.Text("")
Gui.frmComp.txtRPM.Text("")
Gui.frmComp.txtHeatControl.Text("")
Gui.frmComp.txtComputer.Text("")
Gui.frmComp.txtTransformer.Text("")
Gui.frmComp.txtArmWeight.texT("")
Gui.frmComp.txtAmps.Text("")
Gui.frmComp.txtVolts.Text("")
'Gui.frmComp.ddlScreenID.Text("")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ClearScreenCompText_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.ClearScreen_CompText.End

program.sub.cbopipeend_frmpipeop_click.start
F.Intrinsic.Control.SetErrorHandler("cbopipeend_frmpipeop_click_Err")
F.Intrinsic.Control.ClearErrors

'They have selected the Pipe end from the Pipe Operations form
'based on their selection(Box,Pin) we are going to grab the Thread Standards for that particular job from the
'GCG_THread_Standard
'fill the text boxes at the top of the threading section of the form with the thread standards.
V.Local.sError.Declare(String)
V.local.sSQL.Declare(String)
V.Local.sPipeEnd.Declare(String)
V.local.sThreadType.Declare(String)
V.Local.bEx.Declare(Boolean)
V.Local.sCode.Declare(String)
V.Local.fPipeSizeFloat.Declare(Float)
V.Local.fPipeWeight.Declare(Float)
V.Local.sMessage.Declare(String)

F.Intrinsic.Control.BlockEvents
V.Local.sPipeEnd.Set(V.Screen.frmPipeOps!cboPipeEnd_FrmPipeOp.Text)
'trim it
F.Intrinsic.String.Trim(V.Local.sPipeEnd,V.Local.sPipeEnd)
F.Intrinsic.Control.If(V.Local.sPipeEnd.UCase,=,"Top")
	'if it's top that translates to Box
	V.Local.sCode.Set("TOP")
F.Intrinsic.Control.Else
	'pin translates to bottom
V.Local.sCode.Set("BOTTOM")
F.Intrinsic.Control.EndIf
	

F.Intrinsic.Control.If(V.local.sPipeEnd.Trim,<>,"")
	'Get thr thread type for each end of the pipe that was stored in the configurator table,
	'have to concat the ??_Threading field based on the users selection. Cause we have 2 threading apparently for the part.
	F.Intrinsic.String.Build("Select {0}_THREAD As Thread_Type, Pipe_Size_Float,Pipe_Weight From GCG_Config Where Part = '{1}'",V.Local.sCode,V.Global.sFGPart.Trim,V.Local.sSQL)
	F.Intrinsic.Debug.SetLA("Open for Thread Type and Pipe_Size_Float: ",V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst1",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst1.EOF,<>,True)
		V.Local.sThreadType.Set(V.ODBC.conX!rst1.FieldValTrim!Thread_Type)
		V.Local.fPipeSizeFloat.Set(V.ODBC.conX!rst1.FieldValFloat!Pipe_Size_Float)
		V.Local.fPipeWeight.Set(V.ODBC.conX!rst1.FieldValTrim!Pipe_Weight)
		Gui.frmPipeOps.txtThreadType_Stan.Text(V.Local.sThreadType.Trim)
		Gui.frmPipeOps.txtThreadType_Act.Text(V.Local.sThreadType.Trim)
	F.Intrinsic.Control.Else
		F.Intrinsic.Debug.SetLA("Thread Type Not Found for Part: ",V.Global.sFGPart.Trim)
		V.Local.sThreadType.Set("")
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rst1.Close



	F.Intrinsic.Control.If(V.Local.sThreadType.Trim,<>,"")
	'	load thread standardinformationintotheothertexboxes
		F.Intrinsic.String.Build("Select * From GCG_Config_Thread Where Thread_Type = '{0}' And Pipe_OD = '{1}'  ",V.Local.sThreadType.Trim,V.Local.fPipeSizeFloat,V.Local.sSQL)
		F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,False)
'got to have this thing.....
			Gui.frmPipeOps.txtRGage_St_Min.Text(V.ODBC.conX!rst.FieldValTrim!Ring_Gage_Min_Var)
			Gui.frmPipeOps.txtRGage_Stan_Max.Text(V.ODBC.conX!rst.FieldValTrim!Ring_Gage_Max_Var)
		
			Gui.frmPipeOps.txtThreadLength_Standard.Text(V.ODBC.conX!rst.FieldValTrim!Length)
			Gui.frmpipeops.txtThreadHeight_Standard.Text(V.ODBC.conX!rst.FieldValTrim!Height)
			Gui.frmPipeOps.txtTaper_Standard.Text(V.ODBC.conX!rst.FieldValTrim!Taper)
			Gui.frmPipeOps.txtThreadPerInch_Standard.Text(V.ODBC.conX!rst.FieldValTrim!THreads_Per_inch)
			Gui.frmPipeOps.txtLead_Standard.Text(V.ODBC.conX!rst.FieldValTrim!Lead_Tolerance)
			Gui.frmPipeOps.txtMinFullCrestThread_Standard.Text(V.ODBC.conX!rst.FieldValTrim!Min_Full_Crest)
'			Gui.frmpipeops.chkProfGage.Value(V.ODBC.conX!rst.FieldValTrim!Profile_Gauge_Chk)
'			Gui.frmPipeOps.chkVispInsp.Value(V.ODBC.conX!rst.FieldValTrim!Visual_Insp_CHK)

		F.Intrinsic.Control.Else
			F.Intrinsic.String.Concat("No records for ",V.Local.sThreadType," and ",V.Local.fPipeSizeFloat,V.Local.sMessage)
			F.Intrinsic.Ui.Msgbox(V.Local.sMessage,"Failed...")
			Gui.frmPipeOps.txtRGage_St_Min.Text("")
			Gui.frmPipeOps.txtRGage_Stan_Max.Text("")
			Gui.frmPipeOps.txtThreadLength_Standard.Text("")
			Gui.frmpipeops.txtThreadHeight_Standard.Text("")
			Gui.frmPipeOps.txtTaper_Standard.Text("")
			Gui.frmPipeOps.txtThreadPerInch_Standard.Text("")
			Gui.frmPipeOps.txtLead_Standard.Text("")
			Gui.frmPipeOps.txtMinFullCrestThread_Standard.Text("")
'			Gui.frmPipeOps.chkVispInsp.Value(0)
'			Gui.frmPipeOps.chkProfGage.Value(0)

		F.Intrinsic.Control.EndIf

		F.ODBC.conX!rst.Close

		F.Intrinsic.String.Build("Select * From GCG_Thread_Actual Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Pipe_End  = '{3}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.local.sPipeEnd.Trim,V.Local.sSQL)
		F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	'		load our pipe operations that may exist based on this pipe end chosen etc.
			Gui.frmPipeOps.txtRingGauge_Act.Text(V.ODBC.conX!rst.FieldValTrim!Ring_Gage)
			Gui.frmPipeOps.txtThreadHeight_Act.Text(V.ODBC.conX!rst.FieldValTrim!Thread_Height)
			Gui.frmPipeOps.txtThreadLength_Act.Text(V.ODBC.conX!rst.FieldValTrim!Thread_Length)
			Gui.frmPipeOps.txtTaper_Act.Text(V.ODBC.conX!rst.FieldValTrim!Taper)
			Gui.frmPipeOps.txtThreadPerInch_Act.Text(V.ODBC.conX!rst.FieldValTrim!Thread_Per_Inch)
			Gui.frmPipeOps.txtLead_Act.Text(V.ODBC.conX!rst.FieldValTrim!Lead)
			Gui.frmPipeOps.txtMinFullCrestThread_Act.Text(V.ODBC.conX!rst.FieldValTrim!Min_Full_Crest_Thrd)
			Gui.frmpipeops.chkProfGage.Value(V.ODBC.conX!rst.FieldValTrim!Profile_Gauge_Chk)
			Gui.frmPipeOps.chkVispInsp.Value(V.ODBC.conX!rst.FieldValTrim!Visual_Insp_CHK)

		F.Intrinsic.Control.Else
			'load our pipe operations that may exist based on this pipe end chosen etc.
			Gui.frmPipeOps.txtRingGauge_Act.Text("")
			Gui.frmPipeOps.txtThreadHeight_Act.Text("")
			Gui.frmPipeOps.txtThreadLength_Act.Text("")
			Gui.frmPipeOps.txtTaper_Act.Text("")
			Gui.frmPipeOps.txtThreadPerInch_Act.Text("")
			Gui.frmPipeOps.txtLead_Act.Text("")
			Gui.frmPipeOps.txtMinFullCrestThread_Act.Text("")
			Gui.frmPipeOps.chkVispInsp.Value(0)
			Gui.frmPipeOps.chkProfGage.Value(0)
		F.Intrinsic.Control.EndIf
		F.ODBC.conX!rst.Close
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Select * From GCG_Thread_Actual Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Pipe_End  = '{3}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.local.sPipeEnd.Trim,,V.Local.sSQL)
		F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)
	'		load our pipe operations that may exist based on this pipe end chosen etc.
			Gui.frmPipeOps.txtRingGauge_Act.Text(V.ODBC.conX!rst.FieldValTrim!Ring_Gage)
			Gui.frmPipeOps.txtThreadHeight_Act.Text(V.ODBC.conX!rst.FieldValTrim!Thread_Height)
			Gui.frmPipeOps.txtThreadLength_Act.Text(V.ODBC.conX!rst.FieldValTrim!Thread_Length)
			Gui.frmPipeOps.txtTaper_Act.Text(V.ODBC.conX!rst.FieldValTrim!Taper)
			Gui.frmPipeOps.txtThreadPerInch_Act.Text(V.ODBC.conX!rst.FieldValTrim!Thread_Per_Inch)
			Gui.frmPipeOps.txtLead_Act.Text(V.ODBC.conX!rst.FieldValTrim!Lead)
			Gui.frmPipeOps.txtMinFullCrestThread_Act.Text(V.ODBC.conX!rst.FieldValTrim!Min_Full_Crest_Thrd)
			Gui.frmpipeops.chkProfGage.Value(V.ODBC.conX!rst.FieldValTrim!Profile_Gauge_Chk)
			Gui.frmPipeOps.chkVispInsp.Value(V.ODBC.conX!rst.FieldValTrim!Visual_Insp_CHK)
		F.Intrinsic.Control.Else
			'load our pipe operations that may exist based on this pipe end chosen etc.
			Gui.frmPipeOps.txtRingGauge_Act.Text("")
			Gui.frmPipeOps.txtThreadHeight_Act.Text("")
			Gui.frmPipeOps.txtThreadLength_Act.Text("")
			Gui.frmPipeOps.txtTaper_Act.Text("")
			Gui.frmPipeOps.txtThreadPerInch_Act.Text("")
			Gui.frmPipeOps.txtLead_Act.Text("")
			Gui.frmPipeOps.txtMinFullCrestThread_Act.Text("")
			Gui.frmPipeOps.chkVispInsp.Value(0)
			Gui.frmPipeOps.chkProfGage.Value(0)
		F.Intrinsic.Control.EndIf
		F.ODBC.conX!rst.Close
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cbopipeend_frmpipeop_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cbopipeend_frmpipeop_click.End

program.sub.txtsuffix_main_lostfocus.start
F.Intrinsic.Control.SetErrorHandler("txtsuffix_main_lostfocus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sSuf.Declare(String)
V.Local.sSerial.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSort.Declare(String)
V.Local.bRet.Declare(Boolean)
V.Local.sNoPipe.Declare(String)
V.Local.sRouter.Declare(String)

F.Intrinsic.Control.BlockEvents

V.Local.sNoPipe.Set("RBS*!*DSPP*!*TELESCOPE*!*ES*!*DP")

V.Local.sJob.Set(V.Screen.frmMain!txtJob_Main.Text)
V.Local.sSuf.Set(V.Screen.frmMain!txtSuffix_Main.Text)

'they changed the job information on the main form job number
F.Intrinsic.String.Build("Select Router From V_Job_header Where Job = '{0}' And Suffix = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)


	Gui.frmMain.cboForm_Main.ClearItems
	V.Local.sRouter.Set(V.ODBC.conX!rst.FieldValTrim!Router)
	F.Intrinsic.String.Build("Select Sort_1 From V_Router_Header Where Router = '{0}'",v.Local.sRouter.Trim,v.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstRTR",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rstRTR.EOF,<>,True)
		V.Local.sSort.Set(V.ODBC.conX!rstRTR.FieldValTrim!Sort_1)
		F.Intrinsic.String.IsInString(V.local.sNoPipe,V.Local.sSort,True,V.Local.bRet)
		F.Intrinsic.Control.If(V.Local.bRet,=,True)
			'load for our pipes screens add pipe layout pipe operations and screen components
			Gui.frmMain.cboForm_Main.AddItem("Pipe Layout")
			Gui.frmMain.cboForm_Main.AddItem("Pipe Operations")
			Gui.frmMain.cboForm_Main.AddItem("Machine Configuration")
		F.Intrinsic.Control.Else
			Gui.frmMain.cboForm_Main.AddItem("Machine Configuration")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rstRTR.close
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("txtsuffix_main_lostfocus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.txtsuffix_main_lostfocus.End

program.sub.txtjob_main_lostfocus.start
F.Intrinsic.Control.SetErrorHandler("txtjob_main_lostfocus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sSuf.Declare(String)
V.Local.sSerial.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSort.Declare(String)
V.Local.bRet.Declare(Boolean)
V.Local.sNoPipe.Declare(String)
V.Local.sRouter.Declare(String)

F.Intrinsic.Control.BlockEvents


V.Local.sNoPipe.Set("RBS*!*DSPP*!*TELESCOPE*!*ES*!*DP")

V.Local.sJob.Set(V.Screen.frmMain!txtJob_Main.Text)
V.Local.sSuf.Set(V.Screen.frmMain!txtSuffix_Main.Text)
F.Intrinsic.Control.If(V.Local.sJob.Trim,=,"",)
	'they changed the job information on the main form job number
	F.Intrinsic.String.Build("Select Router From V_Job_header Where Job = '{0}' And Suffix = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,<>,True)


		Gui.frmMain.cboForm_Main.ClearItems
		V.Local.sRouter.Set(V.ODBC.conX!rst.FieldValTrim!Router)
		F.Intrinsic.String.Build("Select Sort_1 From V_Router_Header Where Router = '{0}'",v.Local.sRouter.Trim,v.Local.sSQL)
		F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstRTR",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.conX!rstRTR.EOF,<>,True)
			V.Local.sSort.Set(V.ODBC.conX!rstRTR.FieldValTrim!Sort_1)
			F.Intrinsic.String.IsInString(V.local.sNoPipe,V.Local.sSort,True,V.Local.bRet)
			F.Intrinsic.Control.If(V.Local.bRet,=,True)
				'load for our pipes screens add pipe layout pipe operations and screen components
				Gui.frmMain.cboForm_Main.AddItem("Pipe Layout")
				Gui.frmMain.cboForm_Main.AddItem("Pipe Operations")
				Gui.frmMain.cboForm_Main.AddItem("Machine Congifuration")
			F.Intrinsic.Control.Else
				Gui.frmMain.cboForm_Main.AddItem("Machine Configuration")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.ODBC.conX!rstRTR.close
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rst.Close
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txtjob_main_lostfocus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.txtjob_main_lostfocus.End

program.sub.chkrejected_frmplay_click.start
F.Intrinsic.Control.SetErrorHandler("chkrejected_frmplay_click_Err")
F.Intrinsic.Control.ClearErrors

'They hit the Rejected Checkbox on the Pipe Layout Form.
'
V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sPipeNo.Declare(String)
F.Intrinsic.Control.BlockEvents
V.Local.sPipeNo.Set(V.Screen.frmPipeLayout!txtPipNo_frmPLay.Text)
F.Intrinsic.Control.If(V.Local.sPipeNo.Trim,<>,"")
'	F.Intrinsic.String.Build("Update GCG_Pipe_Layout Set Rejected = '{0}' Where Job = '{1}' And Suffix = '{2}' And Serial = '{3}' And Pipe_No = '{4}'",V.Screen.frmPipeLayout!chkRejected_frmPLay.Value,V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.local.sPipeNo.Trim,V.Local.sSQL)
	F.Intrinsic.String.Build("Select Rejected From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Pipe_No = '{3}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sPipeNo.trim,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,False)
		F.ODBC.conX!rst.Set!Rejected(V.Screen.frmPipeLayout!chkRejected_frmPLay.Value)
		F.ODBC.conX!rst.Update
	F.Intrinsic.Control.Else
		F.Intrinsic.Debug.SetLA("theJobwasnotsavedbeforetheyhittherejectedtextbox.Theyaregoingtohavetosaveitfirst.Basis",V.local.ssql)
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rst.Close
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkrejected_frmplay_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkrejected_frmplay_click.End

Program.Sub.IsNumberCheck.Start
F.Intrinsic.Control.SetErrorHandler("IsNumberCheck_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sInput.Declare(String)
V.Local.sOutput.Declare(String)
V.local.bNumber.Declare(Boolean,False)


'this subroutine is there to check and see if the number is actually a number.
'oh ya and if it has a leading zero we are f'd. So i cahanged it to a string again.

V.Local.sInput.Set(V.Args.Input)
'F.Intrinsic.Math.IsNumeric(V.Local.sInput,V.Local.bNumber)
'F.Intrinsic.Control.If(V.Local.bNumber,<>,True)
'only check to see if it's blank. if its blank set it to zero.
F.Intrinsic.Control.If(V.Local.sInput.Trim,=,"")
	V.Local.SOutput.Set(0)
F.Intrinsic.Control.Else
	F.Intrinsic.math.IsNumeric(V.Local.soutput,V.Local.bNumber)
	V.Local.sOutput.Set(V.Local.sInput.trim)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.AddRV("Output",V.Local.sOutput)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("IsNumberCheck_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.IsNumberCheck.End

program.sub.chkvispinsp_click.start
F.Intrinsic.Control.SetErrorHandler("chkvispinsp_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.local.sSQL.Declare(String)
V.Local.iID.Declare(Long)

F.Intrinsic.Control.BlockEvents

F.Intrinsic.String.Build("Select * From GCG_Thread_Actual Where Job = '{0}' And Suffix = '{1}' And Serial ='{2}' And Pipe_NO = '{3}' And Pipe_End = '{4}' ",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Screen.frmPipeOps!txtAMWPipeNumber.Text,V.Screen.frmpipeops!cboPipeEnd_FrmPipeOp.Text,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
'	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Pipe_NO(V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
	F.ODBC.conX!rst.Set!Pipe_End(V.Screen.frmpipeops!cboPipeEnd_FrmPipeOp.Text)
	'only do this to set the defaults
	F.ODBC.conX!rst.Set!INV_Heat("")
	F.ODBC.conX!rst.Set!Inv_Serial("")
	F.ODBC.conX!rst.Set!Thread_Type("")
	F.ODBC.conX!rst.Set!Ring_Gage("0")
	F.ODBC.conX!rst.Set!Thread_Length("")
	F.ODBC.conX!rst.Set!Thread_Height("")
	F.ODBC.conX!rst.Set!Taper("0")
	F.ODBC.conX!rst.Set!Thread_Per_Inch("0")
	F.ODBC.conX!rst.Set!Lead("0")
	F.ODBC.conX!rst.Set!Min_Full_Crest_Thrd("0")
	F.ODBC.conX!rst.Set!Empl_Last_Change("")
	F.ODBC.conX!rst.Set!Date_Last_Change("1900-01-01")
	F.ODBC.conX!rst.Set!Empl_Last_Change("")
	F.ODBC.conX!rst.Set!Date_Last_Change("1900-01-01")
	F.ODBC.conX!rst.Set!Profile_Gauge_Chk("0")
	F.ODBC.conX!rst.Set!Profile_Gauge_User("")
	F.ODBC.conX!rst.Set!Prof_Gauge_Chk_Date("1900-01-01")
F.Intrinsic.Control.EndIf


F.ODBC.conX!rst.Set!Visual_INSP_CHK(V.Screen.frmPipeOps!chkVispInsp.value)
F.ODBC.conX!rst.Set!Visual_Insp_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Visual_Insp_Date(v.Ambient.Date.pervasivedate)

F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

'UPDATE OUR HISTORY TABLE
F.ODBC.Connection!conX.OpenLocalRecordsetRW("RST","SELECT * FROM GCG_VISP_INSP_HIST")
F.ODBC.Connection!conX.GetID("GCG_VISP_INSP_HIST","REC_ID",True,V.Local.iId)
F.ODBC.conX!rst.AddNew
F.ODBC.conX!rst.Set!REC_id(V.Local.iId)
F.ODBC.conX!rst.Set!JOB(V.Global.sJob)
F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
F.ODBC.conX!rst.Set!Seq(V.Global.sSeq.Trim)
F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.ODBC.conX!rst.Set!VISP_INSP_CHK(V.Screen.frmPipeOps!chkVispInsp.value)
F.ODBC.conX!rst.Set!VISP_INSP_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!VISP_INSP_Date(v.Ambient.Date.pervasivedate)
F.ODBC.conX!rst.Set!VISP_INSP_TIME(V.Ambient.Time)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkvispinsp_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)

Function.Intrinsic.Control.EndIf


program.sub.chkvispinsp_click.End

Program.Sub.ClearScreen_PipeOps.Start
F.Intrinsic.Control.SetErrorHandler("ClearScreen_PipeOps_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
F.Intrinsic.Control.BlockEvents

'Clear the pipe Operations screen
Gui.frmPipeOps.cboPipeEnd_FrmPipeOp.Text("")
Gui.frmPipeOps.txtAMWPipeNumber.Text("")
Gui.frmPipeOps.txtPipeCutLength.Text("")
Gui.frmPipeOps.txtActualCutLength.Text("")
Gui.frmPipeOps.txtThreadHeight_Standard.Text("")
Gui.frmPipeOps.txtRGage_St_Min.Text("")
Gui.frmpipeops.txtThreadLength_Standard.Text("")
Gui.frmPipeOps.txtThreadHeight_Standard.Text("")
Gui.frmPipeOps.txtTaper_Standard.Text("")
Gui.frmPipeOps.txtThreadPerInch_Standard.Text("")
Gui.frmPipeOps.txtLead_Standard.Text("")
Gui.frmpipeops.txtMinFullCrestThread_Standard.Text("")
Gui.frmPipeOps.txtThreadHeight_Act.Text("")
Gui.frmPipeOps.txtRingGauge_Act.Text("")
Gui.frmpipeops.txtThreadLength_Act.Text("")
Gui.frmPipeOps.txtThreadHeight_Act.Text("")
Gui.frmPipeOps.txtTaper_Act.Text("")
Gui.frmPipeOps.txtThreadPerInch_Act.Text("")
Gui.frmPipeOps.txtLead_Act.Text("")
Gui.frmpipeops.txtMinFullCrestThread_Act.Text("")
Gui.frmPipeOps.txtRGage_Stan_Max.Text("")
Gui.frmPipeOps.txtThreadType_Act.Text("")
Gui.frmPipeOps.txtThreadType_Stan.Text("")
Gui.frmPipeOps.chkProfGage.Value(0)
Gui.frmPipeOps.chkVispInsp.Value(0)

F.Intrinsic.Control.UnBlockEvents



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ClearScreen_PipeOps_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf

Program.Sub.ClearScreen_PipeOps.End

program.sub.chkperfpatterncheck_click.start
F.Intrinsic.Control.SetErrorHandler("chkperfpatterncheck_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iId.Declare(Long)

F.Intrinsic.Control.BlockEvents

F.Intrinsic.String.Build("Select * From GCG_Pipe_Operation Where Job = '{0}' And Suffix = '{1}' And Serial ='{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq.Trim)

	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.Intrinsic.Control.EndIf

F.ODBC.conX!rst.Set!Perf_Pat_Chk(V.Screen.frmPipeOps!chkPerfPatternCHeck.value)
F.ODBC.conX!rst.Set!Perf_Pat_Chk_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Perf_Pat_Chk_Date(v.Ambient.Date.pervasivedate)


F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close


'UPDATE OUR HISTORY TABLE
F.ODBC.Connection!conX.OpenLocalRecordsetRW("RST","SELECT * FROM GCG_PERF_PAT_HIST")
F.ODBC.Connection!conX.GetID("GCG_PERF_pAT_hIST","REC_ID",True,V.Local.iId)
F.ODBC.conX!rst.AddNew
F.ODBC.conX!rst.Set!REC_id(V.Local.iId)
F.ODBC.conX!rst.Set!JOB(V.Global.sJob)
F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
F.ODBC.conX!rst.Set!Seq(V.Global.sSeq.Trim)
F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.ODBC.conX!rst.Set!Perf_Pat_Chk(V.Screen.frmPipeOps!chkPerfPatternCHeck.value)
F.ODBC.conX!rst.Set!Perf_Pat_Chk_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Perf_Pat_Chk_Date(v.Ambient.Date.pervasivedate)
F.ODBC.conX!rst.Set!PERF_PAT_CHK_TIME(V.Ambient.Time)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkperfpatterncheck_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkperfpatterncheck_click.End

Program.Sub.Get_Desc.Start
F.Intrinsic.Control.SetErrorHandler("Get_Desc_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)

'grab desc and extr desc from GCG_Config Table
F.Intrinsic.String.Build("Select Description, Ext_Descr From GCG_Config Where Part = '{0}' ",V.Global.sFGPart,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstDesc",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rstDesc.EOF,=,False)
	'should always be blank when we come here.
	F.Intrinsic.String.Build("{0}{1}{2}",V.ODBC.conX!rstDesc.FieldValTrim!Description,V.Ambient.NewLine,V.ODBC.conX!rstDesc.FieldValTrim!Ext_Descr,V.Global.sPartDesc)
F.Intrinsic.Control.Else
	'make sure we have nothing lingering in there
	V.Global.sPartDesc.Set("")
F.Intrinsic.Control.EndIf
F.ODBC.conX!rstDesc.Close

'etText_Info_2FromInventory_MSt2'
F.Intrinsic.String.Build("Select Text_Info2 From Inventory_Mst2 Where part = '{0}'  ",V.Global.sFGPart,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstDesc",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rstDesc.EOF,=,False)
	'here desc may or may not be blank
	F.Intrinsic.Control.If(V.Global.sPartDesc.Trim,=,"")
		V.Global.sPartDesc.Set(V.ODBC.conX!rstDesc.FieldValTrim!Text_Info2)
	F.Intrinsic.Control.Else
		'concat the things together
		F.Intrinsic.String.Build("{0}{1}{2}",V.Global.sPartDesc,V.Ambient.NewLine,V.ODBC.conX!rstDesc.FieldValTrim!Text_Info2,V.Global.sPartDesc)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.endif

F.ODBC.conX!rstDesc.Close


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Get_Desc_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Get_Desc.End

Program.Sub.Load_Sections.Start
F.Intrinsic.Control.SetErrorHandler("Load_Sections_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.i.Declare(Long)
V.Local.iUB.Declare(Long)
V.Local.iSection.Declare(Long)
V.Local.iScreens.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.bThread.Declare(Boolean)
V.Local.sThread.Declare(String)
V.Local.sSection.Declare(String)

'hide grid while loading
Gui.frmPipeLayout.gsfgSections.Visible(False)

V.Local.iUB.Set(0)
V.Local.iSection.Set(1)
'got to get the number of screens from another table.
'v.Local.iScreens.Set(
'clear out udt
V.uGlobal.uSections.Redim(-1,-1)

'If Layout Top to Bottom and Top thread is selected, Or, Layout Bottom to Top and Bottom Thread is selected
'add Thread section - get length from GCG_CONFIG_THREAD and auto fill length column
'End If
'V.Local.bThread.Set(False)
'F.Intrinsic.Control.If(v.Screen.frmPipeLayout!ddlMeasFrom_frmPLay.Text,=,"Top To Bottom")
'redim udt?
F.Intrinsic.Control.If(V.uGlobal.uSections.UBound,=,-1)
	V.uGlobal.uSections.Redim(0,0)
	V.Local.iUB.Set(0)
F.Intrinsic.Control.Else
	F.Intrinsic.Math.Add(V.uGlobal.uSections.UBound,1,V.Local.iUB)
	V.uGlobal.uSections.RedimPreserve(0,V.Local.iUB)
F.Intrinsic.Control.EndIf

V.uGlobal.uSections(v.Local.iUB)!Section.Set(V.Local.iSection)
V.uGlobal.uSections(v.Local.iUB)!Type.Set("THREAD")
'depending upon what they select up in the ddl list for the bottom to top(PIN=Bottom) or top to bottom(Box=Top)
'our thread type is then from the gcg_config is either gonna be Top_thread, or Bottom_thread
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!ddlMeasFrom_frmPLay.Text,=,"Top to Bottom")
	V.Local.sThread.Set("Top_Thread")
F.Intrinsic.Control.ElseIf(V.Screen.frmPipeLayout!ddlMeasFrom_frmPLay.Text,=,"Bottom to Top")
	V.Local.sThread.Set("Bottom_Thread")
F.Intrinsic.Control.Else
	'exit this mess cause i don't know what to do at this point.
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("Select {0}, Pipe_Size_Float, Pipe_Weight From GCG_Config Where part = '{1}'",V.Local.sThread.Trim,V.Global.sFGPart,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstCon",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rstCon.EOF,=,True)
	F.Intrinsic.Debug.SetLA("Didnt find any records? What Do?")
	F.ODBC.conX!rstCon.Close
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	'get our gcg_Config_Thread table information
	F.Intrinsic.String.Build("Select * From GCG_Config_Thread Where Thread_Type = '{0}' And Pipe_OD = '{1}' And Pipe_Weight = '{2}'",V.ODBC.conX!rstCon.FieldValTrim![v.local.sThread],V.ODBC.conX!rstCon.FieldValFloat!Pipe_Size_Float,V.ODBC.conX!rstCon.FieldValFloat!Pipe_Weight,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstThrd",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rstThrd.EOF,<>,True)
		V.uGlobal.uSections(v.Local.iUB)!Length.Set(V.ODBC.conX!rstThrd.FieldValFloat!Length)
	F.Intrinsic.Control.Else
		V.uGlobal.uSections(v.Local.iUB)!Length.Set(0)
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rstThrd.Close
F.Intrinsic.Control.EndIf
F.ODBC.conX!rstCon.close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Load_Sections_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Load_Sections.End

program.sub.chkprofgage_click.start
F.Intrinsic.Control.SetErrorHandler("chkprofgage_click_Err")
F.Intrinsic.Control.ClearErrors

'this sub will occure when the user has checked the Profile Guage  Checkbox on the some screen.
'we are updateing the table field and grabbing the user and date to store along with operation.
V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iID.Declare(Long)

F.Intrinsic.Control.BlockEvents

F.Intrinsic.String.Build("Select * From GCG_Thread_Actual Where Job = '{0}' And Suffix = '{1}' And Serial ='{2}' And Pipe_NO = '{3}' And Pipe_End = '{4}' ",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Screen.frmPipeOps!txtAMWPipeNumber.Text,V.Screen.frmpipeops!cboPipeEnd_FrmPipeOp.Text,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("Rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
'	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
	F.ODBC.conX!rst.Set!Pipe_NO(V.Screen.frmPipeOps!txtAMWPipeNumber.Text)
	F.ODBC.conX!rst.Set!Pipe_End(V.Screen.frmpipeops!cboPipeEnd_FrmPipeOp.Text)
	'only do this to set the defaults
	F.ODBC.conX!rst.Set!INV_Heat("")
	F.ODBC.conX!rst.Set!Inv_Serial("")
	F.ODBC.conX!rst.Set!Thread_Type("")
	F.ODBC.conX!rst.Set!Ring_Gage("0")
	F.ODBC.conX!rst.Set!Thread_Length("")
	F.ODBC.conX!rst.Set!Thread_Height("")
	F.ODBC.conX!rst.Set!Taper("0")
	F.ODBC.conX!rst.Set!Thread_Per_Inch("0")
	F.ODBC.conX!rst.Set!Lead("0")
	F.ODBC.conX!rst.Set!Min_Full_Crest_Thrd("0")
	F.ODBC.conX!rst.Set!Empl_Last_Change("")
	F.ODBC.conX!rst.Set!Date_Last_Change("1900-01-01")
	F.ODBC.conX!rst.Set!Visual_insp_chk("0")
	F.ODBC.conX!rst.Set!Visual_insp_User("")
	F.ODBC.conX!rst.Set!Visual_insp_date("1900-01-01")
F.Intrinsic.Control.EndIf

F.ODBC.conX!rst.Set!Profile_Gauge_Chk(V.Screen.frmPipeOps!chkProfGage.value)
F.ODBC.conX!rst.Set!Profile_Gauge_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!Prof_Gauge_Chk_Date(v.Ambient.Date.pervasivedate)

F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

'UPDATE OUR HISTORY TABLE
F.ODBC.Connection!conX.OpenLocalRecordsetRW("RST","SELECT * FROM GCG_PROF_GAGE_HIST")
F.ODBC.Connection!conX.GetID("GCG_PROF_GAGE_HIST","REC_ID",True,V.Local.iId)
F.ODBC.conX!rst.AddNew
F.ODBC.conX!rst.Set!REC_id(V.Local.iId)
F.ODBC.conX!rst.Set!JOB(V.Global.sJob)
F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
F.ODBC.conX!rst.Set!Seq(V.Global.sSeq.Trim)
F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.ODBC.conX!rst.Set!PROF_GAGE_CHK(V.Screen.frmPipeOps!chkProfGage.value)
F.ODBC.conX!rst.Set!PROF_GAGE_User(V.Global.sEmpID)
f.ODBC.conX!rst.Set!PROF_GAGE_Date(v.Ambient.Date.pervasivedate)
F.ODBC.conX!rst.Set!PROF_gAGE_TIME(V.Ambient.Time)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chkprofgage_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.chkprofgage_click.End

Program.Sub.cmdsave_frmplay_click.Start
F.Intrinsic.Control.SetErrorHandler("cmdsave_frmplay_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sPipeNo.Declare(String)
V.Local.sControl.Declare(String)
V.Local.sConText.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSQL1.Declare(String)
V.Local.iC.Declare(String)
V.Local.sScreenId.Declare(String)
V.Local.i.Declare(Long)
V.Local.iR.Declare(Long)
V.Local.sRow.Declare(String)
V.Local.sRet.Declare(String)

V.Local.irows.Declare(Long)
' When the user clicks ok, store the data from the form in the PIPE_CONFIG table. For each check box that is checked (BE, BC, PC, PE), create a
'record in the SCREEN_CONFIG table with the Job, Suffix, Serial, and Screen ID. The screen ID will be "BE", "BC", "PC", or "PE". The serial number and
'screen ID will be combine as the serial number for the screen but stored separate for easy data collection and reporting purposes.
'have to go through each of our checkboxes.
Function.Intrinsic.Debug.Stop
V.local.sPipeNo.Set(V.Screen.frmPipeLayout!txtPipNo_frmPLay.Text)
F.Intrinsic.Control.If(V.Local.sPipeNo.Trim,=,"")
	F.Intrinsic.UI.Msgbox("Pipe Number must be entered.")
	Gui.frmPipeLayout.txtPipNo_frmPLay.SetFocus
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.BlockEvents
F.Intrinsic.UI.InvokeWaitDialog("Saving...")

'F.intrinsic.String.Build("Select * From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}' And Pipe_No = '{3}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.local.sPipeNo.trim,V.Local.sSQL)
F.intrinsic.String.Build("Select * From GCG_Pipe_Layout Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Serial = '{3}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.global.sSeq,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.Intrinsic.Control.EndIf

F.ODBC.conX!rst.Set!Pipe_NO(V.Local.sPipeNo.Trim)
'update INV_Heat and INV_Serial, 'use the FG Part and AMW PIPE NUMBER(LOT NUMBER) to grab heat and serial record, if more than one is returned, we are grabbing only the first one.
'F.Intrinsic.String.Build("Select Heat,Serial_Number From Item_Master Where Lot = '{0}'",V.local.sPipeNo.Trim,V.Local.sSQL)
F.Intrinsic.String.Build("Select Heat,Serial_NUMBER From V_Item_History Where Lot = '{0}' And job = '{1}' And Suffix = '{2}' ",V.Local.sPipeNo.Trim,V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstItm",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rstItm.EOF,=,True)
	F.ODBC.conX!rst.Set!INV_Heat("")
	F.ODBC.conX!rst.Set!INV_Serial("")
F.Intrinsic.Control.Else
	F.ODBC.conX!rst.Set!INV_Heat(V.ODBC.conX!rstItm.FieldValTrim!Heat)
	F.ODBC.conX!rst.Set!INV_Serial(V.ODBC.conX!rstItm.FieldValTrim!Serial_Number)
F.Intrinsic.Control.EndIf
F.ODBC.conX!rstItm.Close

Function.Intrinsic.Debug.Stop

F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmPipeLayout!txtPipeCurLength_frmPLay.Text)
F.ODBC.conX!rst.Set!Pipe_Length(V.Args.Output)
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmPipeLayout!txtPCutLength_frmPLay.Text)
F.ODBC.conX!rst.Set!Pipe_Cut_Length(V.Args.Output)
'NOEND references Join Number text box on Pipe Layout screen. has been changed after the fact.
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmPipeLayout!txtNOEnd.Text)
F.ODBC.conX!rst.Set!Joint_Number(V.args.Output)
F.ODBC.conX!rst.Set!Rejected(V.Screen.frmPipeLayout!chkRejected_frmPLay.Value)
F.ODBC.conX!rst.Set!Measured_From(V.Screen.frmPipeLayout!ddlMeasFrom_frmPLay.Text)
F.ODBC.conX!rst.Set!Box_End(V.Screen.frmPipeLayout!chkBoxEnd_frmPLay.Value)
F.ODBC.conX!rst.Set!Box_Center(V.Screen.frmPipeLayout!chkBxCenter_frmPLay.value)
F.ODBC.conX!rst.Set!Center(V.Screen.frmPipeLayout!chkCenter_frmPLay.Value)
F.ODBC.conX!rst.Set!Pin_Center(V.Screen.frmPipeLayout!chkPinCenter_frmPLay.Value)
F.ODBC.conX!rst.Set!Pin_End(V.Screen.frmPipeLayout!chkPinEnd_frmPlay.Value)
'F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmPipeLayout!txtScreentoEndBlank.Text)
F.ODBC.conX!rst.Set!Screen_To_End_Blank(V.Args.Output)
'F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmPipeLayout!txtPerftoEndBlank.Text)
F.ODBC.conX!rst.Set!Perf_To_End_Blank(V.Args.Output)
F.ODBC.conX!rst.Set!Empl_Last_CHange(V.Global.sEmpID)
F.ODBC.conX!rst.Set!Date_Last_Change(V.Ambient.Date)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close
Function.Intrinsic.Debug.Stop

'delete any records from our screen config table that may exist for this configuation
F.Intrinsic.String.Build("Delete From GCG_Screen_Config Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Serial = '{3}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSeq,V.Global.sSerial.Trim,V.Local.sSQL)
F.Intrinsic.Debug.SetLA("Deleting Records from GCG_Screen_Config with basis ",V.local.ssql)
F.ODBC.Connection!conX.Execute(V.Local.sSQL)

'go through each checkbox, if one happens to be checked we are going to jump to writescreenconfig and write a record into the GCG_Screen_Config table
'have to check each checkbox for c hecked value.
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkBoxEnd_frmPLay.Value,=,1)
	F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Screen.frmPipeLayout!txtBE1.Text,V.Screen.frmPipeLayout!txtBE2.Text,V.Screen.frmPipeLayout!txtBE3.Text,V.Screen.frmPipeLayout!txtBE4.Text,V.Local.sConText)
	F.Intrinsic.Control.CallSub(Write_screenconfig,"Screen","BE","Values",V.Local.sConText)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkBxCenter_frmPLay.Value,=,1)
	F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Screen.frmPipeLayout!txtBC1.Text,V.Screen.frmPipeLayout!txtBC2.Text,V.Screen.frmPipeLayout!txtBC3.Text,V.Screen.frmPipeLayout!txtBC4.Text,V.Local.sConText)
	F.Intrinsic.Control.CallSub(Write_screenconfig,"Screen","BC","Values",V.Local.sConText)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkCenter_frmPLay.Value,=,1)
	F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Screen.frmPipeLayout!txtC1.Text,V.Screen.frmPipeLayout!txtC2.Text,V.Screen.frmPipeLayout!txtC3.Text,V.Screen.frmPipeLayout!txtC4.Text,V.Local.sConText)
	F.Intrinsic.Control.CallSub(Write_screenconfig,"Screen","C","Values",V.Local.sConText)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkPinCenter_frmPLay.Value,=,1)
		F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Screen.frmPipeLayout!txtPC1.Text,V.Screen.frmPipeLayout!txtPC2.Text,V.Screen.frmPipeLayout!txtPC3.Text,V.Screen.frmPipeLayout!txtPC4.Text,V.Local.sConText)
	F.Intrinsic.Control.CallSub(Write_screenconfig,"Screen","PC","Values",V.Local.sConText)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkPinEnd_frmPlay.Value,=,1)
	F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Screen.frmPipeLayout!txtPE1.Text,V.Screen.frmPipeLayout!txtPE2.Text,V.Screen.frmPipeLayout!txtPE3.Text,V.Screen.frmPipeLayout!txtPE4.Text,V.Local.sConText)
	F.intrinsic.Control.CallSub(Write_screenconfig,"Screen","PE","Values",V.Local.sConText)
F.Intrinsic.Control.EndIf
Function.Intrinsic.Debug.Stop

Gui.frmPipeLayout.gsfgSections.Commit

'update our udt to match grid
F.Intrinsic.Math.Sub(V.Screen.frmPipeLayout!gsfgSections.Rows,1,V.Local.iRows)
F.Intrinsic.Control.For(V.Local.i,1,V.Local.iRows,1)
	Gui.frmPipeLayout.gsfgSections.ReadRow(V.Local.i,V.local.sRow)
	F.Intrinsic.Control.If(V.Local.sRow.Trim,<>,"")
		F.Intrinsic.String.Split(V.Local.sRow,"*!*",V.Local.sRow)
		F.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uSections!Section,V.Local.sRow(0),V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			'column order changes so we update our other mess, and this time we are just keep tracking our of actual values within this grid. if
			F.Intrinsic.Control.For(V.Local.iR,V.Local.sRet.LBound,V.Local.sRet.UBound,1)
				V.uGlobal.uSections(v.local.sRet(v.Local.iR))!Section.Set(V.Local.sRow(0))
				V.uGlobal.uSections(v.local.sRet(v.Local.iR))!Type.Set(V.Local.sRow(1))
				V.uGlobal.uSections(v.local.sRet(v.Local.iR))!SlotSize.Set(V.Local.sRow(2))
				'updaed actual section length to 4
				V.uGlobal.uSections(v.local.sRet(v.Local.iR))!Act_Sec_Length.Set(V.Local.sRow(4))
'				'updated actual perflength to 6
				V.uGlobal.uSections(v.local.sRet(v.Local.iR))!Act_Perf_Length.Set(V.Local.sRow(6))
			F.Intrinsic.Control.Next(V.Local.iR)
		F.Intrinsic.Control.endif
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.i)

F.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uSections!FGPart,V.global.sfgpart.trim)
F.Intrinsic.String.Build("Delete From GCG_Config_Sec_Act Where Job = '{0}' And Suffix = '{1}' And Seq = '{2}' And Serial = '{3}' And Part = '{4}'",V.global.sJob.Trim,V.global.sSuffix.Trim,V.global.SSeq,V.global.sSerial.trim,V.Global.sfgPart.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.Execute(V.Local.sSQL)
F.Odbc.Connection!Conx.OpenLocalRecordsetRW("rst","Select * From GCG_Config_Sec_Act")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Perf_Length,"Perf_Length")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Sec_Length,"Length")
		F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!STANDARD_SECTION,"standard_section")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Length,"")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!PerfLength,"")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Job,"Job")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Suffix,"Suffix")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Serial,"Serial")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Seq,"SEQ")
F.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uSections!Job,V.Global.sJob.Trim)
F.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uSections!Suffix,V.Global.sSuffix.Trim)
F.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uSections!Seq,V.Global.sSeq)
F.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uSections!Serial,V.Global.sSerial.Trim)
F.Intrinsic.Variable.SaveUDTToRecordset("conx","rst","Variable.uGlobal.uSections")
F.ODBC.conx!rst.Close
'reset this back just in case they come back and re=save or reload or something.
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Perf_Length,"")
		F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!STANDARD_SECTION,"")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Act_Sec_Length,"")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Length,"Length")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!PerfLength,"Perf_length")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Job,"")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Suffix,"")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Seq,"")
F.Intrinsic.Variable.SetUDTFieldReference(V.uGlobal.uSections!Serial,"")
'commit changes from grid to our udt

F.Intrinsic.Control.If(V.Screen.frmPipeLayout!chkLODr.Value,=,1)
	
	F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{2}' AND SERIAL = '{3}' And Screen_ID = 'Pipe' and process = 'Layout'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSeq.trim,V.Global.sSerial.trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{2}' AND SERIAL = '{3}' And Screen_ID = 'Pipe' and process = 'Layout'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSeq.trim,V.Global.sSerial.trim,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
	F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst","SELECT * FROM GCG_DRIFT")
	F.ODBC.conx!rst.AddNew
	F.ODBC.conx!rst.Set!JOB(V.Global.sJob)
	F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuffix)
	F.ODBC.conx!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
	F.ODBC.conx!rst.Set!SCREEN_ID("Pipe")
	F.ODBC.conx!rst.Set!PROCESS("Layout")
	F.ODBC.conx!rst.Set!REC_ID(0)
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Update
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' And Seq = '{2}' AND SERIAL = '{3}' And Screen_ID = 'Pipe' and process = 'Layout'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSeq.trim,V.Global.sSerial.trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' And SEQ = '{2}' AND SERIAL  = '{3}' And Screen_ID = 'Pipe' and process = 'Layout'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSeq.trim,V.Global.sSerial.trim,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.EndIf
'show them a message box
'F.Intrinsic.UI.Msgbox("Save Successfull","Notice!!",64)
'call unload for this form which brings them back to original screen
F.Intrinsic.Control.CallSub(Clearscreen_pipelayout)
F.Intrinsic.Control.CallSub(Frmpipelayout_unload)
F.Intrinsic.UI.CloseWaitDialog
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub




F.Intrinsic.Control.Label("cmdsave_frmplay_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmdsave_frmplay_click.End

program.sub.cmdbucking_click.start
F.Intrinsic.Control.SetErrorHandler("cmdbucking_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'they clicked the bucking button on the screen.
Gui.frmPipeOps..Enabled(False)
Gui.frmBucking.txtHeat_Bucking.Locked(True)

F.Intrinsic.Control.Callsub(Pop_frmbucking)

Gui.frmBucking..Show
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdbucking_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdbucking_click.End

program.sub.frmbucking_unload.start
F.Intrinsic.Control.SetErrorHandler("frmbucking_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.frmBucking..Visible(false)
Gui.frmPipeOps..Enabled(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("frmbucking_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.frmbucking_unload.End

program.sub.txtamw_bucking_change.start
F.Intrinsic.Control.SetErrorHandler("txtamw_bucking_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sAMW.Declare(String)

'F.Intrinsic.Control.BlockEvents
'F.Intrinsic.UI.Sleep(1)
'F.Intrinsic.Control.UnBlockEvents

V.local.sAMW.Set(V.Screen.frmBucking!txtAMW_Bucking.Text)
F.Intrinsic.Control.BlockEvents
F.Intrinsic.Control.If(V.Local.sAMW.Trim,<>,"")
	F.Intrinsic.String.Build("Select Heat From V_Item_History Where Lot = '{0}' And job = '{1}' And Suffix = '{2}' ",V.Local.sAMW.Trim,V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstheat",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rstheat.EOF,<>,True)
		'grab the heat number and place that in there.
		Gui.frmBucking.txtHeat_Bucking.Text(V.ODBC.conX!rstheat.FieldValTrim!Heat)
	F.Intrinsic.Control.Else
		Gui.frmBucking.txtHeat_Bucking.Text("")
	F.Intrinsic.Control.EndIf
	F.ODBC.conX!rstheat.Close
F.Intrinsic.Control.Else
	Gui.frmBucking.txtHeat_Bucking.Text("")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txtamw_bucking_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.txtamw_bucking_change.End

program.sub.cmdsave_bucking_click.start
F.Intrinsic.Control.SetErrorHandler("cmdsave_bucking_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.fActTorqVal.Declare(Float)
V.Local.bC.Declare(Boolean)

'grab PSI and make sure it's a valid number, then save that if no record is found or if a record is found
V.Local.fActTorqVal.Set(V.Screen.frmBucking!txtActTorqVal.Text)

F.Intrinsic.Math.IsNumeric(V.Local.fActTorqVal,V.Local.bC)
F.Intrinsic.Control.If(V.local.bC,=,False)
	F.Intrinsic.UI.Msgbox("Actual Torque Value is not numeric. Please Reenter.")
	Gui.frmBucking.txtActTorqVal.SetFocus
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'format our sql and determine if we should add new or just update
F.Intrinsic.String.Build("Select * From GCG_Bucking_PSI Where Job = '{0}' And Suffix = '{1}' And Serial = '{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	'add new and update what we need. 	
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Set!Part(V.Global.sFGPart.Trim)
F.ODBC.conX!rst.Set!AMW_NO(V.Screen.frmBucking!txtAMW_Bucking.Text)
F.ODBC.conX!rst.Set!Heat_NO(V.Screen.frmBucking!txtHeat_Bucking.Text)
F.ODBC.conX!rst.Set!Act_Torq_Val(V.Local.fActTorqVal)
F.ODBC.conX!rst.Set!Empl_Last_Change(V.Global.sEmpID)
F.ODBC.conX!rst.Set!Date_Last_Change(V.Ambient.Date)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

'update our bucking history table
'format our sql and determine if we should add new or just update
F.Intrinsic.String.Build("Select * From GCG_Bucking_PSI_Hist Where Job = '{0}' And Suffix = '{1}' And Seq = '{3}' And Serial = '{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	'add new and update what we need. 	
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Job(V.Global.sJob.Trim)
	F.ODBC.conX!rst.Set!Suffix(V.Global.sSuffix.Trim)
	F.ODBC.conX!rst.Set!Seq(V.Global.sSeq.Trim)
	F.ODBC.conX!rst.Set!Serial(V.Global.sSerial.Trim)
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Set!Part(V.Global.sFGPart.Trim)
F.ODBC.conX!rst.Set!AMW_NO(V.Screen.frmBucking!txtAMW_Bucking.Text)
F.ODBC.conX!rst.Set!Heat_NO(V.Screen.frmBucking!txtHeat_Bucking.Text)
F.ODBC.conX!rst.Set!Act_Torq_Val(V.Local.fActTorqVal)
F.ODBC.conX!rst.Set!Empl_Last_Change(V.Global.sEmpID)
F.ODBC.conX!rst.Set!Date_Last_Change(V.Ambient.Date)
F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close
F.Intrinsic.Control.If(V.Screen.frmBucking!chkBkDr.Value,=,1)
	
	F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{3}' And Screen_ID = 'Pipe' and process = 'Bucking'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSerial.trim,V.Global.sSeq.trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And SEQ = '{3}' And Screen_ID = 'Pipe' and process = 'Bucking'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSerial.trim,V.Global.sSeq.trim,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
	F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst","SELECT * FROM GCG_DRIFT")
	F.ODBC.conx!rst.AddNew
	F.ODBC.conx!rst.Set!JOB(V.Global.sJob)
	F.ODBC.conx!rst.Set!SUFFIX(V.Global.sSuffix)
	F.ODBC.conx!rst.Set!Seq(V.Global.sSeq)
	F.ODBC.conx!rst.Set!SERIAL(V.Global.sSerial)
	F.ODBC.conx!rst.Set!SCREEN_ID("Pipe")
	F.ODBC.conx!rst.Set!PROCESS("Bucking")
	F.ODBC.conx!rst.Set!REC_ID(0)
	F.ODBC.conx!rst.Set!EMPL_LAST_CHANGE(V.Global.sEmpID)
	F.ODBC.conx!rst.Set!DATE_LAST_CHANGE(V.Ambient.Date)
	F.ODBC.conx!rst.Update
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{3}' And Screen_ID = 'Pipe' and process = 'Bucking'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSerial.trim,V.Global.sSeq.trim,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
		F.Intrinsic.String.Build("DELETE FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And SEQ = '{3}' And Screen_ID = 'Pipe' and process = 'Bucking'",V.Global.sJob.trim,V.Global.sSuffix.trim,V.Global.sSerial.trim,V.Global.sSeq.trim,V.Local.sSQL)
		F.ODBC.Connection!conx.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rst.Close
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(Frmbucking_unload)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdsave_bucking_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdsave_bucking_click.End

Program.Sub.Pop_frmBucking.Start
F.Intrinsic.Control.SetErrorHandler("Pop_fmrBucking_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.local.sRet.Declare(String)

F.Intrinsic.String.Build("SELECT * From GCG_Bucking_PSI Where Job = '{0}' And Suffix = '{1}' And Serial='{2}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Global.sSerial.Trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,False)
	'load previous data
	F.Intrinsic.Control.BlockEvents
	Gui.frmBucking.txtAMW_Bucking.Text(V.ODBC.conX!rst.FieldValTrim!AMW_NO)
	Gui.frmBucking.txtHeat_Bucking.Text(V.ODBC.conX!rst.FieldValTrim!Heat_NO)
	Gui.frmBucking.txtActTorqVal.Text(V.ODBC.conX!rst.FieldValFloat!Act_Torq_Val)
	Gui.frmBucking.txtActTorqVal.SetFocus
	F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.Else
	'clear it out to be pretty
	F.Intrinsic.Control.BlockEvents
	Gui.frmBucking.txtAMW_Bucking.Text("")
	Gui.frmBucking.txtHeat_Bucking.Text("")
	Gui.frmBucking.txtActTorqVal.Text("")
	Gui.frmBucking.txtAMW_Bucking.SetFocus
	F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close
F.Intrinsic.String.Build("SELECT * FROM GCG_DRIFT WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SERIAL  = '{2}' And Seq = '{3}' And RTRIM(Screen_ID) = 'Pipe' and PROCESS = 'Bucking' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSerial,V.Global.sSeq,V.Local.sSQL)
F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,<>,True)
	Gui.frmBucking.chkBkDr.value(1)
F.Intrinsic.Control.Else
	Gui.frmBucking.chkBkDr.value(0)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Pop_fmrBucking_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Pop_frmBucking.End

program.sub.cmdaddring_click.start
F.Intrinsic.Control.SetErrorHandler("cmdaddring_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sINput.Declare(String)
V.Local.bEx.Declare(Boolean)
V.Local.iSection.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.iR.Declare(Long)
V.Local.iUB.Declare(Long)
V.Local.iRows.Declare(Long)
V.Local.sRow.Declare(String)
V.Local.i.Declare(Long)


'this subroutine will ask what section  they want to place a ring in the grid.
'we have to grab what we had previously and then move all up one.
F.Intrinsic.UI.Inputbox("Enter Section Number to Insert a Ring section. All subsequent sections will be increased. Example: Insert Ring at Section 2, Existing section 2 becomes 3 and Ring is inserted at Section 2.","Insert Ring Section",0,V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"***CANCEL***")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf
F.Intrinsic.Math.IsNumeric(V.Local.sRet.Trim,V.Local.bEx)
F.Intrinsic.Control.If(V.Local.bEx,=,False)
	F.Intrinsic.UI.Msgbox("Entry Must be Numeric!","Entry not Numeric")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	V.Local.iSection.Set(V.Local.sRet.Long)
	'make sure the sectio nnumber they entered is actually in our udt.
'

	F.Intrinsic.Control.If(V.local.iSection,>,0)
	'	V.Local.iUB.Set(v.uGlobal.uSections.UBound)
		Gui.frmPipeLayout.gsfgSections.Visible(False)
		V.Local.iR.Set(V.Screen.frmPipeLayout!gsfgSections.Rows)
'		F.Intrinsic.Math.Sub(V.Local.iR,1,V.Local.iR)
	'	gui.frmPipeLayout.gsfgSections.ExportToUDT("v.uglobal.uSections","0*!*1*!*2*!*3*!*4*!*5*!*6","Section*!*Type*!*SlotSize*!*Length*!*Act_Sec_Length*!*PerfLength*!*Act_Perf_Length",1,v.Local.iR,False)
		'got to use it this way since our udt and export doesn't like that we have "" float values...4
		Gui.frmPipeLayout.gsfgSections.Commit
		'updateourudttomatchgr
		F.Intrinsic.Math.Sub(V.Screen.frmPipeLayout!gsfgSections.Rows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.i,1,V.Local.iRows,1)
			Gui.frmPipeLayout.gsfgSections.ReadRow(V.Local.i,V.local.sRow)
			F.Intrinsic.Control.If(V.Local.sRow.Trim,<>,"")
				F.Intrinsic.String.Split(V.Local.sRow,"*!*",V.Local.sRow)
				F.Intrinsic.Variable.UDTMultiSeek(V.uGlobal.uSections!Section,V.Local.sRow(0),V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
					F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
					'column order changes so we update our other mess, and this time we are just keep tracking our of actual values within this grid. if
					F.Intrinsic.Control.For(V.Local.iR,V.Local.sRet.LBound,V.Local.sRet.UBound,1)
						V.uGlobal.uSections(v.local.sRet(v.Local.iR))!Section.Set(V.Local.sRow(0))
						V.uGlobal.uSections(v.local.sRet(v.Local.iR))!Type.Set(V.Local.sRow(1))
						V.uGlobal.uSections(v.local.sRet(v.Local.iR))!SlotSize.Set(V.Local.sRow(2))
						'updaed actual section length to 4
						V.uGlobal.uSections(v.local.sRet(v.Local.iR))!Act_Sec_Length.Set(V.Local.sRow(4))
		'				'updated actual perflength to 6
						V.uGlobal.uSections(v.local.sRet(v.Local.iR))!Act_Perf_Length.Set(V.Local.sRow(6))
					F.Intrinsic.Control.Next(V.Local.iR)
				F.Intrinsic.Control.endif
			F.Intrinsic.Control.endif
		F.Intrinsic.Control.Next(V.Local.i)
		'add a new ring to our udt
		V.Local.iUB.Set(V.uGlobal.uSections.UBound)
		F.Intrinsic.Math.Add(V.Local.iUB,1,V.Local.iUB)
		V.uGlobal.uSections.RedimPreserve(0,V.Local.iUB)
		V.uGlobal.uSections(v.Local.iUB)!FGPart.Set(V.Global.sFGPart.Trim)
		V.uGlobal.uSections(v.Local.iUB)!Section.Set(V.Local.iSection)
		V.uGlobal.uSections(v.Local.iUB)!Act_Perf_Length.Set(0)
		V.uGlobal.uSections(v.Local.iUB)!Act_Sec_Length.Set(0)
		V.uGlobal.uSections(v.Local.iUB)!Length.Set(0)
		V.uGlobal.uSections(v.Local.iUB)!SlotSize.Set(0)
		V.uGlobal.uSections(v.Local.iUB)!PerfLength.Set(0)
		V.uGlobal.uSections(v.Local.iUB)!Type.Set("Ring")



		F.Intrinsic.Control.For(V.Local.i,0,V.uGlobal.uSections.UBound,1)
			'if the original udt section is after out flexgrid we know that hey we need to increase this one.
			'also we only want to increase it if it's ring. This has been added to have an elseif and the andif becuase it may be the one we want to
			'not increment and make a ring, or it may be a previous one that we want to increment.
			F.Intrinsic.Control.If(V.uGlobal.uSections(v.Local.i)!Section,>,V.Local.iSection)
'			F.Intrinsic.Control.AndIf(V.uGlobal.uSections(v.Local.i)!Type,<>,"Ring")

				F.Intrinsic.Math.Add(V.uGlobal.uSections(v.Local.i)!Section,1,V.Local.iR)
				V.uGlobal.uSections(v.Local.i)!STANDARD_SECTION.Set(V.uGlobal.uSections(v.Local.i)!Section)
				V.uGlobal.uSections(v.Local.i)!Section.Set(V.local.ir)
			F.Intrinsic.Control.ElseIf(V.uGlobal.uSections(v.local.i)!Section,=,V.Local.iSection)
			F.Intrinsic.Control.AndIf(V.uGlobal.uSections(v.Local.i)!Type,<>,"Ring")
				F.Intrinsic.Math.Add(V.uGlobal.uSections(v.Local.i)!Section,1,V.Local.iR)
				V.uGlobal.uSections(v.Local.i)!STANDARD_SECTION.Set(V.uGlobal.uSections(v.Local.i)!Section)
				V.uGlobal.uSections(v.Local.i)!Section.Set(V.local.ir)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.i)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Variable.UDTMultiQuickSort(V.uGlobal.uSections!Section,False)
	F.Intrinsic.Control.If(V.uGlobal.uSections.UBound,>,-1)
		Gui.FRMpIPELayout.gsfgSections.LoadFromUDT("uGlobal.uSections","Section::0*!*Type::1*!*SlotSize::2*!*Length::3*!*Act_Sec_Length::4*!*PerfLength::5*!*Act_Perf_Length::6",2)
	F.Intrinsic.Control.EndIf
	Gui.frmPipeLayout.gsfgSections.Visible(True)
F.Intrinsic.Control.EndIf




F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdaddring_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdaddring_click.End

Program.Sub.BuildstyleScreen.Start
F.Intrinsic.Control.SetErrorHandler("BuildstyleScreen_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.ic.Declare(Long)

Gui.frmComp.gsfgScreens.Cols(4)
Gui.frmComp.gsfgScreens.Rows(1)
Gui.frmComp.gsfgScreens.Rows(2)
Gui.frmComp.gsfgScreens.FixedRows(1)
Gui.frmComp.gsfgScreens.SetColumnPercentages(".24:.24:.24:.24")


Gui.frmComp.gsfgScreens.TextMatrix(0,0,"Section")
Gui.frmComp.gsfgScreens.TextMatrix(1,0,"Screen")
Gui.frmComp.gsfgScreens.TextMatrix(2,0,"Slot Size")
Gui.frmComp.gsfgScreens.TextMatrix(3,0,"Act Section Length")

F.Intrinsic.Control.For(V.Local.iC,0,3,1)
	Gui.frmComp.gsfgScreens.BuildStyle(1,V.Local.ic,"Format","Alignment",2)
	F.Intrinsic.Control.If(V.Local.ic,=,1)
		Gui.frmComp.gsfgScreens.BuildStyle(1,V.Local.ic,"Format","Alignment",4)
		Gui.frmComp.gsfgScreens.BuildStyle(2,V.Local.ic,"Format","Alignment",4)
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Local.ic,>=,2)
			Gui.frmComp.gsfgScreens.BuildStyle(2,V.Local.ic,"Format","Mask","0.000")
		F.Intrinsic.Control.EndIf
		Gui.frmComp.gsfgScreens.BuildStyle(1,V.Local.ic,"Format","Alignment",2)
		Gui.frmComp.gsfgScreens.BuildStyle(2,V.Local.ic,"Format","Alignment",6)
	F.Intrinsic.Control.EndIf
	
	
	
	Gui.frmComp.gsfgScreens.BuildStyle(1,V.Local.ic,"Fontstyle","Bold",True)
	Gui.frmComp.gsfgScreens.BuildStyle(2,V.Local.ic,"Fontstyle","Bold",False)

	Gui.frmComp.gsfgScreens.BuildStyle(1,V.Local.ic,"type","Locked",True)
	Gui.frmComp.gsfgScreens.BuildStyle(2,V.Local.ic,"type","Locked",True)
F.Intrinsic.Control.next(V.Local.ic)

Gui.frmComp.gsfgScreens.ApplyStyle(0,1)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("BuildstyleScreen_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.BuildstyleScreen.End

program.sub.cmdremovering_click.start
F.Intrinsic.Control.SetErrorHandler("cmdremovering_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sREt.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iS.Declare(Long)
V.Local.bNum.Declare(Boolean)
F.Intrinsic.UI.Inputbox("Enter the 'Ring' section number that you would like removed. Save must be clicked after altering grid.","Remove Ring",0,V.Local.sREt)
F.Intrinsic.Control.If(V.Local.sREt.Trim,=,"***CANCEL***")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Intrinsic.Math.IsNumeric(V.Local.sREt,V.Local.bNum)
	F.Intrinsic.Control.If(V.Local.bNum,=,False)
		F.Intrinsic.UI.Msgbox("User input was not numberic. Please re-enter.","Remove Ring")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		V.Local.ic.Set(V.Local.sREt)
		V.Local.iS.Set(1)
		'flag our udt element that has a ring in it.
		F.Intrinsic.Variable.UDTMultiFlag(V.uglobal.uSections!Type,"Ring",V.uGlobal.uSections!Section,V.Local.iC)
		F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uSections)
		'update our sections now with new number
		F.Intrinsic.Variable.UDTMultiQuickSort(V.uGlobal.uSections!Section,False)
		F.Intrinsic.Control.For(V.Local.iC,0,V.uGlobal.uSections.UBound,1)
			V.uGlobal.uSections(v.Local.iC)!Section.Set(V.Local.iS)
			F.Intrinsic.Math.Add(V.Local.iS,1,V.Local.iS)
		F.Intrinsic.Control.Next(V.Local.iC)
		F.Intrinsic.Variable.UDTMultiQuickSort(V.uGlobal.uSections!Section,False)
		F.Intrinsic.Control.If(V.uGlobal.uSections.UBound,>,-1)
			Gui.frmPipeLayout.gsfgSections.Visible(False)
			Gui.FRMpIPELayout.gsfgSections.LoadFromUDT("uGlobal.uSections","Section::0*!*Type::1*!*SlotSize::2*!*Length::3*!*Act_Sec_Length::4*!*PerfLength::5*!*Act_Perf_Length::6",2)
			Gui.frmPipeLayout.gsfgSections.Visible(True)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdremovering_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdremovering_click.End

program.sub.txtmachine_change.start
F.Intrinsic.Control.SetErrorHandler("txtmachine_change_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sMach.Declare(String)
V.Local.sSQL.Declare(String)

V.Local.sMach.Set(V.Screen.frmComp!txtMachine.Text)
F.Intrinsic.Control.If(V.Local.sMach.Trim,=,"")
	F.Intrinsic.Control.exitsub
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("Select * From GCG_MCH_Def_Settings Where Machine = '{0}'",V.Local.sMach.Trim,V.Local.sSQL)

F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,False)
	'load deafult information to screen.
	Gui.frmComp.txtRPM.text(V.ODBC.conX!rst.FieldValFloat!RPM)
	Gui.frmComp.txtHeatControl.Text(V.ODBC.conX!rst.FieldValTrim!Heat_Control)
	Gui.frmComp.txtComputer.Text(V.ODBC.conX!rst.FieldValTrim!Computer)
	Gui.frmComp.txtTransformer.Text(V.ODBC.conX!rst.FieldValTrim!Transformer)
	Gui.frmComp.txtArmWeight.Text(V.ODBC.conX!rst.FieldValTrim!Arm_Weight)
	Gui.frmComp.txtAmps.Text(V.ODBC.conX!rst.FieldVal!Amps)
	Gui.frmComp.txtVolts.Text(V.ODBC.conX!rst.FieldVal!Volts)
F.Intrinsic.Control.Else
	Gui.frmComp.txtRPM.text("")
	Gui.frmComp.txtHeatControl.Text("")
	Gui.frmComp.txtComputer.Text("")
	Gui.frmComp.txtTransformer.Text("")
	Gui.frmComp.txtArmWeight.Text("")
	Gui.frmComp.txtAmps.Text("")
	Gui.frmComp.txtVolts.Text("")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txtmachine_change_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


program.sub.txtmachine_change.End

program.sub.cmd_savemachcomp_click.start
F.Intrinsic.Control.SetErrorHandler("cmd_savemachcomp_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sMach.Declare(String)

V.Local.sMach.Set(V.Screen.frmComp!txtMachine.Text)

F.Intrinsic.Control.If(V.Local.sMach.Trim,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf


Gui.frmComp.lblMSettings.Caption("Saving Default Machine Settings...")
Gui.frmComp.lblMSettings.Visible(True)

'here we save something for the machine settings, yet this was not added by TRT originally.
'it was added by someone else.
'at time of doing thi 11/9/15 they haven't specified what is going to be saved, versus the original save button at the bottom of the screen.
'so basically we are gonig
F.Intrinsic.String.Build("Select * From GCG_MCH_DEF_SETTINGS WHERE Machine = '{0}'",V.local.sMach.trim,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRW("rst",V.Local.ssQL)

F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,True)
	F.ODBC.conX!rst.AddNew
	F.ODBC.conX!rst.Set!Machine(V.Local.sMach.Trim)
F.Intrinsic.Control.EndIf

'RPM
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmComp!txtRPM.Text)
F.ODBC.conX!rst.Set!RPM(V.Args.Output)

'Heat COntrolo
F.ODBC.conX!rst.Set!Heat_Control(V.Screen.frmComp!txtHeatControl.text)

'Computer
F.ODBC.conX!rst.Set!COmputer(V.Screen.frmComp!txtComputer.Text)
'Transformer
F.ODBC.conX!rst.Set!Transformer(V.Screen.frmComp!txtTransformer.Text)

'arm weight
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmComp!txtArmWeight.Text)
F.ODBC.conX!rst.Set!Arm_WEIGHT(V.Args.Output)

'AMPS
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmComp!txtAMps.Text)
F.ODBC.conX!rst.Set!Amps(V.Args.Output)

'Volts
F.Intrinsic.Control.CallSub(Isnumbercheck,"Input",V.Screen.frmComp!txtVolts.Text)
F.ODBC.conX!rst.Set!Volts(V.Args.Output)

F.ODBC.conX!rst.Update
F.ODBC.conX!rst.Close

Gui.frmComp.lblMSettings.Caption("Machine Settings Saved...")
F.Intrinsic.UI.Sleep(1)
Gui.frmComp.lblMSettings.Visible(False)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd_savemachcomp_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)

Function.Intrinsic.Control.EndIf


program.sub.cmd_savemachcomp_click.End

program.sub.txtringgauge_act_gotfocus.start

Gui.frmPipeOps.txtRingGauge_Act.SelectAll

program.sub.txtringgauge_act_gotfocus.End

program.sub.txtthreadlength_act_gotfocus.start

Gui.frmPipeOps.txtThreadLength_Act.SelectAll

program.sub.txtthreadlength_act_gotfocus.End

program.sub.txtthreadheight_act_gotfocus.start
Gui.frmPipeOps.txtThreadHeight_Act.SelectAll


program.sub.txtthreadheight_act_gotfocus.End

program.sub.txttaper_act_gotfocus.start

Gui.frmPipeOps.txtTaper_Act.SelectAll


program.sub.txttaper_act_gotfocus.End

program.sub.txtthreadperinch_act_gotfocus.start

Gui.frmPipeOps.txtThreadPerInch_Act.SelectAll

program.sub.txtthreadperinch_act_gotfocus.End

program.sub.txtlead_act_gotfocus.start
Gui.frmPipeOps.txtLead_Act.SelectAll

program.sub.txtlead_act_gotfocus.End

program.sub.txtminfullcrestthread_act_gotfocus.start
Gui.frmPipeOps.txtMinFullCrestThread_Act.SelectAll

program.sub.txtminfullcrestthread_act_gotfocus.End

program.sub.txtmachine_gotfocus.start

Gui.frmComp.txtMachine.SelectAll


program.sub.txtmachine_gotfocus.End

program.sub.txtriblength_gotfocus.start

Gui.frmComp.txtRibLength.SelectAll

program.sub.txtriblength_gotfocus.End

program.sub.txtnumberoribs_gotfocus.start

Gui.frmComp.txtNumberoRibs.SelectAll

program.sub.txtnumberoribs_gotfocus.End

program.sub.txtribwireamw#_gotfocus.start

Gui.frmComp.txtRibWireAMW#.SelectAll

program.sub.txtribwireamw#_gotfocus.End

program.sub.txtwrapwireamw#_gotfocus.start

Gui.frmComp.txtWrapWireAMW#.SelectAll

program.sub.txtwrapwireamw#_gotfocus.End

program.sub.txtactcutlength_gotfocus.start

Gui.frmComp.txtActCutLength.SelectAll

program.sub.txtactcutlength_gotfocus.End

program.sub.txtrpm_gotfocus.start

Gui.frmComp.txtRPM.SelectAll


program.sub.txtrpm_gotfocus.End

program.sub.txtheatcontrol_gotfocus.start

Gui.frmComp.txtHeatControl.SelectAll

program.sub.txtheatcontrol_gotfocus.End

program.sub.txtcomputer_gotfocus.start

Gui.frmComp.txtComputer.SelectAll

program.sub.txtcomputer_gotfocus.End

program.sub.txttransformer_gotfocus.start

Gui.frmComp.txtTransformer.SelectAll


program.sub.txttransformer_gotfocus.End

program.sub.txtarmweight_gotfocus.start

Gui.frmComp.txtArmWeight.SelectAll

program.sub.txtarmweight_gotfocus.End

program.sub.txtamps_gotfocus.start

Gui.frmComp.txtAmps.SelectAll

program.sub.txtamps_gotfocus.End

program.sub.txtvolts_gotfocus.start

Gui.frmComp.txtVolts.SelectAll


program.sub.txtvolts_gotfocus.End

program.sub.gsfgsections_posttextmatrix.start
F.Intrinsic.Control.SetErrorHandler("gsfgsections_posttextmatrix_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iRow.Declare(Long)
V.Local.iR.declare(Long)
V.Local.iTot.Declare(Float)
V.Local.sRet.Declare(String)
V.Local.iRet.Declare(Float)

'This is a calc that will go through and calculate what they entered in the grids.
F.Intrinsic.Control.If(V.Args.column,=,4)
	'column 4
	F.Intrinsic.Math.Sub(V.Screen.frmPipeLayout!gsfgSections.Rows,1,V.Local.iRow)

	F.Intrinsic.Control.For(V.Local.iR,0,V.Local.iRow,1)
		Gui.frmPipeLayout.gsfgSections.GetTextMatrix(4,V.Local.iR,V.Local.sRet)
		f.Intrinsic.Variable.SetNumeric(v.Local.sRet,0,v.Local.iRet)
		F.Intrinsic.Math.Add(V.Local.iRet,V.Local.iTot,V.Local.iTot)
	F.Intrinsic.Control.Next(V.Local.iR)
	'so now we update our text matrix of Column header
	F.Intrinsic.String.Build("Act. Section Length (In) {0}",V.Local.iTot,V.Local.sRet)
	Gui.frmPipeLayout.gsfgSections.TextMatrix(4,0,V.Local.sRet)
F.Intrinsic.Control.ElseIf(V.Args.column,=,6)
	'column 4
	F.Intrinsic.Math.Sub(V.Screen.frmPipeLayout!gsfgSections.Rows,1,V.Local.iRow)

	F.Intrinsic.Control.For(V.Local.iR,0,V.Local.iRow,1)
		Gui.frmPipeLayout.gsfgSections.GetTextMatrix(6,V.Local.iR,V.Local.sRet)
		f.Intrinsic.Variable.SetNumeric(v.Local.sRet,0,v.Local.iRet)
		F.Intrinsic.Math.Add(V.Local.iRet,V.Local.iTot,V.Local.iTot)
	F.Intrinsic.Control.Next(V.Local.iR)
	'so now we update our text matrix of Column header
	F.Intrinsic.String.Build("Act. Perf. Length (In) {0}",V.Local.iTot,V.Local.sRet)
	Gui.frmPipeLayout.gsfgSections.TextMatrix(6,0,V.Local.sRet)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgsections_posttextmatrix_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.gsfgsections_posttextmatrix.End

program.sub.cmdserial_click.start
F.Intrinsic.Control.SetErrorHandler("cmdserial_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sTitle.Declare(String)
V.Local.iWidth.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sForm.Declare(String)


'When clicking, it should show only serial numbers that have been saved at pipe layout for that specific job.
'Reason being ? the rib cutters do not get copies of serial numbers and do not know what lengths to cut until it?s been through layout.
'So, if we key the browser off of that, they can start cutting ribs without paperwork and cut for the right stuff.
'**Don't want Sequence in this query. since they want to look up previous information i'm assuming.
'this will pull if it's a pipe based brod = 'fasle'
'if brod = True we have to figure out what table to pull from? Pipe_Operations?
F.Intrinsic.Control.If(V.Global.bRod,=,False)
	F.Intrinsic.String.Build("Select Distinct Serial,Pipe_NO,  Pipe_Length, Pipe_Cut_Length, Joint_Number, Measured_From From GCG_Pipe_Layout Where JOb = '{0}' And Suffix = '{1}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)
	F.Intrinsic.String.Split("Serial*!*Pipe No*!*Pipe Length*!* Pipe Cut Length*!*Joint Number*!*Measured From","*!*",V.Local.sTitle)
	F.Intrinsic.String.Split("1500*!*1500*!*1500*!*1500*!*1500*!*1500","*!*",V.Local.iWidth)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("Select Distinct Serial, Num_Ribs,Rib_Length,Rib_Wire_NO, Wrap_Wire_No From GCG_Screen_Comp Where Job = '{0}' And Suffix = '{1}' Order By Serial",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.Local.sSQL)
	F.Intrinsic.String.Split("Serial*!*# Ribs*!*Rib Length*!*Rib Wire No*!*Wrap Wire No","*!*",V.Local.sTitle)
	F.Intrinsic.String.Split("2000*!*1500*!*1500*!*1500*!*1500","*!*",V.Local.iWidth)
	
F.Intrinsic.Control.EndIf



F.Intrinsic.UI.Browser("Previous Serials for Job...","conX",V.Local.sSQL,V.Local.sTitle,V.Local.iWidth,10000,10000,V.Local.sForm,V.Local.sForm,V.Local.sRet)

F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	Gui.frmMain.txtSerial_Main.Text(V.Local.sRet(0).Trim)
	Gui.frmMain.cmdMain_Continue.SetFocus
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdserial_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdserial_click.End

Program.Sub.Rod_Pipe.Start
F.Intrinsic.Control.SetErrorHandler("Rod_Pipe_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.iC.Declare(Long)

'grab fg part from work order header. going to be useful in all other screens.
F.Intrinsic.String.Build("Select Part From V_Job_Header Where Job = '{0}' And Suffix = '{1}'",V.Global.sJob.Trim,V.Global.sSuffix.Trim,V.local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!rst.EOF,=,False)
	V.Global.sFGPart.Set(V.ODBC.conX!rst.FieldValTrim!Part)
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox("Finished Good Part Cannot be Determined.")
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf
F.ODBC.conX!rst.Close

'determine if we are dealing with a rod based part or a pipe based part.
F.Intrinsic.String.Build("Select Sort_CODE From GCG_Config Where Part = '{0}'",V.Global.sFGPart,V.Local.sSQL)
F.ODBC.Connection!conX.OpenLocalRecordsetRO("RstTemp",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conX!RstTemp.EOF,<>,True)
	'according to Kenneth, we have to convert this number to inches. not feet.
	'i guess it's still being stored as feet since we are getting it from the table that way
'	F.Intrinsic.Math.Mult(V.ODBC.conX!RstTemp.FieldVal!Screen_Length,12,V.Local.fInches)

'	Gui.frmComp.txtScreenCutLength.Text(V.Local.fInches)
	'figure out if it's pipe or rod, based on returned sort code then going into GCG_CONFIG_SC Table to determine if true or false it's a rod.
	F.Intrinsic.String.Build("Select Flag_Pipe From GCG_CONFIG_SC Where Sort_Code = '{0}'",V.ODBC.conX!RstTemp.FieldValTrim!Sort_Code,V.Local.sSQL)
	F.ODBC.Connection!conX.OpenLocalRecordsetRO("rstCheck",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conX!rstCheck.EOF,<>,True)
		'is it true or false?
		F.Intrinsic.Control.If(V.ODBC.conX!rstCheck.FieldValTrim!Flag_Pipe,=,"True")
			V.Global.bRod.Set(False)
		F.Intrinsic.Control.Else
			V.Global.bRod.Set(True)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		V.Global.bRod.Set(False)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
	


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Rod_Pipe_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_Alloy_PipeTracking.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Rod_Pipe.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM
Program.Sub.Comments.End

